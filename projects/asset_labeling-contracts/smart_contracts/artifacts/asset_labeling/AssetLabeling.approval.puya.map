{
  "version": 3,
  "sources": [
    "../../asset_labeling/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;AAAA;;AAwFK;;AAAA;AAAA;AAAA;;AAAA;AAxFL;;;AAAA;AAAA;;AAwFK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AArBA;;AAAA;AAAA;AAAA;;AAAA;AAnEL;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAmEK;;;AAAA;;AA1BA;;AAAA;AAAA;AAAA;;AAAA;AAzCL;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAyCK;;;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AA1BL;;;AAAA;;;AA0BK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AAlBL;;;AAAA;;;AAkBK;;;AAAA;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAPL;;;AAAA;;;AAAA;;;AAAA;;;AAOK;;;AAAA;;AAPL;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;;;AAGe;;AAAA;AAAA;;AArBR;;;AAqB+B;AApB9B;AACA;AAoBO;;AAAA;AAAmB;AAAnB;AAtBR;;;AAsB8B;AArB7B;AACA;AAsBI;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AADc;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAlB;;AAAA;;AAAA;;AAAA;AAAA;;AAMR;;;AAGe;;AAAA;AAAA;;AAhCR;;;AAgC2B;AA/B1B;AACA;AA+BO;;AAAA;AAAmB;AAAnB;AAjCR;;;AAiC8B;AAhC7B;AACA;AAgCO;;AAAA;AAAA;AAAA;;;AAA8B;;;;;;;;;;AAA9B;AAlCR;;;AAkCyC;;;;;;;;;;;;;AAjCxC;AACA;AAiCA;;AAAA;;;AAER;;;AAEe;;AAAA;AAAA;;AAvCR;;;AAuC2B;AAtC1B;AACA;AAsCO;;AAAA;AAAA;AAAP;AAIR;;;;;;;AAEe;;AAAA;AAAA;;AA9CR;;;AA8CoC;AA7CnC;AACA;AA6CoC;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAA5C;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACe;;;AAAA;;AAAA;AAAf;;;AACgB;;AAAA;;AAAA;;;;;;;;;;AACD;AAAP;;AAAA;AAER;;;AAEe;;AAAA;AAAA;;AAtDR;;;AAsD8B;AArD7B;AACA;AAsDG;;AAAA;AAAA;;AAAX;;;AAGgB;;AAAA;;AAAA;;;AAAkD;AAAlD;AA3DT;;;AA4DS;AA3DR;AACA;AA8De;;AAAA;AAAA;AACK;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAhB;AAAA;;;AACA;;AAAA;;AAAA;;AAAA;AAAA;AAMe;;AAAA;AAAA;AAEf;AAAA;;AAAA;AAAwC;AAAxC;AAD6B;AAAjC;;AAGA;;AAAA;;AAAA;;AAAA;AAAA;;AAPiD;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAlB;;;;AAAA;AAAA;AAAA;;;;AAAA;AAAA;AAA3B;;AAAA;;AAAA;;AAAA;AAAA;;;;AASZ;;;;;;;;;;AAEe;;AAAA;AAAA;;AAhFR;;;AAgF8B;AA/E7B;AACA;AA+EO;;AAAA;AAAA;;AAjFR;;;AAiFoC;AAhFnC;AACA;AAiFA;;AAAA;;AAAY;;;AAAZ;AAAA;;AACoB;AAAb;AApFR;;;AAoFwC;AAnFvC;AACA;AAoFG;;AAAA;AAAA;AAAA;AAAA;AAAmC;AAAnC;AAAX;;;AACY;;AAAA;;;AAEY;;;;AAAA;;AAIwB;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAhD;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgB;;AACG;;AAAA;;;;;AAAnB;;;AACoB;;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAER;;AAAA;;AAAA;;AAAA;;AAAA;;AAEZ;;;AAEe;;AAAA;AAAA;;AArGR;;;AAqGoC;AApGnC;AACA;AAoGO;;AAAA;AAAA;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 2 0 4294967295"
    },
    "11": {
      "op": "bytecblock \"ERR:NOEXIST\" 0x151f7c75 \"ERR:EXISTS\" \"ERR:LENGTH\""
    },
    "52": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "54": {
      "op": "bz main_bare_routing@11",
      "stack_out": []
    },
    "57": {
      "op": "pushbytess 0x7c1b32f6 0x17e691ae 0x33d0ffdc 0xfac1cf1b 0xb4c50b9f 0xa2dd2247 // method \"add_label(string,string)void\", method \"remove_label(string)void\", method \"get_label(string)(string,uint64,uint64)\", method \"add_operator_to_label(account,string)void\", method \"remove_operator_from_label(account,string)void\", method \"get_operator_labels(account)string[]\"",
      "defined_out": [
        "Method(add_label(string,string)void)",
        "Method(add_operator_to_label(account,string)void)",
        "Method(get_label(string)(string,uint64,uint64))",
        "Method(get_operator_labels(account)string[])",
        "Method(remove_label(string)void)",
        "Method(remove_operator_from_label(account,string)void)"
      ],
      "stack_out": [
        "Method(add_label(string,string)void)",
        "Method(remove_label(string)void)",
        "Method(get_label(string)(string,uint64,uint64))",
        "Method(add_operator_to_label(account,string)void)",
        "Method(remove_operator_from_label(account,string)void)",
        "Method(get_operator_labels(account)string[])"
      ]
    },
    "89": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(add_label(string,string)void)",
        "Method(add_operator_to_label(account,string)void)",
        "Method(get_label(string)(string,uint64,uint64))",
        "Method(get_operator_labels(account)string[])",
        "Method(remove_label(string)void)",
        "Method(remove_operator_from_label(account,string)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(add_label(string,string)void)",
        "Method(remove_label(string)void)",
        "Method(get_label(string)(string,uint64,uint64))",
        "Method(add_operator_to_label(account,string)void)",
        "Method(remove_operator_from_label(account,string)void)",
        "Method(get_operator_labels(account)string[])",
        "tmp%2#0"
      ]
    },
    "92": {
      "op": "match main_add_label_route@5 main_remove_label_route@6 main_get_label_route@7 main_add_operator_to_label_route@8 main_remove_operator_from_label_route@9 main_get_operator_labels_route@10",
      "stack_out": []
    },
    "106": {
      "block": "main_after_if_else@13",
      "stack_in": [],
      "op": "intc_2 // 0",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "107": {
      "op": "return",
      "stack_out": []
    },
    "108": {
      "block": "main_get_operator_labels_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "110": {
      "op": "!",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "111": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "112": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "114": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "115": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "118": {
      "op": "btoi",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "119": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "121": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_labels",
      "op": "callsub get_operator_labels",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "124": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "0x151f7c75"
      ]
    },
    "125": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%47#0"
      ]
    },
    "126": {
      "op": "concat",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "127": {
      "op": "log",
      "stack_out": []
    },
    "128": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "129": {
      "op": "return",
      "stack_out": []
    },
    "130": {
      "block": "main_remove_operator_from_label_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "132": {
      "op": "!",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "133": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "134": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "136": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "137": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "140": {
      "op": "btoi",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "141": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "143": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "tmp%39#0"
      ]
    },
    "146": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%38#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "tmp%40#0"
      ]
    },
    "149": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_operator_from_label",
      "op": "callsub remove_operator_from_label",
      "stack_out": []
    },
    "152": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "153": {
      "op": "return",
      "stack_out": []
    },
    "154": {
      "block": "main_add_operator_to_label_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "156": {
      "op": "!",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "157": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "158": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "160": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "161": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "164": {
      "op": "btoi",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "165": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "167": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%30#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "tmp%31#0"
      ]
    },
    "170": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%30#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "tmp%32#0"
      ]
    },
    "173": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.add_operator_to_label",
      "op": "callsub add_operator_to_label",
      "stack_out": []
    },
    "176": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "177": {
      "op": "return",
      "stack_out": []
    },
    "178": {
      "block": "main_get_label_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "180": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "181": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "182": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "184": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "185": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "188": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "191": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_label",
      "op": "callsub get_label",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "194": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "0x151f7c75"
      ]
    },
    "195": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%23#0"
      ]
    },
    "196": {
      "op": "concat",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "197": {
      "op": "log",
      "stack_out": []
    },
    "198": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "199": {
      "op": "return",
      "stack_out": []
    },
    "200": {
      "block": "main_remove_label_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "202": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "203": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "204": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "206": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "207": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "210": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "213": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_label",
      "op": "callsub remove_label",
      "stack_out": []
    },
    "216": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "217": {
      "op": "return",
      "stack_out": []
    },
    "218": {
      "block": "main_add_label_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "220": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "221": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "222": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "224": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "225": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "228": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "231": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "234": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "237": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.add_label",
      "op": "callsub add_label",
      "stack_out": []
    },
    "240": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "241": {
      "op": "return",
      "stack_out": []
    },
    "242": {
      "block": "main_bare_routing@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "244": {
      "op": "bnz main_after_if_else@13",
      "stack_out": []
    },
    "247": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "249": {
      "op": "!",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "250": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "251": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "252": {
      "op": "return",
      "stack_out": []
    },
    "253": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64"
      },
      "block": "dynamic_array_concat_byte_length_head",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "256": {
      "op": "frame_dig -3",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "258": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "259": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "260": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "261": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "263": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "new_length#0"
      ]
    },
    "264": {
      "op": "swap",
      "stack_out": [
        "new_length#0",
        "array_length#0"
      ]
    },
    "265": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "array_length#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "array_length#0",
        "2"
      ]
    },
    "266": {
      "op": "*",
      "defined_out": [
        "new_length#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%0#0"
      ]
    },
    "267": {
      "op": "intc_1 // 2",
      "stack_out": [
        "new_length#0",
        "tmp%0#0",
        "2"
      ]
    },
    "268": {
      "op": "+",
      "defined_out": [
        "header_end#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0"
      ]
    },
    "269": {
      "op": "dig 1",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "new_length#0 (copy)"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "new_length#0 (copy)"
      ]
    },
    "271": {
      "op": "itob",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "tmp%1#0"
      ]
    },
    "272": {
      "op": "extract 6 2",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "tmp%2#0"
      ]
    },
    "275": {
      "op": "cover 2",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0"
      ]
    },
    "277": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "array#0 (copy)"
      ]
    },
    "279": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "array#0 (copy)",
        "2"
      ]
    },
    "280": {
      "op": "dig 2",
      "defined_out": [
        "2",
        "array#0 (copy)",
        "header_end#0",
        "header_end#0 (copy)",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "array#0 (copy)",
        "2",
        "header_end#0 (copy)"
      ]
    },
    "282": {
      "op": "substring3",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0"
      ]
    },
    "283": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0",
        "new_items_count#0 (copy)"
      ]
    },
    "285": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "286": {
      "op": "*",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "287": {
      "op": "bzero",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "288": {
      "op": "concat",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0"
      ]
    },
    "289": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "array#0 (copy)"
      ]
    },
    "291": {
      "op": "len",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "292": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "tmp%7#0",
        "array#0 (copy)"
      ]
    },
    "294": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0",
        "tmp%7#0",
        "array#0 (copy)",
        "header_end#0"
      ]
    },
    "296": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0",
        "array#0 (copy)",
        "header_end#0",
        "tmp%7#0"
      ]
    },
    "298": {
      "op": "substring3",
      "defined_out": [
        "new_length#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "299": {
      "op": "concat",
      "defined_out": [
        "new_length#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%9#0"
      ]
    },
    "300": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "new_length#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%9#0",
        "new_items_bytes#0 (copy)"
      ]
    },
    "302": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail#0",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "array_head_and_tail#0"
      ]
    },
    "303": {
      "op": "swap",
      "defined_out": [
        "array_head_and_tail#0",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "new_length#0"
      ]
    },
    "304": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "new_length#0",
        "2"
      ]
    },
    "305": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail#0",
        "tail_offset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "306": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0",
        "tail_offset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#0"
      ]
    },
    "307": {
      "op": "intc_2 // 0",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#0",
        "head_offset#0"
      ]
    },
    "308": {
      "op": "swap",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "309": {
      "block": "dynamic_array_concat_byte_length_head_for_header@2",
      "stack_in": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ]
    },
    "311": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#0"
      ]
    },
    "313": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "continue_looping%0#0"
      ]
    },
    "314": {
      "op": "bz dynamic_array_concat_byte_length_head_after_for@5",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "317": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1"
      ]
    },
    "319": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset#1 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset#1 (copy)"
      ]
    },
    "320": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tmp%5#0"
      ]
    },
    "321": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ]
    },
    "324": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0"
      ]
    },
    "326": {
      "op": "frame_dig 3",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0",
        "head_offset#0"
      ]
    },
    "328": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "head_offset#0 (copy)",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "329": {
      "op": "cover 4",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0",
        "head_offset#0 (copy)"
      ]
    },
    "331": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0",
        "head_offset#0 (copy)",
        "tail_offset_bytes#0"
      ]
    },
    "333": {
      "op": "replace3",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0"
      ]
    },
    "334": {
      "op": "dup",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0",
        "array_head_and_tail#0"
      ]
    },
    "335": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0"
      ]
    },
    "337": {
      "op": "dig 1",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0",
        "tail_offset#1 (copy)"
      ]
    },
    "339": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tmp%6#1"
      ]
    },
    "340": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tmp%6#1",
        "2"
      ]
    },
    "341": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tmp%7#0"
      ]
    },
    "342": {
      "op": "+",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "343": {
      "op": "frame_bury 4",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ]
    },
    "345": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "2"
      ]
    },
    "346": {
      "op": "+",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ]
    },
    "347": {
      "op": "frame_bury 3",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "349": {
      "op": "b dynamic_array_concat_byte_length_head_for_header@2"
    },
    "352": {
      "block": "dynamic_array_concat_byte_length_head_after_for@5",
      "stack_in": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tmp%2#0"
      ]
    },
    "354": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_head_and_tail#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tmp%2#0",
        "array_head_and_tail#0"
      ]
    },
    "356": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tmp%12#0"
      ]
    },
    "357": {
      "op": "frame_bury 0"
    },
    "359": {
      "retsub": true,
      "op": "retsub"
    },
    "360": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.add_label",
      "params": {
        "id#0": "bytes",
        "name#0": "bytes"
      },
      "block": "add_label",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "363": {
      "op": "frame_dig -2",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "365": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "366": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "368": {
      "op": "bz add_label_after_if_else@3",
      "stack_out": []
    },
    "371": {
      "op": "bytec_2 // \"ERR:EXISTS\"",
      "defined_out": [
        "\"ERR:EXISTS\""
      ],
      "stack_out": [
        "\"ERR:EXISTS\""
      ]
    },
    "372": {
      "op": "log",
      "stack_out": []
    },
    "373": {
      "op": "err"
    },
    "374": {
      "block": "add_label_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "376": {
      "op": "len",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "377": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "2"
      ]
    },
    "378": {
      "op": "==",
      "defined_out": [
        "cond#1"
      ],
      "stack_out": [
        "cond#1"
      ]
    },
    "379": {
      "op": "bnz add_label_after_if_else@7",
      "stack_out": []
    },
    "382": {
      "op": "bytec_3 // \"ERR:LENGTH\"",
      "defined_out": [
        "\"ERR:LENGTH\""
      ],
      "stack_out": [
        "\"ERR:LENGTH\""
      ]
    },
    "383": {
      "op": "log",
      "stack_out": []
    },
    "384": {
      "op": "err"
    },
    "385": {
      "block": "add_label_after_if_else@7",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "name#0 (copy)"
      ],
      "stack_out": [
        "name#0 (copy)"
      ]
    },
    "387": {
      "op": "len",
      "defined_out": [
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0"
      ]
    },
    "388": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0"
      ],
      "stack_out": [
        "as_bytes%0#0"
      ]
    },
    "389": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0"
      ],
      "stack_out": [
        "length_uint16%0#0"
      ]
    },
    "392": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_uint16%0#0",
        "name#0 (copy)"
      ]
    },
    "394": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "395": {
      "op": "pushbytes 0x001200000000000000000000000000000000",
      "defined_out": [
        "0x001200000000000000000000000000000000",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x001200000000000000000000000000000000"
      ]
    },
    "415": {
      "op": "swap",
      "stack_out": [
        "0x001200000000000000000000000000000000",
        "encoded_value%0#0"
      ]
    },
    "416": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0"
      ]
    },
    "417": {
      "op": "frame_dig -2",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "id#0 (copy)"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "id#0 (copy)"
      ]
    },
    "419": {
      "op": "box_del",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "{box_del}"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "{box_del}"
      ]
    },
    "420": {
      "op": "pop",
      "stack_out": [
        "encoded_tuple_buffer%4#0"
      ]
    },
    "421": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "id#0 (copy)"
      ]
    },
    "423": {
      "op": "swap",
      "stack_out": [
        "id#0 (copy)",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "424": {
      "op": "box_put",
      "stack_out": []
    },
    "425": {
      "retsub": true,
      "op": "retsub"
    },
    "426": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_label",
      "params": {
        "id#0": "bytes"
      },
      "block": "remove_label",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "429": {
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "431": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "432": {
      "op": "bury 1",
      "stack_out": [
        "cond#0"
      ]
    },
    "434": {
      "op": "bnz remove_label_after_if_else@3",
      "stack_out": []
    },
    "437": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "\"ERR:NOEXIST\""
      ]
    },
    "438": {
      "op": "log",
      "stack_out": []
    },
    "439": {
      "op": "err"
    },
    "440": {
      "block": "remove_label_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "442": {
      "op": "len",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "443": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "2"
      ]
    },
    "444": {
      "op": "==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "445": {
      "op": "bnz remove_label_after_if_else@7",
      "stack_out": []
    },
    "448": {
      "op": "bytec_3 // \"ERR:LENGTH\"",
      "defined_out": [
        "\"ERR:LENGTH\""
      ],
      "stack_out": [
        "\"ERR:LENGTH\""
      ]
    },
    "449": {
      "op": "log",
      "stack_out": []
    },
    "450": {
      "op": "err"
    },
    "451": {
      "block": "remove_label_after_if_else@7",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "453": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "454": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "455": {
      "error": "Index access is out of bounds",
      "op": "extract 2 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "458": {
      "op": "pushbytes 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "0x0000000000000000"
      ]
    },
    "468": {
      "op": "b==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "469": {
      "op": "bnz remove_label_after_if_else@11",
      "stack_out": []
    },
    "472": {
      "op": "pushbytes \"ERR:NOEMPTY\"",
      "defined_out": [
        "\"ERR:NOEMPTY\""
      ],
      "stack_out": [
        "\"ERR:NOEMPTY\""
      ]
    },
    "485": {
      "op": "log",
      "stack_out": []
    },
    "486": {
      "op": "err"
    },
    "487": {
      "block": "remove_label_after_if_else@11",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "489": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "490": {
      "op": "pop",
      "stack_out": []
    },
    "491": {
      "retsub": true,
      "op": "retsub"
    },
    "492": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_label",
      "params": {
        "id#0": "bytes"
      },
      "block": "get_label",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "495": {
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "497": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "498": {
      "op": "bury 1",
      "stack_out": [
        "cond#0"
      ]
    },
    "500": {
      "op": "bnz get_label_after_if_else@3",
      "stack_out": []
    },
    "503": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "\"ERR:NOEXIST\""
      ]
    },
    "504": {
      "op": "log",
      "stack_out": []
    },
    "505": {
      "op": "err"
    },
    "506": {
      "block": "get_label_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "508": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "509": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "510": {
      "retsub": true,
      "op": "retsub"
    },
    "511": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_label_index",
      "params": {
        "operator#0": "bytes",
        "label#0": "bytes"
      },
      "block": "get_operator_label_index",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "514": {
      "op": "intc_2 // 0",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "515": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0"
      ]
    },
    "517": {
      "op": "dup",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "518": {
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "operator#0 (copy)"
      ]
    },
    "520": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "521": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "cond#0"
      ]
    },
    "523": {
      "op": "bnz get_operator_label_index_after_if_else@9",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "526": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "527": {
      "op": "log",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "528": {
      "op": "err"
    },
    "529": {
      "block": "get_operator_label_index_after_if_else@9",
      "stack_in": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "operator#0 (copy)"
      ]
    },
    "531": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "532": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ]
    },
    "533": {
      "op": "dup",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "534": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ]
    },
    "536": {
      "op": "frame_bury 0",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "538": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ]
    },
    "539": {
      "op": "intc_2 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "540": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_length%0#0"
      ]
    },
    "541": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "543": {
      "op": "intc_2 // 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "544": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "546": {
      "block": "get_operator_label_index_for_header@1",
      "stack_in": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "548": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0",
        "array_length%0#0"
      ]
    },
    "550": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "continue_looping%0#0"
      ]
    },
    "551": {
      "op": "bz get_operator_label_index_after_for@6",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "554": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ]
    },
    "556": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0"
      ]
    },
    "559": {
      "op": "frame_dig 2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0"
      ]
    },
    "561": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0",
        "2"
      ]
    },
    "562": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "563": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "565": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "566": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "567": {
      "op": "dup2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset%0#0 (copy)"
      ]
    },
    "568": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_length%0#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0"
      ]
    },
    "569": {
      "op": "intc_1 // 2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0",
        "2"
      ]
    },
    "570": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_head_tail_length%0#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_head_tail_length%0#0"
      ]
    },
    "571": {
      "op": "extract3",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "stored_label#0"
      ]
    },
    "572": {
      "op": "extract 2 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%2#0"
      ]
    },
    "575": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label#0 (copy)",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%2#0",
        "label#0 (copy)"
      ]
    },
    "577": {
      "op": "==",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%3#0"
      ]
    },
    "578": {
      "op": "bz get_operator_label_index_after_if_else@4",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "581": {
      "op": "frame_dig 2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "583": {
      "op": "frame_bury 0"
    },
    "585": {
      "retsub": true,
      "op": "retsub"
    },
    "586": {
      "block": "get_operator_label_index_after_if_else@4",
      "stack_in": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "588": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0",
        "1"
      ]
    },
    "589": {
      "op": "+",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "590": {
      "op": "frame_bury 2",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "592": {
      "op": "b get_operator_label_index_for_header@1"
    },
    "595": {
      "block": "get_operator_label_index_after_for@6",
      "stack_in": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "intc_3 // 4294967295",
      "defined_out": [
        "4294967295"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "4294967295"
      ]
    },
    "596": {
      "op": "frame_bury 0"
    },
    "598": {
      "retsub": true,
      "op": "retsub"
    },
    "599": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.add_operator_to_label",
      "params": {
        "operator#0": "bytes",
        "label#0": "bytes"
      },
      "block": "add_operator_to_label",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "602": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "604": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "605": {
      "op": "bury 1",
      "stack_out": [
        "cond#0"
      ]
    },
    "607": {
      "op": "bnz add_operator_to_label_after_if_else@10",
      "stack_out": []
    },
    "610": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "\"ERR:NOEXIST\""
      ]
    },
    "611": {
      "op": "log",
      "stack_out": []
    },
    "612": {
      "op": "err"
    },
    "613": {
      "block": "add_operator_to_label_after_if_else@10",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "615": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "616": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "618": {
      "op": "bz add_operator_to_label_else_body@2",
      "stack_out": []
    },
    "621": {
      "op": "frame_dig -2",
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "623": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "operator#0 (copy)",
        "label#0 (copy)"
      ]
    },
    "625": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_label_index",
      "op": "callsub get_operator_label_index",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "628": {
      "op": "intc_3 // 4294967295",
      "defined_out": [
        "4294967295",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "4294967295"
      ]
    },
    "629": {
      "op": "==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "630": {
      "op": "bnz add_operator_to_label_after_if_else@6",
      "stack_out": []
    },
    "633": {
      "op": "bytec_2 // \"ERR:EXISTS\"",
      "defined_out": [
        "\"ERR:EXISTS\""
      ],
      "stack_out": [
        "\"ERR:EXISTS\""
      ]
    },
    "634": {
      "op": "log",
      "stack_out": []
    },
    "635": {
      "op": "err"
    },
    "636": {
      "block": "add_operator_to_label_after_if_else@6",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "638": {
      "op": "box_get",
      "defined_out": [
        "existing#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "existing#0",
        "maybe_exists%2#0"
      ]
    },
    "639": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "existing#0"
      ]
    },
    "640": {
      "op": "frame_dig -1",
      "defined_out": [
        "existing#0",
        "label#0 (copy)"
      ],
      "stack_out": [
        "existing#0",
        "label#0 (copy)"
      ]
    },
    "642": {
      "op": "len",
      "defined_out": [
        "existing#0",
        "length%0#0"
      ],
      "stack_out": [
        "existing#0",
        "length%0#0"
      ]
    },
    "643": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "existing#0"
      ],
      "stack_out": [
        "existing#0",
        "as_bytes%0#0"
      ]
    },
    "644": {
      "op": "extract 6 2",
      "defined_out": [
        "existing#0",
        "length_uint16%0#0"
      ],
      "stack_out": [
        "existing#0",
        "length_uint16%0#0"
      ]
    },
    "647": {
      "op": "frame_dig -1",
      "stack_out": [
        "existing#0",
        "length_uint16%0#0",
        "label#0 (copy)"
      ]
    },
    "649": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "existing#0"
      ],
      "stack_out": [
        "existing#0",
        "encoded_value%0#0"
      ]
    },
    "650": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "encoded_value%0#0",
        "existing#0"
      ],
      "stack_out": [
        "existing#0",
        "encoded_value%0#0",
        "1"
      ]
    },
    "651": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "stack_out": [
        "existing#0"
      ]
    },
    "654": {
      "op": "frame_dig -2",
      "stack_out": [
        "existing#0",
        "operator#0 (copy)"
      ]
    },
    "656": {
      "op": "box_del",
      "defined_out": [
        "existing#0",
        "{box_del}"
      ],
      "stack_out": [
        "existing#0",
        "{box_del}"
      ]
    },
    "657": {
      "op": "pop",
      "stack_out": [
        "existing#0"
      ]
    },
    "658": {
      "op": "frame_dig -2",
      "stack_out": [
        "existing#0",
        "operator#0 (copy)"
      ]
    },
    "660": {
      "op": "swap",
      "stack_out": [
        "operator#0 (copy)",
        "existing#0"
      ]
    },
    "661": {
      "op": "box_put",
      "stack_out": []
    },
    "662": {
      "block": "add_operator_to_label_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "664": {
      "op": "box_get",
      "defined_out": [
        "label_descriptor#0",
        "maybe_exists%3#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_exists%3#0"
      ]
    },
    "665": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "label_descriptor#0"
      ]
    },
    "666": {
      "op": "dup",
      "defined_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ]
    },
    "667": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)",
        "10"
      ]
    },
    "669": {
      "op": "extract_uint64",
      "defined_out": [
        "label_descriptor#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "tmp%9#0"
      ]
    },
    "670": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "label_descriptor#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "tmp%9#0",
        "1"
      ]
    },
    "671": {
      "op": "+",
      "defined_out": [
        "label_descriptor#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "to_encode%0#0"
      ]
    },
    "672": {
      "op": "itob",
      "defined_out": [
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ]
    },
    "673": {
      "op": "replace2 10",
      "stack_out": [
        "label_descriptor#0"
      ]
    },
    "675": {
      "op": "frame_dig -1",
      "stack_out": [
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "677": {
      "op": "box_del",
      "defined_out": [
        "label_descriptor#0",
        "{box_del}"
      ],
      "stack_out": [
        "label_descriptor#0",
        "{box_del}"
      ]
    },
    "678": {
      "op": "pop",
      "stack_out": [
        "label_descriptor#0"
      ]
    },
    "679": {
      "op": "frame_dig -1",
      "stack_out": [
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "681": {
      "op": "swap",
      "stack_out": [
        "label#0 (copy)",
        "label_descriptor#0"
      ]
    },
    "682": {
      "op": "box_put",
      "stack_out": []
    },
    "683": {
      "retsub": true,
      "op": "retsub"
    },
    "684": {
      "block": "add_operator_to_label_else_body@2",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "686": {
      "op": "len",
      "defined_out": [
        "length%1#0"
      ],
      "stack_out": [
        "length%1#0"
      ]
    },
    "687": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0"
      ],
      "stack_out": [
        "as_bytes%1#0"
      ]
    },
    "688": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%1#0"
      ],
      "stack_out": [
        "length_uint16%1#0"
      ]
    },
    "691": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_uint16%1#0",
        "label#0 (copy)"
      ]
    },
    "693": {
      "op": "concat",
      "defined_out": [
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0"
      ]
    },
    "694": {
      "op": "pushbytes 0x0002",
      "defined_out": [
        "0x0002",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "0x0002"
      ]
    },
    "698": {
      "op": "swap",
      "stack_out": [
        "0x0002",
        "encoded_value%1#0"
      ]
    },
    "699": {
      "op": "concat",
      "defined_out": [
        "result%1#0"
      ],
      "stack_out": [
        "result%1#0"
      ]
    },
    "700": {
      "op": "pushbytes 0x0001",
      "defined_out": [
        "0x0001",
        "result%1#0"
      ],
      "stack_out": [
        "result%1#0",
        "0x0001"
      ]
    },
    "704": {
      "op": "swap",
      "stack_out": [
        "0x0001",
        "result%1#0"
      ]
    },
    "705": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0"
      ]
    },
    "706": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_data%0#0",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "array_data%0#0",
        "operator#0 (copy)"
      ]
    },
    "708": {
      "op": "box_del",
      "defined_out": [
        "array_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "array_data%0#0",
        "{box_del}"
      ]
    },
    "709": {
      "op": "pop",
      "stack_out": [
        "array_data%0#0"
      ]
    },
    "710": {
      "op": "frame_dig -2",
      "stack_out": [
        "array_data%0#0",
        "operator#0 (copy)"
      ]
    },
    "712": {
      "op": "swap",
      "stack_out": [
        "operator#0 (copy)",
        "array_data%0#0"
      ]
    },
    "713": {
      "op": "box_put",
      "stack_out": []
    },
    "714": {
      "op": "b add_operator_to_label_after_if_else@3"
    },
    "717": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_operator_from_label",
      "params": {
        "operator#0": "bytes",
        "label#0": "bytes"
      },
      "block": "remove_operator_from_label",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "720": {
      "op": "intc_2 // 0",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "721": {
      "op": "dupn 3",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0"
      ]
    },
    "723": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0"
      ]
    },
    "725": {
      "op": "dupn 2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "727": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label#0 (copy)"
      ]
    },
    "729": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "730": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "732": {
      "op": "bnz remove_operator_from_label_after_if_else@12",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "735": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "736": {
      "op": "log",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "737": {
      "op": "err"
    },
    "738": {
      "block": "remove_operator_from_label_after_if_else@12",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "740": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%1#0",
        "cond#0"
      ]
    },
    "741": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "743": {
      "op": "bnz remove_operator_from_label_after_if_else@16",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "746": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "747": {
      "op": "log",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "748": {
      "op": "err"
    },
    "749": {
      "block": "remove_operator_from_label_after_if_else@16",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "751": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)",
        "label#0 (copy)"
      ]
    },
    "753": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_label_index",
      "op": "callsub get_operator_label_index",
      "defined_out": [
        "label_idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0"
      ]
    },
    "756": {
      "op": "dup",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0",
        "label_idx#0"
      ]
    },
    "757": {
      "op": "frame_bury 6",
      "defined_out": [
        "label_idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0"
      ]
    },
    "759": {
      "op": "intc_3 // 4294967295",
      "defined_out": [
        "4294967295",
        "label_idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0",
        "4294967295"
      ]
    },
    "760": {
      "op": "!=",
      "defined_out": [
        "cond#0",
        "label_idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "761": {
      "op": "bnz remove_operator_from_label_after_if_else@20",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "764": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\"",
        "label_idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "765": {
      "op": "log",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "766": {
      "op": "err"
    },
    "767": {
      "block": "remove_operator_from_label_after_if_else@20",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "769": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "770": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%2#0"
      ]
    },
    "771": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "772": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%4#0"
      ]
    },
    "773": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%4#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%4#0",
        "1"
      ]
    },
    "774": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%5#0"
      ]
    },
    "775": {
      "op": "bz remove_operator_from_label_else_body@2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "778": {
      "op": "frame_dig -2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "780": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "{box_del}"
      ]
    },
    "781": {
      "op": "pop",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "782": {
      "retsub": true,
      "op": "retsub"
    },
    "783": {
      "block": "remove_operator_from_label_else_body@2",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "pushbytes 0x0000",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0"
      ]
    },
    "787": {
      "op": "frame_bury 1",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "789": {
      "op": "frame_dig -2",
      "defined_out": [
        "next_list#0",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "791": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "next_list#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "792": {
      "op": "swap",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ]
    },
    "793": {
      "op": "dup",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "maybe_value%3#0 (copy)"
      ]
    },
    "794": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ]
    },
    "796": {
      "op": "frame_bury 0",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "next_list#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "798": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0"
      ]
    },
    "799": {
      "op": "intc_2 // 0",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "800": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%3#0",
        "next_list#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "array_length%0#0"
      ]
    },
    "801": {
      "op": "frame_bury 4",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%3#0",
        "next_list#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "803": {
      "op": "intc_2 // 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%3#0",
        "next_list#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "804": {
      "op": "frame_bury 5",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%3#0",
        "next_list#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "806": {
      "block": "remove_operator_from_label_for_header@3",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "808": {
      "op": "frame_dig 4",
      "defined_out": [
        "array_length%0#0",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_length%0#0"
      ]
    },
    "810": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "continue_looping%0#0"
      ]
    },
    "811": {
      "op": "bz remove_operator_from_label_after_for@8",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "814": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0"
      ]
    },
    "816": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "array_head_and_tail%0#0"
      ]
    },
    "819": {
      "op": "frame_dig 5",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "array_head_and_tail%0#0",
        "idx#0"
      ]
    },
    "821": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "idx#0 (copy)",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "array_head_and_tail%0#0",
        "idx#0 (copy)",
        "idx#0 (copy)"
      ]
    },
    "822": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0 (copy)"
      ]
    },
    "824": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "idx#0 (copy)",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0 (copy)",
        "2"
      ]
    },
    "825": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "826": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "828": {
      "op": "swap",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "829": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "830": {
      "op": "dup2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset%0#0 (copy)"
      ]
    },
    "831": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_length%0#0",
        "item_offset%0#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0"
      ]
    },
    "832": {
      "op": "intc_1 // 2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0",
        "2"
      ]
    },
    "833": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_head_tail_length%0#0",
        "item_offset%0#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_head_tail_length%0#0"
      ]
    },
    "834": {
      "op": "extract3",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%3#0",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "stored_label#0"
      ]
    },
    "835": {
      "op": "frame_bury 3",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%3#0",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "837": {
      "op": "frame_dig 6",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "839": {
      "op": "!=",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0",
        "stored_label#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%8#0"
      ]
    },
    "840": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0",
        "next_list#9",
        "stored_label#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%8#0",
        "next_list#9"
      ]
    },
    "842": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0",
        "next_list#9",
        "stored_label#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%8#0"
      ]
    },
    "844": {
      "op": "bz remove_operator_from_label_after_if_else@6",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "847": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0"
      ]
    },
    "849": {
      "op": "frame_dig 3",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0",
        "stored_label#0"
      ]
    },
    "851": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0",
        "stored_label#0",
        "1"
      ]
    },
    "852": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#9"
      ]
    },
    "855": {
      "op": "frame_bury 2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "857": {
      "block": "remove_operator_from_label_after_if_else@6",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0"
      ]
    },
    "859": {
      "op": "frame_bury 1",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "861": {
      "op": "frame_dig 5",
      "defined_out": [
        "idx#0",
        "next_list#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "863": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "idx#0",
        "next_list#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "1"
      ]
    },
    "864": {
      "op": "+",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "865": {
      "op": "frame_bury 5",
      "defined_out": [
        "idx#0",
        "next_list#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "867": {
      "op": "b remove_operator_from_label_for_header@3"
    },
    "870": {
      "block": "remove_operator_from_label_after_for@8",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "872": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "{box_del}"
      ]
    },
    "873": {
      "op": "pop",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "874": {
      "op": "frame_dig -2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "876": {
      "op": "frame_dig 1",
      "defined_out": [
        "next_list#0",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)",
        "next_list#0"
      ]
    },
    "878": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "879": {
      "retsub": true,
      "op": "retsub"
    },
    "880": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_labels",
      "params": {
        "operator#0": "bytes"
      },
      "block": "get_operator_labels",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "883": {
      "op": "frame_dig -1",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "885": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "886": {
      "op": "bury 1",
      "stack_out": [
        "cond#0"
      ]
    },
    "888": {
      "op": "bnz get_operator_labels_after_if_else@3",
      "stack_out": []
    },
    "891": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "\"ERR:NOEXIST\""
      ]
    },
    "892": {
      "op": "log",
      "stack_out": []
    },
    "893": {
      "op": "err"
    },
    "894": {
      "block": "get_operator_labels_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "896": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "897": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "898": {
      "retsub": true,
      "op": "retsub"
    }
  }
}