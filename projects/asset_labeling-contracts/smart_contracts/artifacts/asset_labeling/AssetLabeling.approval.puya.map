{
  "version": 3,
  "sources": [
    "../../asset_labeling/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCQ;AAAa;;AAAb;AAFR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;AAAA;;AAkIK;;AAAA;AAAA;AAAA;;AAAA;AAlIL;;;AAAA;AAAA;;AAkIK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAzCA;;AAAA;AAAA;AAAA;;AAAA;AAzFL;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAyFK;;;AAAA;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AA7DL;;;AAAA;AAAA;;AAAA;;;AAAA;;;AA6DK;;;AAAA;;AA3BA;;AAAA;AAAA;AAAA;;AAAA;AAlCL;;;AAAA;;;AAkCK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AA1BL;;;AAAA;;;AA0BK;;;AAAA;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAfL;;;AAAA;;;AAAA;;;AAAA;;;AAeK;;;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAVL;;;AAAA;AAAA;;AAUK;;;AAAA;;AAVL;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQe;;AAAc;AAAA;AAAA;AAAA;AAAd;AAnBR;;;AAmBkC;AAlBjC;AACA;;AAmBR;;;AAEQ;;;AACA;AAAA;;AAAA;;AAER;;;AAEQ;;;AACO;;AAAA;AAAA;;AA7BR;;;AA6B+B;;AA5B9B;AACA;AA4BO;;AAAA;AAAmB;AAAnB;AA9BR;;;AA8B8B;;AA7B7B;AACA;AA8BI;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AADc;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAlB;;AAAA;;AAAA;;AAAA;AAAA;;AAMR;;;AAEQ;;;AACO;;AAAA;AAAA;;AAxCR;;;AAwC2B;AAvC1B;AACA;AAuCO;;AAAA;AAAmB;AAAnB;AAzCR;;;AAyC8B;;AAxC7B;AACA;AAwCO;;AAAA;AAAA;AAAA;;;AAA8B;;AAA9B;AA1CR;;;AA0CyC;;AAzCxC;AACA;AAyCA;;AAAA;;;AAER;;;AAEe;;AAAA;AAAA;;AA/CR;;;AA+C2B;AA9C1B;AACA;AA8CO;;AAAA;AAAA;AAAP;AAIR;;;AAEW;;AAAc;AAAA;AAAA;AAAA;AAAd;AAAX;;;AACY;AAE8B;;AAA9B;;AAAA;;;AAAoD;;AAApD;AAAA;;;AACkC;;AAA9B;;AAAA;;;AACD;AADC;AADJ;;;;AAzDL;;;AA4DK;AA3DJ;AACA;;;;;;AA6DR;;;;;;;AAEW;;AAAA;AAAA;;AAAA;;;AACQ;;AAAP;;AAAA;AACgC;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAA5C;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACe;;;AAAA;;AAAA;AAAf;;;AACgB;;AAAA;;AAAA;;;;;;;;;;AACD;AAAP;;AAAA;AAER;;;AAEQ;;AAAA;;;AACO;;AAAA;AAAA;;AA3ER;;;AA2E8B;AA1E7B;AACA;AA2EG;;AAAA;AAAA;;AAAX;;;AAGgB;;AAAA;;AAAA;;;AACG;AADH;AAhFT;;;AAkFS;;AAjFR;AACA;AAoFe;;AAAA;AAAA;AACK;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAhB;AAAA;;;AACA;;AAAA;;AAAA;;AAAA;AAAA;AAMe;;AAAA;AAAA;AAEf;AAAA;;AAAA;AAAwC;AAAxC;AAD6B;AAAjC;;AAGA;;AAAA;;AAAA;;AAAA;AAAA;;AAPiD;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAlB;;;;AAAA;AAAA;AAAA;;;;AAAA;AAAA;AAA3B;;AAAA;;AAAA;;AAAA;AAAA;;;;AASZ;;;;;;;;;;AAEQ;;AAAA;;;AAEO;;AAAA;AAAA;;AAxGR;;;AAwG8B;AAvG7B;AACA;AAuGO;;AAAA;AAAA;;AAzGR;;;AAyGoC;AAxGnC;AACA;AA0GA;;AAAA;;AAAY;;;AAAZ;AAAA;;AAEiB;AAAb;AAAA;;;AACI;;AACD;;AADC;AADJ;;;;AA9GL;;;AAiHK;AAhHJ;AACA;AAmHmB;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEf;;;AAAiC;;;;;;;;;;AAAjC;AAAA;;;AAAsC;;AAAA;;;AAA+B;;AAA/B;AAAtC;;;;AAvHL;;;AAwHK;;AAvHJ;AACA;AA0HI;;AAAA;AAAA;;AAAA;AAAwC;AAAxC;AAD6B;AAAjC;;AAGA;;AAAA;;AAAA;;AAAA;AAAA;AAEG;;AAAA;AAAA;AAAA;AAAA;AAAmC;AAAnC;AAAX;;;AACY;;AAAA;;;AAEY;;;;AAAA;;AAIwB;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAhD;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgB;;AACG;;AAAA;;;;;AAAnB;;;AACoB;;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAER;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;;;AAEZ;;;AAEe;;AAAA;AAAA;;AA/IR;;;AA+IoC;AA9InC;AACA;AA8IO;;AAAA;AAAA;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 2 4294967295 4294967296"
    },
    "16": {
      "op": "bytecblock \"ERR:NOEXIST\" \"admin\" 0x151f7c75 \"ERR:UNAUTH\" \"ERR:EXISTS\" \"ERR:LENGTH\" 0x0000000000000000 \"ERR:NOEMPTY\""
    },
    "95": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "97": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "100": {
      "op": "bytec_1 // \"admin\"",
      "defined_out": [
        "\"admin\""
      ],
      "stack_out": [
        "\"admin\""
      ]
    },
    "101": {
      "op": "txn Sender",
      "defined_out": [
        "\"admin\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "\"admin\"",
        "new_state_value%0#0"
      ]
    },
    "103": {
      "op": "app_global_put",
      "stack_out": []
    },
    "104": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "106": {
      "op": "bz main_bare_routing@12",
      "stack_out": []
    },
    "109": {
      "op": "pushbytess 0x8f0d7d8e 0x7c1b32f6 0x17e691ae 0x33d0ffdc 0xfac1cf1b 0xb4c50b9f 0xa2dd2247 // method \"change_admin(account)void\", method \"add_label(string,string)void\", method \"remove_label(string)void\", method \"get_label(string)(string,uint64,uint64)\", method \"add_operator_to_label(account,string)void\", method \"remove_operator_from_label(account,string)void\", method \"get_operator_labels(account)string[]\"",
      "defined_out": [
        "Method(add_label(string,string)void)",
        "Method(add_operator_to_label(account,string)void)",
        "Method(change_admin(account)void)",
        "Method(get_label(string)(string,uint64,uint64))",
        "Method(get_operator_labels(account)string[])",
        "Method(remove_label(string)void)",
        "Method(remove_operator_from_label(account,string)void)"
      ],
      "stack_out": [
        "Method(change_admin(account)void)",
        "Method(add_label(string,string)void)",
        "Method(remove_label(string)void)",
        "Method(get_label(string)(string,uint64,uint64))",
        "Method(add_operator_to_label(account,string)void)",
        "Method(remove_operator_from_label(account,string)void)",
        "Method(get_operator_labels(account)string[])"
      ]
    },
    "146": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(add_label(string,string)void)",
        "Method(add_operator_to_label(account,string)void)",
        "Method(change_admin(account)void)",
        "Method(get_label(string)(string,uint64,uint64))",
        "Method(get_operator_labels(account)string[])",
        "Method(remove_label(string)void)",
        "Method(remove_operator_from_label(account,string)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(change_admin(account)void)",
        "Method(add_label(string,string)void)",
        "Method(remove_label(string)void)",
        "Method(get_label(string)(string,uint64,uint64))",
        "Method(add_operator_to_label(account,string)void)",
        "Method(remove_operator_from_label(account,string)void)",
        "Method(get_operator_labels(account)string[])",
        "tmp%2#0"
      ]
    },
    "149": {
      "op": "match main_change_admin_route@5 main_add_label_route@6 main_remove_label_route@7 main_get_label_route@8 main_add_operator_to_label_route@9 main_remove_operator_from_label_route@10 main_get_operator_labels_route@11",
      "stack_out": []
    },
    "165": {
      "block": "main_after_if_else@14",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "166": {
      "op": "return",
      "stack_out": []
    },
    "167": {
      "block": "main_get_operator_labels_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "169": {
      "op": "!",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "170": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "171": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "173": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "174": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%3#0"
      ]
    },
    "177": {
      "op": "btoi",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "178": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "180": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_labels",
      "op": "callsub get_operator_labels",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "183": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "0x151f7c75"
      ]
    },
    "184": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%53#0"
      ]
    },
    "185": {
      "op": "concat",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "186": {
      "op": "log",
      "stack_out": []
    },
    "187": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "188": {
      "op": "return",
      "stack_out": []
    },
    "189": {
      "block": "main_remove_operator_from_label_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "191": {
      "op": "!",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "192": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "193": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "195": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "196": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "199": {
      "op": "btoi",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "200": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "202": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%44#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%45#0"
      ]
    },
    "205": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%44#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0"
      ]
    },
    "208": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_operator_from_label",
      "op": "callsub remove_operator_from_label",
      "stack_out": []
    },
    "211": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "212": {
      "op": "return",
      "stack_out": []
    },
    "213": {
      "block": "main_add_operator_to_label_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "215": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "216": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "217": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "219": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "220": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "223": {
      "op": "btoi",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "224": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "226": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0"
      ]
    },
    "229": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%36#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%38#0"
      ]
    },
    "232": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.add_operator_to_label",
      "op": "callsub add_operator_to_label",
      "stack_out": []
    },
    "235": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "236": {
      "op": "return",
      "stack_out": []
    },
    "237": {
      "block": "main_get_label_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "239": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "240": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "241": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "243": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "244": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "247": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "250": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_label",
      "op": "callsub get_label",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "253": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "0x151f7c75"
      ]
    },
    "254": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%29#0"
      ]
    },
    "255": {
      "op": "concat",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "256": {
      "op": "log",
      "stack_out": []
    },
    "257": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "258": {
      "op": "return",
      "stack_out": []
    },
    "259": {
      "block": "main_remove_label_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "261": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "262": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "263": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "265": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "266": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "269": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "272": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_label",
      "op": "callsub remove_label",
      "stack_out": []
    },
    "275": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "276": {
      "op": "return",
      "stack_out": []
    },
    "277": {
      "block": "main_add_label_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "279": {
      "op": "!",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "280": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "281": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "283": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "284": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "287": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "290": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "293": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%16#0"
      ]
    },
    "296": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.add_label",
      "op": "callsub add_label",
      "stack_out": []
    },
    "299": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "300": {
      "op": "return",
      "stack_out": []
    },
    "301": {
      "block": "main_change_admin_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "303": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "304": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "305": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "307": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "308": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "311": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "312": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "314": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.change_admin",
      "op": "callsub change_admin",
      "stack_out": []
    },
    "317": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "318": {
      "op": "return",
      "stack_out": []
    },
    "319": {
      "block": "main_bare_routing@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "321": {
      "op": "bnz main_after_if_else@14",
      "stack_out": []
    },
    "324": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "326": {
      "op": "!",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "327": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "328": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "329": {
      "op": "return",
      "stack_out": []
    },
    "330": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64"
      },
      "block": "dynamic_array_concat_byte_length_head",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "333": {
      "op": "frame_dig -3",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "335": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "336": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "337": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "338": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "340": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "new_length#0"
      ]
    },
    "341": {
      "op": "swap",
      "stack_out": [
        "new_length#0",
        "array_length#0"
      ]
    },
    "342": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_length#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "array_length#0",
        "2"
      ]
    },
    "343": {
      "op": "*",
      "defined_out": [
        "new_length#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%0#0"
      ]
    },
    "344": {
      "op": "intc_2 // 2",
      "stack_out": [
        "new_length#0",
        "tmp%0#0",
        "2"
      ]
    },
    "345": {
      "op": "+",
      "defined_out": [
        "header_end#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0"
      ]
    },
    "346": {
      "op": "dig 1",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "new_length#0 (copy)"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "new_length#0 (copy)"
      ]
    },
    "348": {
      "op": "itob",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "tmp%1#0"
      ]
    },
    "349": {
      "op": "extract 6 2",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "tmp%2#0"
      ]
    },
    "352": {
      "op": "cover 2",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0"
      ]
    },
    "354": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "array#0 (copy)"
      ]
    },
    "356": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "array#0 (copy)",
        "2"
      ]
    },
    "357": {
      "op": "dig 2",
      "defined_out": [
        "2",
        "array#0 (copy)",
        "header_end#0",
        "header_end#0 (copy)",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "array#0 (copy)",
        "2",
        "header_end#0 (copy)"
      ]
    },
    "359": {
      "op": "substring3",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0"
      ]
    },
    "360": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0",
        "new_items_count#0 (copy)"
      ]
    },
    "362": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "363": {
      "op": "*",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "364": {
      "op": "bzero",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "365": {
      "op": "concat",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0"
      ]
    },
    "366": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "array#0 (copy)"
      ]
    },
    "368": {
      "op": "len",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "369": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "tmp%7#0",
        "array#0 (copy)"
      ]
    },
    "371": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0",
        "tmp%7#0",
        "array#0 (copy)",
        "header_end#0"
      ]
    },
    "373": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0",
        "array#0 (copy)",
        "header_end#0",
        "tmp%7#0"
      ]
    },
    "375": {
      "op": "substring3",
      "defined_out": [
        "new_length#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "376": {
      "op": "concat",
      "defined_out": [
        "new_length#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%9#0"
      ]
    },
    "377": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "new_length#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%9#0",
        "new_items_bytes#0 (copy)"
      ]
    },
    "379": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail#0",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "array_head_and_tail#0"
      ]
    },
    "380": {
      "op": "swap",
      "defined_out": [
        "array_head_and_tail#0",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "new_length#0"
      ]
    },
    "381": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "new_length#0",
        "2"
      ]
    },
    "382": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail#0",
        "tail_offset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "383": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0",
        "tail_offset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#0"
      ]
    },
    "384": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#0",
        "head_offset#0"
      ]
    },
    "385": {
      "op": "swap",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "386": {
      "block": "dynamic_array_concat_byte_length_head_for_header@2",
      "stack_in": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ]
    },
    "388": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#0"
      ]
    },
    "390": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "continue_looping%0#0"
      ]
    },
    "391": {
      "op": "bz dynamic_array_concat_byte_length_head_after_for@5",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "394": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1"
      ]
    },
    "396": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset#1 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset#1 (copy)"
      ]
    },
    "397": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tmp%5#0"
      ]
    },
    "398": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ]
    },
    "401": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0"
      ]
    },
    "403": {
      "op": "frame_dig 3",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0",
        "head_offset#0"
      ]
    },
    "405": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "head_offset#0 (copy)",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "406": {
      "op": "cover 4",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0",
        "head_offset#0 (copy)"
      ]
    },
    "408": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0",
        "head_offset#0 (copy)",
        "tail_offset_bytes#0"
      ]
    },
    "410": {
      "op": "replace3",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0"
      ]
    },
    "411": {
      "op": "dup",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0",
        "array_head_and_tail#0"
      ]
    },
    "412": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0"
      ]
    },
    "414": {
      "op": "dig 1",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0",
        "tail_offset#1 (copy)"
      ]
    },
    "416": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tmp%6#1"
      ]
    },
    "417": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tmp%6#1",
        "2"
      ]
    },
    "418": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tmp%7#0"
      ]
    },
    "419": {
      "op": "+",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "420": {
      "op": "frame_bury 4",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ]
    },
    "422": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "2"
      ]
    },
    "423": {
      "op": "+",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ]
    },
    "424": {
      "op": "frame_bury 3",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "426": {
      "op": "b dynamic_array_concat_byte_length_head_for_header@2"
    },
    "429": {
      "block": "dynamic_array_concat_byte_length_head_after_for@5",
      "stack_in": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tmp%2#0"
      ]
    },
    "431": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_head_and_tail#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tmp%2#0",
        "array_head_and_tail#0"
      ]
    },
    "433": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tmp%12#0"
      ]
    },
    "434": {
      "op": "frame_bury 0"
    },
    "436": {
      "retsub": true,
      "op": "retsub"
    },
    "437": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_only",
      "params": {},
      "block": "admin_only",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "439": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "440": {
      "op": "bytec_1 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "441": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "442": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "443": {
      "op": "==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "444": {
      "op": "bnz admin_only_after_if_else@3",
      "stack_out": []
    },
    "447": {
      "op": "bytec_3 // \"ERR:UNAUTH\"",
      "defined_out": [
        "\"ERR:UNAUTH\""
      ],
      "stack_out": [
        "\"ERR:UNAUTH\""
      ]
    },
    "448": {
      "op": "log",
      "stack_out": []
    },
    "449": {
      "op": "err"
    },
    "450": {
      "block": "admin_only_after_if_else@3",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "451": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.change_admin",
      "params": {
        "new_admin#0": "bytes"
      },
      "block": "change_admin",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "454": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_only",
      "op": "callsub admin_only"
    },
    "457": {
      "op": "bytec_1 // \"admin\"",
      "defined_out": [
        "\"admin\""
      ],
      "stack_out": [
        "\"admin\""
      ]
    },
    "458": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"admin\"",
        "new_admin#0 (copy)"
      ],
      "stack_out": [
        "\"admin\"",
        "new_admin#0 (copy)"
      ]
    },
    "460": {
      "op": "app_global_put",
      "stack_out": []
    },
    "461": {
      "retsub": true,
      "op": "retsub"
    },
    "462": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.add_label",
      "params": {
        "id#0": "bytes",
        "name#0": "bytes"
      },
      "block": "add_label",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "465": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_only",
      "op": "callsub admin_only"
    },
    "468": {
      "op": "frame_dig -2",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "470": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "471": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "473": {
      "op": "bz add_label_after_if_else@3",
      "stack_out": []
    },
    "476": {
      "op": "bytec 4 // \"ERR:EXISTS\"",
      "defined_out": [
        "\"ERR:EXISTS\""
      ],
      "stack_out": [
        "\"ERR:EXISTS\""
      ]
    },
    "478": {
      "op": "log",
      "stack_out": []
    },
    "479": {
      "op": "err"
    },
    "480": {
      "block": "add_label_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "482": {
      "op": "len",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "483": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "2"
      ]
    },
    "484": {
      "op": "==",
      "defined_out": [
        "cond#1"
      ],
      "stack_out": [
        "cond#1"
      ]
    },
    "485": {
      "op": "bnz add_label_after_if_else@7",
      "stack_out": []
    },
    "488": {
      "op": "bytec 5 // \"ERR:LENGTH\"",
      "defined_out": [
        "\"ERR:LENGTH\""
      ],
      "stack_out": [
        "\"ERR:LENGTH\""
      ]
    },
    "490": {
      "op": "log",
      "stack_out": []
    },
    "491": {
      "op": "err"
    },
    "492": {
      "block": "add_label_after_if_else@7",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "name#0 (copy)"
      ],
      "stack_out": [
        "name#0 (copy)"
      ]
    },
    "494": {
      "op": "len",
      "defined_out": [
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0"
      ]
    },
    "495": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0"
      ],
      "stack_out": [
        "as_bytes%0#0"
      ]
    },
    "496": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0"
      ],
      "stack_out": [
        "length_uint16%0#0"
      ]
    },
    "499": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_uint16%0#0",
        "name#0 (copy)"
      ]
    },
    "501": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "502": {
      "op": "pushbytes 0x001200000000000000000000000000000000",
      "defined_out": [
        "0x001200000000000000000000000000000000",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x001200000000000000000000000000000000"
      ]
    },
    "522": {
      "op": "swap",
      "stack_out": [
        "0x001200000000000000000000000000000000",
        "encoded_value%0#0"
      ]
    },
    "523": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0"
      ]
    },
    "524": {
      "op": "frame_dig -2",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "id#0 (copy)"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "id#0 (copy)"
      ]
    },
    "526": {
      "op": "box_del",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "{box_del}"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "{box_del}"
      ]
    },
    "527": {
      "op": "pop",
      "stack_out": [
        "encoded_tuple_buffer%4#0"
      ]
    },
    "528": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "id#0 (copy)"
      ]
    },
    "530": {
      "op": "swap",
      "stack_out": [
        "id#0 (copy)",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "531": {
      "op": "box_put",
      "stack_out": []
    },
    "532": {
      "retsub": true,
      "op": "retsub"
    },
    "533": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_label",
      "params": {
        "id#0": "bytes"
      },
      "block": "remove_label",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "536": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_only",
      "op": "callsub admin_only"
    },
    "539": {
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "541": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "542": {
      "op": "bury 1",
      "stack_out": [
        "cond#0"
      ]
    },
    "544": {
      "op": "bnz remove_label_after_if_else@3",
      "stack_out": []
    },
    "547": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "\"ERR:NOEXIST\""
      ]
    },
    "548": {
      "op": "log",
      "stack_out": []
    },
    "549": {
      "op": "err"
    },
    "550": {
      "block": "remove_label_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "552": {
      "op": "len",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "553": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "2"
      ]
    },
    "554": {
      "op": "==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "555": {
      "op": "bnz remove_label_after_if_else@7",
      "stack_out": []
    },
    "558": {
      "op": "bytec 5 // \"ERR:LENGTH\"",
      "defined_out": [
        "\"ERR:LENGTH\""
      ],
      "stack_out": [
        "\"ERR:LENGTH\""
      ]
    },
    "560": {
      "op": "log",
      "stack_out": []
    },
    "561": {
      "op": "err"
    },
    "562": {
      "block": "remove_label_after_if_else@7",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "564": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "565": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "566": {
      "error": "Index access is out of bounds",
      "op": "extract 2 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "569": {
      "op": "bytec 6 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "0x0000000000000000"
      ]
    },
    "571": {
      "op": "b==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "572": {
      "op": "bnz remove_label_after_if_else@11",
      "stack_out": []
    },
    "575": {
      "op": "bytec 7 // \"ERR:NOEMPTY\"",
      "defined_out": [
        "\"ERR:NOEMPTY\""
      ],
      "stack_out": [
        "\"ERR:NOEMPTY\""
      ]
    },
    "577": {
      "op": "log",
      "stack_out": []
    },
    "578": {
      "op": "err"
    },
    "579": {
      "block": "remove_label_after_if_else@11",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "581": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "582": {
      "op": "pop",
      "stack_out": []
    },
    "583": {
      "retsub": true,
      "op": "retsub"
    },
    "584": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_label",
      "params": {
        "id#0": "bytes"
      },
      "block": "get_label",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "587": {
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "589": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "590": {
      "op": "bury 1",
      "stack_out": [
        "cond#0"
      ]
    },
    "592": {
      "op": "bnz get_label_after_if_else@3",
      "stack_out": []
    },
    "595": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "\"ERR:NOEXIST\""
      ]
    },
    "596": {
      "op": "log",
      "stack_out": []
    },
    "597": {
      "op": "err"
    },
    "598": {
      "block": "get_label_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "600": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "601": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "602": {
      "retsub": true,
      "op": "retsub"
    },
    "603": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_or_operator_only",
      "params": {
        "label#0": "bytes"
      },
      "block": "admin_or_operator_only",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "606": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "608": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "609": {
      "op": "bytec_1 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "610": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "611": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "612": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "613": {
      "op": "bz admin_or_operator_only_after_if_else@2",
      "stack_out": []
    },
    "616": {
      "retsub": true,
      "op": "retsub"
    },
    "617": {
      "block": "admin_or_operator_only_after_if_else@2",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "619": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "label#0 (copy)"
      ]
    },
    "621": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_label_index",
      "op": "callsub get_operator_label_index",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "624": {
      "op": "intc 4 // 4294967296",
      "defined_out": [
        "4294967296",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "4294967296"
      ]
    },
    "626": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "627": {
      "op": "bz admin_or_operator_only_bool_false@5",
      "stack_out": []
    },
    "630": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "632": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%5#0",
        "label#0 (copy)"
      ]
    },
    "634": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_label_index",
      "op": "callsub get_operator_label_index",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "637": {
      "op": "intc_3 // 4294967295",
      "defined_out": [
        "4294967295",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "4294967295"
      ]
    },
    "638": {
      "op": "!=",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "639": {
      "op": "bz admin_or_operator_only_bool_false@5",
      "stack_out": []
    },
    "642": {
      "op": "intc_0 // 1",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "643": {
      "block": "admin_or_operator_only_bool_merge@6",
      "stack_in": [
        "cond#0"
      ],
      "op": "bnz admin_or_operator_only_after_if_else@9",
      "defined_out": [],
      "stack_out": []
    },
    "646": {
      "op": "bytec_3 // \"ERR:UNAUTH\"",
      "defined_out": [
        "\"ERR:UNAUTH\""
      ],
      "stack_out": [
        "\"ERR:UNAUTH\""
      ]
    },
    "647": {
      "op": "log",
      "stack_out": []
    },
    "648": {
      "op": "err"
    },
    "649": {
      "block": "admin_or_operator_only_after_if_else@9",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "650": {
      "block": "admin_or_operator_only_bool_false@5",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "651": {
      "op": "b admin_or_operator_only_bool_merge@6"
    },
    "654": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_label_index",
      "params": {
        "operator#0": "bytes",
        "label#0": "bytes"
      },
      "block": "get_operator_label_index",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "657": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "658": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0"
      ]
    },
    "660": {
      "op": "dup",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "661": {
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "operator#0 (copy)"
      ]
    },
    "663": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "664": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%0#0"
      ]
    },
    "666": {
      "op": "bnz get_operator_label_index_after_if_else@2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "669": {
      "op": "intc 4 // 4294967296",
      "defined_out": [
        "4294967296"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "4294967296"
      ]
    },
    "671": {
      "op": "frame_bury 0"
    },
    "673": {
      "retsub": true,
      "op": "retsub"
    },
    "674": {
      "block": "get_operator_label_index_after_if_else@2",
      "stack_in": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "operator#0 (copy)"
      ]
    },
    "676": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "677": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ]
    },
    "678": {
      "op": "dup",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "679": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ]
    },
    "681": {
      "op": "frame_bury 0",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "683": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ]
    },
    "684": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "685": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_length%0#0"
      ]
    },
    "686": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "688": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "689": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "691": {
      "block": "get_operator_label_index_for_header@3",
      "stack_in": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "693": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0",
        "array_length%0#0"
      ]
    },
    "695": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "continue_looping%0#0"
      ]
    },
    "696": {
      "op": "bz get_operator_label_index_after_for@8",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "699": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ]
    },
    "701": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0"
      ]
    },
    "704": {
      "op": "frame_dig 2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0"
      ]
    },
    "706": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0",
        "2"
      ]
    },
    "707": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "708": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "710": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "711": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "712": {
      "op": "dup2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset%0#0 (copy)"
      ]
    },
    "713": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_length%0#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0"
      ]
    },
    "714": {
      "op": "intc_2 // 2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0",
        "2"
      ]
    },
    "715": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_head_tail_length%0#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_head_tail_length%0#0"
      ]
    },
    "716": {
      "op": "extract3",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "stored_label#0"
      ]
    },
    "717": {
      "op": "extract 2 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%2#0"
      ]
    },
    "720": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label#0 (copy)",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%2#0",
        "label#0 (copy)"
      ]
    },
    "722": {
      "op": "==",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%3#0"
      ]
    },
    "723": {
      "op": "bz get_operator_label_index_after_if_else@6",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "726": {
      "op": "frame_dig 2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "728": {
      "op": "frame_bury 0"
    },
    "730": {
      "retsub": true,
      "op": "retsub"
    },
    "731": {
      "block": "get_operator_label_index_after_if_else@6",
      "stack_in": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "733": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0",
        "1"
      ]
    },
    "734": {
      "op": "+",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "735": {
      "op": "frame_bury 2",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "737": {
      "op": "b get_operator_label_index_for_header@3"
    },
    "740": {
      "block": "get_operator_label_index_after_for@8",
      "stack_in": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "intc_3 // 4294967295",
      "defined_out": [
        "4294967295"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "4294967295"
      ]
    },
    "741": {
      "op": "frame_bury 0"
    },
    "743": {
      "retsub": true,
      "op": "retsub"
    },
    "744": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.add_operator_to_label",
      "params": {
        "operator#0": "bytes",
        "label#0": "bytes"
      },
      "block": "add_operator_to_label",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "747": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "749": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_or_operator_only",
      "op": "callsub admin_or_operator_only",
      "stack_out": []
    },
    "752": {
      "op": "frame_dig -1",
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "754": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "755": {
      "op": "bury 1",
      "stack_out": [
        "cond#0"
      ]
    },
    "757": {
      "op": "bnz add_operator_to_label_after_if_else@10",
      "stack_out": []
    },
    "760": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "\"ERR:NOEXIST\""
      ]
    },
    "761": {
      "op": "log",
      "stack_out": []
    },
    "762": {
      "op": "err"
    },
    "763": {
      "block": "add_operator_to_label_after_if_else@10",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "765": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "766": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "768": {
      "op": "bz add_operator_to_label_else_body@2",
      "stack_out": []
    },
    "771": {
      "op": "frame_dig -2",
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "773": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "operator#0 (copy)",
        "label#0 (copy)"
      ]
    },
    "775": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_label_index",
      "op": "callsub get_operator_label_index",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "778": {
      "op": "intc_3 // 4294967295",
      "defined_out": [
        "4294967295",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "4294967295"
      ]
    },
    "779": {
      "op": "==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "780": {
      "op": "bnz add_operator_to_label_after_if_else@6",
      "stack_out": []
    },
    "783": {
      "op": "bytec 4 // \"ERR:EXISTS\"",
      "defined_out": [
        "\"ERR:EXISTS\""
      ],
      "stack_out": [
        "\"ERR:EXISTS\""
      ]
    },
    "785": {
      "op": "log",
      "stack_out": []
    },
    "786": {
      "op": "err"
    },
    "787": {
      "block": "add_operator_to_label_after_if_else@6",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "789": {
      "op": "box_get",
      "defined_out": [
        "existing#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "existing#0",
        "maybe_exists%2#0"
      ]
    },
    "790": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "existing#0"
      ]
    },
    "791": {
      "op": "frame_dig -1",
      "defined_out": [
        "existing#0",
        "label#0 (copy)"
      ],
      "stack_out": [
        "existing#0",
        "label#0 (copy)"
      ]
    },
    "793": {
      "op": "len",
      "defined_out": [
        "existing#0",
        "length%0#0"
      ],
      "stack_out": [
        "existing#0",
        "length%0#0"
      ]
    },
    "794": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "existing#0"
      ],
      "stack_out": [
        "existing#0",
        "as_bytes%0#0"
      ]
    },
    "795": {
      "op": "extract 6 2",
      "defined_out": [
        "existing#0",
        "length_uint16%0#0"
      ],
      "stack_out": [
        "existing#0",
        "length_uint16%0#0"
      ]
    },
    "798": {
      "op": "frame_dig -1",
      "stack_out": [
        "existing#0",
        "length_uint16%0#0",
        "label#0 (copy)"
      ]
    },
    "800": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "existing#0"
      ],
      "stack_out": [
        "existing#0",
        "encoded_value%0#0"
      ]
    },
    "801": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "encoded_value%0#0",
        "existing#0"
      ],
      "stack_out": [
        "existing#0",
        "encoded_value%0#0",
        "1"
      ]
    },
    "802": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "stack_out": [
        "existing#0"
      ]
    },
    "805": {
      "op": "frame_dig -2",
      "stack_out": [
        "existing#0",
        "operator#0 (copy)"
      ]
    },
    "807": {
      "op": "box_del",
      "defined_out": [
        "existing#0",
        "{box_del}"
      ],
      "stack_out": [
        "existing#0",
        "{box_del}"
      ]
    },
    "808": {
      "op": "pop",
      "stack_out": [
        "existing#0"
      ]
    },
    "809": {
      "op": "frame_dig -2",
      "stack_out": [
        "existing#0",
        "operator#0 (copy)"
      ]
    },
    "811": {
      "op": "swap",
      "stack_out": [
        "operator#0 (copy)",
        "existing#0"
      ]
    },
    "812": {
      "op": "box_put",
      "stack_out": []
    },
    "813": {
      "block": "add_operator_to_label_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "815": {
      "op": "box_get",
      "defined_out": [
        "label_descriptor#0",
        "maybe_exists%3#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_exists%3#0"
      ]
    },
    "816": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "label_descriptor#0"
      ]
    },
    "817": {
      "op": "dup",
      "defined_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ]
    },
    "818": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)",
        "10"
      ]
    },
    "820": {
      "op": "extract_uint64",
      "defined_out": [
        "label_descriptor#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "tmp%9#0"
      ]
    },
    "821": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "label_descriptor#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "tmp%9#0",
        "1"
      ]
    },
    "822": {
      "op": "+",
      "defined_out": [
        "label_descriptor#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "to_encode%0#0"
      ]
    },
    "823": {
      "op": "itob",
      "defined_out": [
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ]
    },
    "824": {
      "op": "replace2 10",
      "stack_out": [
        "label_descriptor#0"
      ]
    },
    "826": {
      "op": "frame_dig -1",
      "stack_out": [
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "828": {
      "op": "box_del",
      "defined_out": [
        "label_descriptor#0",
        "{box_del}"
      ],
      "stack_out": [
        "label_descriptor#0",
        "{box_del}"
      ]
    },
    "829": {
      "op": "pop",
      "stack_out": [
        "label_descriptor#0"
      ]
    },
    "830": {
      "op": "frame_dig -1",
      "stack_out": [
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "832": {
      "op": "swap",
      "stack_out": [
        "label#0 (copy)",
        "label_descriptor#0"
      ]
    },
    "833": {
      "op": "box_put",
      "stack_out": []
    },
    "834": {
      "retsub": true,
      "op": "retsub"
    },
    "835": {
      "block": "add_operator_to_label_else_body@2",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "837": {
      "op": "len",
      "defined_out": [
        "length%1#0"
      ],
      "stack_out": [
        "length%1#0"
      ]
    },
    "838": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0"
      ],
      "stack_out": [
        "as_bytes%1#0"
      ]
    },
    "839": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%1#0"
      ],
      "stack_out": [
        "length_uint16%1#0"
      ]
    },
    "842": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_uint16%1#0",
        "label#0 (copy)"
      ]
    },
    "844": {
      "op": "concat",
      "defined_out": [
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0"
      ]
    },
    "845": {
      "op": "pushbytes 0x0002",
      "defined_out": [
        "0x0002",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "0x0002"
      ]
    },
    "849": {
      "op": "swap",
      "stack_out": [
        "0x0002",
        "encoded_value%1#0"
      ]
    },
    "850": {
      "op": "concat",
      "defined_out": [
        "result%1#0"
      ],
      "stack_out": [
        "result%1#0"
      ]
    },
    "851": {
      "op": "pushbytes 0x0001",
      "defined_out": [
        "0x0001",
        "result%1#0"
      ],
      "stack_out": [
        "result%1#0",
        "0x0001"
      ]
    },
    "855": {
      "op": "swap",
      "stack_out": [
        "0x0001",
        "result%1#0"
      ]
    },
    "856": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0"
      ]
    },
    "857": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_data%0#0",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "array_data%0#0",
        "operator#0 (copy)"
      ]
    },
    "859": {
      "op": "box_del",
      "defined_out": [
        "array_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "array_data%0#0",
        "{box_del}"
      ]
    },
    "860": {
      "op": "pop",
      "stack_out": [
        "array_data%0#0"
      ]
    },
    "861": {
      "op": "frame_dig -2",
      "stack_out": [
        "array_data%0#0",
        "operator#0 (copy)"
      ]
    },
    "863": {
      "op": "swap",
      "stack_out": [
        "operator#0 (copy)",
        "array_data%0#0"
      ]
    },
    "864": {
      "op": "box_put",
      "stack_out": []
    },
    "865": {
      "op": "b add_operator_to_label_after_if_else@3"
    },
    "868": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_operator_from_label",
      "params": {
        "operator#0": "bytes",
        "label#0": "bytes"
      },
      "block": "remove_operator_from_label",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "871": {
      "op": "intc_1 // 0",
      "stack_out": [
        "label_descriptor#0"
      ]
    },
    "872": {
      "op": "dupn 4",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0"
      ]
    },
    "874": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0"
      ]
    },
    "876": {
      "op": "dupn 2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "878": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label#0 (copy)"
      ]
    },
    "880": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_or_operator_only",
      "op": "callsub admin_or_operator_only",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "883": {
      "op": "frame_dig -1",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label#0 (copy)"
      ]
    },
    "885": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "886": {
      "op": "bury 1",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "888": {
      "op": "bnz remove_operator_from_label_after_if_else@28",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "891": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "892": {
      "op": "log",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "893": {
      "op": "err"
    },
    "894": {
      "block": "remove_operator_from_label_after_if_else@28",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "896": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%1#0",
        "cond#0"
      ]
    },
    "897": {
      "op": "bury 1",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "899": {
      "op": "bnz remove_operator_from_label_after_if_else@32",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "902": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "903": {
      "op": "log",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "904": {
      "op": "err"
    },
    "905": {
      "block": "remove_operator_from_label_after_if_else@32",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "907": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)",
        "label#0 (copy)"
      ]
    },
    "909": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_label_index",
      "op": "callsub get_operator_label_index",
      "defined_out": [
        "label_idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0"
      ]
    },
    "912": {
      "op": "dup",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0",
        "label_idx#0"
      ]
    },
    "913": {
      "op": "frame_bury 7",
      "defined_out": [
        "label_idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0"
      ]
    },
    "915": {
      "op": "intc_3 // 4294967295",
      "defined_out": [
        "4294967295",
        "label_idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0",
        "4294967295"
      ]
    },
    "916": {
      "op": "!=",
      "defined_out": [
        "label_idx#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%2#0"
      ]
    },
    "917": {
      "op": "bz remove_operator_from_label_bool_false@3",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "920": {
      "op": "frame_dig 7",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0"
      ]
    },
    "922": {
      "op": "intc 4 // 4294967296",
      "defined_out": [
        "4294967296",
        "label_idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0",
        "4294967296"
      ]
    },
    "924": {
      "op": "!=",
      "defined_out": [
        "label_idx#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%3#0"
      ]
    },
    "925": {
      "op": "bz remove_operator_from_label_bool_false@3",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "928": {
      "op": "intc_0 // 1",
      "defined_out": [
        "cond#0",
        "label_idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "929": {
      "block": "remove_operator_from_label_bool_merge@4",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ],
      "op": "bnz remove_operator_from_label_after_if_else@24",
      "defined_out": [],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "932": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "933": {
      "op": "log",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "934": {
      "op": "err"
    },
    "935": {
      "block": "remove_operator_from_label_after_if_else@24",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label#0 (copy)"
      ]
    },
    "937": {
      "op": "box_get",
      "defined_out": [
        "label_descriptor#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "maybe_exists%2#0"
      ]
    },
    "938": {
      "op": "swap",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_exists%2#0",
        "label_descriptor#0"
      ]
    },
    "939": {
      "op": "dup",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_exists%2#0",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ]
    },
    "940": {
      "op": "cover 2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "maybe_exists%2#0",
        "label_descriptor#0"
      ]
    },
    "942": {
      "op": "frame_bury 0",
      "defined_out": [
        "label_descriptor#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "maybe_exists%2#0"
      ]
    },
    "944": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0"
      ]
    },
    "945": {
      "error": "Index access is out of bounds",
      "op": "extract 10 8 // on error: Index access is out of bounds",
      "defined_out": [
        "label_descriptor#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "948": {
      "op": "pushbytes 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "label_descriptor#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "reinterpret_biguint%0#0",
        "0x0000000000000001"
      ]
    },
    "958": {
      "op": "b>",
      "defined_out": [
        "label_descriptor#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%5#0"
      ]
    },
    "959": {
      "op": "bnz remove_operator_from_label_bool_true@6",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "962": {
      "op": "frame_dig 0",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0"
      ]
    },
    "964": {
      "error": "Index access is out of bounds",
      "op": "extract 2 8 // on error: Index access is out of bounds",
      "defined_out": [
        "label_descriptor#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "967": {
      "op": "bytec 6 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "label_descriptor#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "reinterpret_biguint%2#0",
        "0x0000000000000000"
      ]
    },
    "969": {
      "op": "b==",
      "defined_out": [
        "label_descriptor#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%6#0"
      ]
    },
    "970": {
      "op": "bz remove_operator_from_label_bool_false@7",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "973": {
      "block": "remove_operator_from_label_bool_true@6",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "974": {
      "block": "remove_operator_from_label_bool_merge@8",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ],
      "op": "bnz remove_operator_from_label_after_if_else@20",
      "defined_out": [],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "977": {
      "op": "bytec 7 // \"ERR:NOEMPTY\"",
      "defined_out": [
        "\"ERR:NOEMPTY\""
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "\"ERR:NOEMPTY\""
      ]
    },
    "979": {
      "op": "log",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "980": {
      "op": "err"
    },
    "981": {
      "block": "remove_operator_from_label_after_if_else@20",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "label_descriptor#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0"
      ]
    },
    "983": {
      "op": "dup",
      "defined_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ]
    },
    "984": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "label_descriptor#0 (copy)",
        "10"
      ]
    },
    "986": {
      "op": "extract_uint64",
      "defined_out": [
        "label_descriptor#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "tmp%8#0"
      ]
    },
    "987": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "label_descriptor#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "tmp%8#0",
        "1"
      ]
    },
    "988": {
      "op": "-",
      "defined_out": [
        "label_descriptor#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "to_encode%0#0"
      ]
    },
    "989": {
      "op": "itob",
      "defined_out": [
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ]
    },
    "990": {
      "op": "replace2 10",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0"
      ]
    },
    "992": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)",
        "label_descriptor#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "994": {
      "op": "box_del",
      "defined_out": [
        "label_descriptor#0",
        "{box_del}"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "{box_del}"
      ]
    },
    "995": {
      "op": "pop",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0"
      ]
    },
    "996": {
      "op": "frame_dig -1",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "998": {
      "op": "swap",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label#0 (copy)",
        "label_descriptor#0"
      ]
    },
    "999": {
      "op": "box_put",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1000": {
      "op": "frame_dig -2",
      "defined_out": [
        "label_descriptor#0",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1002": {
      "op": "box_get",
      "defined_out": [
        "label_descriptor#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1003": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0"
      ]
    },
    "1004": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "label_descriptor#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "1005": {
      "op": "extract_uint16",
      "defined_out": [
        "label_descriptor#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%11#0"
      ]
    },
    "1006": {
      "op": "intc_0 // 1",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%11#0",
        "1"
      ]
    },
    "1007": {
      "op": "==",
      "defined_out": [
        "label_descriptor#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%12#0"
      ]
    },
    "1008": {
      "op": "bz remove_operator_from_label_else_body@10",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1011": {
      "op": "frame_dig -2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1013": {
      "op": "box_del",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "{box_del}"
      ]
    },
    "1014": {
      "op": "pop",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1015": {
      "retsub": true,
      "op": "retsub"
    },
    "1016": {
      "block": "remove_operator_from_label_else_body@10",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "pushbytes 0x0000",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0"
      ]
    },
    "1020": {
      "op": "frame_bury 2",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1022": {
      "op": "frame_dig -2",
      "defined_out": [
        "next_list#0",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1024": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1025": {
      "op": "swap",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ]
    },
    "1026": {
      "op": "dup",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "maybe_value%4#0 (copy)"
      ]
    },
    "1027": {
      "op": "cover 2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ]
    },
    "1029": {
      "op": "frame_bury 1",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1031": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0"
      ]
    },
    "1032": {
      "op": "intc_1 // 0",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "0"
      ]
    },
    "1033": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%4#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "array_length%0#0"
      ]
    },
    "1034": {
      "op": "frame_bury 5",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%4#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1036": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%4#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "1037": {
      "op": "frame_bury 6",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%4#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1039": {
      "block": "remove_operator_from_label_for_header@11",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "1041": {
      "op": "frame_dig 5",
      "defined_out": [
        "array_length%0#0",
        "idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_length%0#0"
      ]
    },
    "1043": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "continue_looping%0#0"
      ]
    },
    "1044": {
      "op": "bz remove_operator_from_label_after_for@16",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1047": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0"
      ]
    },
    "1049": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1052": {
      "op": "frame_dig 6",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "array_head_and_tail%0#0",
        "idx#0"
      ]
    },
    "1054": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "idx#0 (copy)",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "array_head_and_tail%0#0",
        "idx#0 (copy)",
        "idx#0 (copy)"
      ]
    },
    "1055": {
      "op": "cover 2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0 (copy)"
      ]
    },
    "1057": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "idx#0 (copy)",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0 (copy)",
        "2"
      ]
    },
    "1058": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "1059": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1061": {
      "op": "swap",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "1062": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1063": {
      "op": "dup2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset%0#0 (copy)"
      ]
    },
    "1064": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_length%0#0",
        "item_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0"
      ]
    },
    "1065": {
      "op": "intc_2 // 2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0",
        "2"
      ]
    },
    "1066": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_head_tail_length%0#0",
        "item_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_head_tail_length%0#0"
      ]
    },
    "1067": {
      "op": "extract3",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%4#0",
        "stored_label#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "stored_label#0"
      ]
    },
    "1068": {
      "op": "frame_bury 4",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%4#0",
        "stored_label#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "1070": {
      "op": "frame_dig 7",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "stored_label#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1072": {
      "op": "!=",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "stored_label#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%15#0"
      ]
    },
    "1073": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "next_list#9",
        "stored_label#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%15#0",
        "next_list#9"
      ]
    },
    "1075": {
      "op": "frame_bury 3",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "next_list#9",
        "stored_label#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%15#0"
      ]
    },
    "1077": {
      "op": "bz remove_operator_from_label_after_if_else@14",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1080": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0"
      ]
    },
    "1082": {
      "op": "frame_dig 4",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0",
        "stored_label#0"
      ]
    },
    "1084": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0",
        "stored_label#0",
        "1"
      ]
    },
    "1085": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#9"
      ]
    },
    "1088": {
      "op": "frame_bury 3",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1090": {
      "block": "remove_operator_from_label_after_if_else@14",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0"
      ]
    },
    "1092": {
      "op": "frame_bury 2",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1094": {
      "op": "frame_dig 6",
      "defined_out": [
        "idx#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "1096": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "idx#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "1"
      ]
    },
    "1097": {
      "op": "+",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "1098": {
      "op": "frame_bury 6",
      "defined_out": [
        "idx#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1100": {
      "op": "b remove_operator_from_label_for_header@11"
    },
    "1103": {
      "block": "remove_operator_from_label_after_for@16",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1105": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "{box_del}"
      ]
    },
    "1106": {
      "op": "pop",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1107": {
      "op": "frame_dig -2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1109": {
      "op": "frame_dig 2",
      "defined_out": [
        "next_list#0",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)",
        "next_list#0"
      ]
    },
    "1111": {
      "op": "box_put",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1112": {
      "retsub": true,
      "op": "retsub"
    },
    "1113": {
      "block": "remove_operator_from_label_bool_false@7",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "1114": {
      "op": "b remove_operator_from_label_bool_merge@8"
    },
    "1117": {
      "block": "remove_operator_from_label_bool_false@3",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "1118": {
      "op": "b remove_operator_from_label_bool_merge@4"
    },
    "1121": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_labels",
      "params": {
        "operator#0": "bytes"
      },
      "block": "get_operator_labels",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1124": {
      "op": "frame_dig -1",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "1126": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "1127": {
      "op": "bury 1",
      "stack_out": [
        "cond#0"
      ]
    },
    "1129": {
      "op": "bnz get_operator_labels_after_if_else@3",
      "stack_out": []
    },
    "1132": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "\"ERR:NOEXIST\""
      ]
    },
    "1133": {
      "op": "log",
      "stack_out": []
    },
    "1134": {
      "op": "err"
    },
    "1135": {
      "block": "get_operator_labels_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "1137": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1138": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1139": {
      "retsub": true,
      "op": "retsub"
    }
  }
}