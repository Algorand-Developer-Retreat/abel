{
  "version": 3,
  "sources": [
    "../../asset_labeling/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DQ;;AAAa;;AAAb;AAFR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAubK;;AAAA;AAAA;AAAA;;AAAA;AAvbL;;;AAubK;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAnbL;;;AAAA;AAmbK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAjCA;;AAAA;AAAA;AAAA;;AAAA;AAlZL;;;AAkZK;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AA9YL;;;AAAA;AA8YK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AApBA;;AAAA;AAAA;AAAA;;AAAA;AA1XL;;;AA0XK;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAtXL;;;AAAA;AAsXK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AArWL;;;AAqWK;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAjWL;;;AAAA;AAiWK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AAjVL;;;AAiVK;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AA7UL;;;AAAA;AA6UK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AA5TL;;;AA4TK;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAxTL;;;AAAA;AAwTK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AAxSL;;;AAwSK;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AApSL;;;AAAA;AAoSK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AApRL;;;AAoRK;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAhRL;;;AAAA;AAgRK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA3BA;;AAAA;AAAA;AAAA;;AAAA;AArPL;;;AAqPK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AA9OL;;;AAAA;AAAA;;AA8OK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAlCA;;AAAA;AAAA;AAAA;;AAAA;AA5ML;;;AAAA;;;AAAA;;;AAAA;AAAA;;AA4MK;;;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AApML;;;AAAA;;;AAAA;;;AAoMK;;;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AA/LL;;;AAAA;;;AAAA;;;AAAA;AAAA;;AA+LK;;;AAAA;;AAxCA;;AAAA;AAAA;AAAA;;AAAA;AAvJL;;;AAAA;AAAA;;AAuJK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAzCA;;AAAA;AAAA;AAAA;;AAAA;AA9GL;;;AAAA;AAAA;;AAAA;;;AAAA;;;AA8GK;;;AAAA;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AAlFL;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAkFK;;;AAAA;;AAjCA;;AAAA;AAAA;AAAA;;AAAA;AAjDL;;;AAiDK;;;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AA5CL;;;AAAA;;;AA4CK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AApCL;;;AAAA;;;AAoCK;;;AAAA;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAzBL;;;AAAA;;;AAAA;;;AAAA;;;AAyBK;;;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AApBL;;;AAAA;AAAA;;AAoBK;;;AAAA;;AApBL;;AAAA;;;;;;;;;;;;;;AAAA;;;AAYK;;AAAA;AAAA;;;AAAA;;AAJA;;AAAA;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAbL;;;AAEW;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAP;AAaI;;;;AAIA;;;;AAIO;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAjCR;;;AAiCkC;;AAhCjC;AACA;;AAiCR;;;AAEQ;;;AACA;;AAAA;;AAAA;;AAER;;;AAEQ;;;AACO;;AAAA;AAAA;;AA3CR;;;AA2C+B;;AA1C9B;AACA;AA0CO;;AAAA;AAAmB;AAAnB;AA5CR;;;AA4C8B;;;;;;;;;;;;AA3C7B;AACA;AA4CI;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AADc;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAlB;;AAAA;;AAAA;;AAAA;AAAA;;AAMR;;;AAEQ;;;AACO;;AAAA;AAAA;;AAtDR;;;AAsD2B;AArD1B;AACA;AAqDO;;AAAA;AAAA;AAAA;;;AAA8B;;AAA9B;AAvDR;;;AAuDyC;;AAtDxC;AACA;AAsDO;;AAAA;AAAA;AAAA;;;AAAiC;;AAAjC;AAxDR;;;AAwD4C;;AAvD3C;AACA;AAuDA;;AAAA;;;AAER;;;AAEe;;AAAA;AAAA;;AA7DR;;;AA6D2B;AA5D1B;AACA;AA4DO;;AAAA;AAAA;AAAP;AAER;;;AAEA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC4B;;;AAAZ;AAAA;AAAJ;;;;;;;;;AAMZ;;;AAEW;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAX;;;AACY;AACJ;;AAAA;;;;AAER;;;AAEuD;;AAA/C;;AAAiB;;;AAAjB;AAEsB;;AAAlB;AAAA;;;AACI;;AAAkB;;AAAlB;AADJ;;;;AAnFL;;;AAqFK;;AApFJ;AACA;;;;;;AAsFR;;;;;;AAEW;;AAAA;AAAA;;AAAA;;;AACQ;;AAAP;;AAAA;AACgC;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAA5C;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACe;;;AAAA;;AAAA;AAAf;;;AACgB;;AAAA;;AAAA;;;;;;;;;;AACD;;AAAP;;AAAA;AAER;;;AAEQ;;AAAA;;;AACO;;AAAA;AAAA;;AApGR;;;AAoG8B;AAnG7B;AACA;AAoGG;;AAAA;AAAA;;AAAX;;;AAGgB;;AAAA;;AAAA;;;AACG;;AADH;AAzGT;;;AA2GS;;AA1GR;AACA;AA6Ge;;AAAA;AAAA;AACK;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAhB;AAAA;;;AACA;;AAAA;;AAAA;;AAAA;AAAA;AAMe;;AAAA;AAAA;AAEf;AAAA;;AAAA;AAAwC;AAAxC;AAD6B;AAAjC;;AAGA;;AAAA;;AAAA;;AAAA;AAAA;;AAPiD;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAlB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAA3B;;AAAA;;AAAA;;AAAA;AAAA;;;;AASZ;;;;;;;;;AAEQ;;AAAA;;;AAEO;;AAAA;AAAA;;AAjIR;;;AAiI8B;AAhI7B;AACA;AAgIO;;AAAA;AAAA;;AAlIR;;;AAkIoC;AAjInC;AACA;AAmIA;;AAAA;;AAAY;;;AAAZ;AAAA;;AAEiB;;AAAb;AAAA;;;AACI;;AACD;;AADC;AADJ;;;;AAvIL;;;AA0IK;AAzIJ;AACA;AA4ImB;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEf;;;AAAiC;;;;;;;;;;AAAjC;AAAA;;;AAAsC;;AAAA;;;AAA+B;;AAA/B;AAAtC;;;;AAhJL;;;AAiJK;;AAhJJ;AACA;AAmJI;;AAAA;AAAA;;AAAA;AAAwC;AAAxC;AAD6B;AAAjC;;AAGA;;AAAA;;AAAA;;AAAA;AAAA;AAEG;;AAAA;AAAA;AAAA;AAAA;AAAmC;AAAnC;AAAX;;;AACY;;AAAA;;;AAEY;AAAA;;AAIwB;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAhD;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgB;;AACG;;AAAA;;;;;AAAnB;;;AACoB;;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAER;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;;;AAEZ;;;AAEW;;AAAA;AAAA;;AAAX;;;AACmB;;AAAA;AAAA;AAAP;AAlKD;AAoKH;AAWR;;;;;;;AAEe;;AAAA;AAAA;;AAxLR;;;AAwL8B;AAvL7B;AACA;AAuLG;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAX;;;AAVW;;AAAA;AAAA;;AAAA;;;AACQ;;AAYyC;;AAA5C;AA5LT;;;AA6LS;;AA5LR;AACA;AA8Le;;AAAA;AAAA;AAAA;AACK;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAhB;AAAA;;;AACA;;AAAA;;AAAA;AAMe;;AAAA;AAAA;AAEf;AAAA;AAAA;AAAqC;AAArC;AAD0B;AAA9B;;AAGA;;AAAA;;AAAA;;AAAA;AAAA;;AA3BoC;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAA5C;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACe;;;AAAA;;AAAA;AAAf;;;;;AAUgB;;;;;;;;;;;;AARD;;AAQC;;;AASmC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAlB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAArB;;AAAA;AAAA;;AAAA;AAAA;;;;AASZ;;;AAEQ;;AAAA;;;AACA;;AAAA;;AAAA;;;;AAER;;;AAIQ;;AAAA;;;AACR;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACkD;AAAtC;;AAAA;AAAA;;;;;;;;;;;AAEZ;;;;;;;;;AAEe;;AAAA;AAAA;;AA7NR;;;AA6N8B;AA5N7B;AACA;AA6NA;;AAAA;;;AAEQ;AAAR;;AACG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA6B;AAA7B;AAAX;;;AACe;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAf;;;AACgB;;AAAA;;AACQ;AAAR;;AArOT;;AAAA;;;AAoPe;AAnPd;AACA;AAqPmB;;AAAA;AAAA;AAEf;AAAA;AAAA;AAAqC;AAArC;AAD0B;AAA9B;;AAGA;;AAAA;;AAAA;;AAAA;AAAA;;AApBgB;AAAR;;;;;AAEQ;AAAA;;AAGwB;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAhD;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgB;AAAA;;AACG;;;AAAA;;AAAA;AAAnB;;;AACoB;;AAAA;;AAAA;AAAA;;;AAAA;;;;;;;;;;;AAEQ;AAAR;;;;;AAER;;AAAA;AAAA;;AAAA;;AAAA;;;;AAWZ;;;AAEW;;AAAA;AAAA;AAAA;AAAA;;AAAX;;;AACmB;;AAAA;AAAA;AAAP;AAAA;AAzPD;AA2PH;AAAA;AAER;;;;AAIc;AACd;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAC0B;AACX;AAAA;AAAA;;AAAA;AAAA;;AAAf;;;AAC2B;;AAAA;AAAA;AAAX;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;;;;;;;;;;;AAEA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;;;AAAA;;;AAAA;;;;;AACR;;AAAA;;AAAA;AAQR;;;AAI4B;;AAAA;;AAAA;AAAN;;;AACU;;AAAA;;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAFN;;;;AAAA;AAAA;AAAA;AAAA;AAAP;AAKR;;;AAEe;;AAAA;;;AAAP;AAER;;;AAEA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACsC;AAAtB;;;AAAJ;;;;;;;;;AAIZ;;;AAI4B;;AAAA;;AAAA;AAAN;;;AACU;;AAAA;;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAC2B;;AAAA;AAAA;AAAA;AAAA;;AAA7B;;;AAAA;;AAAA;AAAA;AAHJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;;AAAA;AAtSG;;;;AA4SX;;;AAEe;;AAAA;;;AAAP;AAER;;;AAEA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAC6C;AAA7B;;;AAAJ;;;;;;;;;AAIZ;;;AAIuB;;AAAA;;AAAA;AAAN;;;AACW;;AAAA;;AAAA;AAAN;;;AACU;;AAAA;;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAHN;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAP;AAMR;;;AAEe;;AAAA;;;AAAP;AAER;;;AAEA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACqC;AAArB;;;AAAJ;;;;;;;;;AAIZ;;;AAIuB;;AAAA;;AAAA;AAAN;;;AACW;;AAAA;;AAAA;AAAN;;;AACU;;AAAA;;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAC2B;;AAAA;AAAA;AAAA;AAAA;;AAA7B;;;AAAA;;AAAA;AAAA;AAJJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;;AAAA;AA9UG;;;;AAqVX;;;AAEe;;AAAA;;;AAAP;AAER;;;AAEA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAC4C;AAA5B;;;AAAJ;;;;;;;;;AAIZ;;;AAIuB;;AAAA;;AAAA;AAAN;;;AACW;;AAAA;;AAAA;AAAN;;;AACA;;AAAA;;AAAA;AAAN;;;AAHD;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAP;AAMR;;;AAEe;;AAAA;;;AAAP;AAER;;;AAEA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACqC;AAArB;;;AAAJ;;;;;;;;;AAIZ;;;AAIuB;;AAAA;;AAAA;AAAN;;;AACW;;AAAA;;AAAA;AAAN;;;AACA;;AAAA;;AAAA;AAAN;;;AACgC;;AAAA;AAAA;AAAA;AAAA;;AAA7B;;;AAAA;;AAAA;AAAA;AAJJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;;AAAA;AAvXG;;;;AA8XX;;;AAEe;;AAAA;;;AAAP;AAER;;;AAEA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAC4C;AAA5B;;;AAAJ;;;;;;;;;AAIZ;;;AAIuB;;AAAA;;AAAA;AAAN;;;AACW;;AAAA;;AAAA;AAAN;;;AACU;;AAAA;;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AACS;;AAAA;;AAAA;AAAZ;AACe;;AAAA;;AAAA;AAAgB;;AAAhB;AAAV;;AAAA;AAAA;;AAAA;AACY;;AAAA;;AAAA;AAAkB;;AAAlB;AAAV;;AAAA;AAAA;;AAAA;AACuB;;AAAA;AAAA;AAAA;AAAA;;AAA7B;;;AAAA;;AAAA;AAAA;AAPJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;;AAAA;AA5YG;;;;AAsZX;;;AAEe;;AAAA;;;AAAP;AAER;;;AAEA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACsC;AAAtB;;;AAAJ;;;;;;;;;AAIZ;;;;;;AAG+B;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAGhB;;AAAA;;AAAA;;AADH;;;AAAA;;AAAA;;AAAA;;AAAA;AAKW;;AAAA;;AAAA;AAAN;;;AAAA;;AACW;;AAAA;;AAAA;AAAN;;;AAAA;;AACA;;AAAA;;AAAA;AAAN;;;AAAA;;AACc;;AAAA;;AAAA;AAAZ;AAAA;;AACc;;AAAA;;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AACY;;AAAA;;AAAA;AAAA;;AAAA;AACA;;AAAA;;AAAA;AAAA;;AAAA;AACD;;AAAA;;AAAA;AAAA;;AAAA;AACE;;AAAA;;AAAA;AAAA;;AAAA;AACD;;AAAA;;AAAA;AAAA;;AAAA;AACI;;AAAA;;AAAA;AAAV;;AAAA;AAAA;;AAAA;AAAA;;AAEiB;;AAAA;;AAAA;AAAlB;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AADE;AAAA;;AAEoB;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAA7B;;;AAAA;;AAAA;AAAA;AAdJ;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;;AAAA;AA1aG;;;;AAwaM;;;;AAmBjB;;;AAEe;;AAAA;;;AAAP;AAER;;;AAEA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACqC;AAArB;;;AAAJ;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 2 8 4294967295 4294967296"
    },
    "17": {
      "op": "bytecblock 0x151f7c75 0x0000 \"ERR:NOEXIST\" \"\" \"admin\" \"ERR:EXISTS\" 0x0000000000000000 \"ERR:NOEMPTY\" 0x0002 0x00 \"ERR:UNAUTH\" 0x0001 0x0005"
    },
    "100": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "102": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "105": {
      "op": "bytec 4 // \"admin\"",
      "defined_out": [
        "\"admin\""
      ],
      "stack_out": [
        "\"admin\""
      ]
    },
    "107": {
      "op": "txn Sender",
      "defined_out": [
        "\"admin\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "\"admin\"",
        "new_state_value%0#0"
      ]
    },
    "109": {
      "op": "app_global_put",
      "stack_out": []
    },
    "110": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "112": {
      "op": "bz main_bare_routing@34",
      "stack_out": []
    },
    "115": {
      "op": "pushbytess 0x8f0d7d8e 0x7c1b32f6 0x17e691ae 0x33d0ffdc 0x725616e7 0xfac1cf1b 0xb4c50b9f 0xa2dd2247 0xa37dea11 0x135ab21e 0x68f18efa 0xc2ed743f 0xa67f03c2 0xaaee0c61 0xb6c39f68 0x635be362 0x7093b10d 0x70ac99ad 0xd9a2bd9c 0x76c6528e 0x51f77bff 0x20d9f24c 0x5540b80a 0x0710e5c4 0x6f17cdd5 0x7a4ce4b9 0x366c51af 0x34a48fbc 0x03ba98db // method \"change_admin(account)void\", method \"add_label(string,string)void\", method \"remove_label(string)void\", method \"get_label(string)(string,uint64,uint64)\", method \"log_labels(string[])void\", method \"add_operator_to_label(account,string)void\", method \"remove_operator_from_label(account,string)void\", method \"get_operator_labels(account)string[]\", method \"add_label_to_asset(string,asset)void\", method \"add_label_to_assets(string,uint64[])void\", method \"remove_label_from_asset(string,asset)void\", method \"get_asset_labels(asset)string[]\", method \"get_assets_labels(uint64[])string[][]\", method \"get_asset_micro(uint64)(string,uint8)\", method \"get_assets_micro(uint64[])void\", method \"get_asset_micro_labels(uint64)(string,uint8,string[])\", method \"get_assets_micro_labels(uint64[])void\", method \"get_asset_tiny(uint64)(string,string,uint8)\", method \"get_assets_tiny(uint64[])void\", method \"get_asset_tiny_labels(uint64)(string,string,uint8,string[])\", method \"get_assets_tiny_labels(uint64[])void\", method \"get_asset_text(uint64)(string,string,string)\", method \"get_assets_text(uint64[])void\", method \"get_asset_text_labels(uint64)(string,string,string,string[])\", method \"get_assets_text_labels(uint64[])void\", method \"get_asset_small(uint64)(string,string,uint8,uint64,bool,bool,string[])\", method \"get_assets_small(uint64[])void\", method \"get_asset_full(uint64)(string,string,string,uint64,uint8,address,address,address,address,address,bool,byte[],uint64,string[])\", method \"get_assets_full(uint64[])void\"",
      "defined_out": [
        "Method(add_label(string,string)void)",
        "Method(add_label_to_asset(string,asset)void)",
        "Method(add_label_to_assets(string,uint64[])void)",
        "Method(add_operator_to_label(account,string)void)",
        "Method(change_admin(account)void)",
        "Method(get_asset_full(uint64)(string,string,string,uint64,uint8,address,address,address,address,address,bool,byte[],uint64,string[]))",
        "Method(get_asset_labels(asset)string[])",
        "Method(get_asset_micro(uint64)(string,uint8))",
        "Method(get_asset_micro_labels(uint64)(string,uint8,string[]))",
        "Method(get_asset_small(uint64)(string,string,uint8,uint64,bool,bool,string[]))",
        "Method(get_asset_text(uint64)(string,string,string))",
        "Method(get_asset_text_labels(uint64)(string,string,string,string[]))",
        "Method(get_asset_tiny(uint64)(string,string,uint8))",
        "Method(get_asset_tiny_labels(uint64)(string,string,uint8,string[]))",
        "Method(get_assets_full(uint64[])void)",
        "Method(get_assets_labels(uint64[])string[][])",
        "Method(get_assets_micro(uint64[])void)",
        "Method(get_assets_micro_labels(uint64[])void)",
        "Method(get_assets_small(uint64[])void)",
        "Method(get_assets_text(uint64[])void)",
        "Method(get_assets_text_labels(uint64[])void)",
        "Method(get_assets_tiny(uint64[])void)",
        "Method(get_assets_tiny_labels(uint64[])void)",
        "Method(get_label(string)(string,uint64,uint64))",
        "Method(get_operator_labels(account)string[])",
        "Method(log_labels(string[])void)",
        "Method(remove_label(string)void)",
        "Method(remove_label_from_asset(string,asset)void)",
        "Method(remove_operator_from_label(account,string)void)"
      ],
      "stack_out": [
        "Method(change_admin(account)void)",
        "Method(add_label(string,string)void)",
        "Method(remove_label(string)void)",
        "Method(get_label(string)(string,uint64,uint64))",
        "Method(log_labels(string[])void)",
        "Method(add_operator_to_label(account,string)void)",
        "Method(remove_operator_from_label(account,string)void)",
        "Method(get_operator_labels(account)string[])",
        "Method(add_label_to_asset(string,asset)void)",
        "Method(add_label_to_assets(string,uint64[])void)",
        "Method(remove_label_from_asset(string,asset)void)",
        "Method(get_asset_labels(asset)string[])",
        "Method(get_assets_labels(uint64[])string[][])",
        "Method(get_asset_micro(uint64)(string,uint8))",
        "Method(get_assets_micro(uint64[])void)",
        "Method(get_asset_micro_labels(uint64)(string,uint8,string[]))",
        "Method(get_assets_micro_labels(uint64[])void)",
        "Method(get_asset_tiny(uint64)(string,string,uint8))",
        "Method(get_assets_tiny(uint64[])void)",
        "Method(get_asset_tiny_labels(uint64)(string,string,uint8,string[]))",
        "Method(get_assets_tiny_labels(uint64[])void)",
        "Method(get_asset_text(uint64)(string,string,string))",
        "Method(get_assets_text(uint64[])void)",
        "Method(get_asset_text_labels(uint64)(string,string,string,string[]))",
        "Method(get_assets_text_labels(uint64[])void)",
        "Method(get_asset_small(uint64)(string,string,uint8,uint64,bool,bool,string[]))",
        "Method(get_assets_small(uint64[])void)",
        "Method(get_asset_full(uint64)(string,string,string,uint64,uint8,address,address,address,address,address,bool,byte[],uint64,string[]))",
        "Method(get_assets_full(uint64[])void)"
      ]
    },
    "262": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(add_label(string,string)void)",
        "Method(add_label_to_asset(string,asset)void)",
        "Method(add_label_to_assets(string,uint64[])void)",
        "Method(add_operator_to_label(account,string)void)",
        "Method(change_admin(account)void)",
        "Method(get_asset_full(uint64)(string,string,string,uint64,uint8,address,address,address,address,address,bool,byte[],uint64,string[]))",
        "Method(get_asset_labels(asset)string[])",
        "Method(get_asset_micro(uint64)(string,uint8))",
        "Method(get_asset_micro_labels(uint64)(string,uint8,string[]))",
        "Method(get_asset_small(uint64)(string,string,uint8,uint64,bool,bool,string[]))",
        "Method(get_asset_text(uint64)(string,string,string))",
        "Method(get_asset_text_labels(uint64)(string,string,string,string[]))",
        "Method(get_asset_tiny(uint64)(string,string,uint8))",
        "Method(get_asset_tiny_labels(uint64)(string,string,uint8,string[]))",
        "Method(get_assets_full(uint64[])void)",
        "Method(get_assets_labels(uint64[])string[][])",
        "Method(get_assets_micro(uint64[])void)",
        "Method(get_assets_micro_labels(uint64[])void)",
        "Method(get_assets_small(uint64[])void)",
        "Method(get_assets_text(uint64[])void)",
        "Method(get_assets_text_labels(uint64[])void)",
        "Method(get_assets_tiny(uint64[])void)",
        "Method(get_assets_tiny_labels(uint64[])void)",
        "Method(get_label(string)(string,uint64,uint64))",
        "Method(get_operator_labels(account)string[])",
        "Method(log_labels(string[])void)",
        "Method(remove_label(string)void)",
        "Method(remove_label_from_asset(string,asset)void)",
        "Method(remove_operator_from_label(account,string)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(change_admin(account)void)",
        "Method(add_label(string,string)void)",
        "Method(remove_label(string)void)",
        "Method(get_label(string)(string,uint64,uint64))",
        "Method(log_labels(string[])void)",
        "Method(add_operator_to_label(account,string)void)",
        "Method(remove_operator_from_label(account,string)void)",
        "Method(get_operator_labels(account)string[])",
        "Method(add_label_to_asset(string,asset)void)",
        "Method(add_label_to_assets(string,uint64[])void)",
        "Method(remove_label_from_asset(string,asset)void)",
        "Method(get_asset_labels(asset)string[])",
        "Method(get_assets_labels(uint64[])string[][])",
        "Method(get_asset_micro(uint64)(string,uint8))",
        "Method(get_assets_micro(uint64[])void)",
        "Method(get_asset_micro_labels(uint64)(string,uint8,string[]))",
        "Method(get_assets_micro_labels(uint64[])void)",
        "Method(get_asset_tiny(uint64)(string,string,uint8))",
        "Method(get_assets_tiny(uint64[])void)",
        "Method(get_asset_tiny_labels(uint64)(string,string,uint8,string[]))",
        "Method(get_assets_tiny_labels(uint64[])void)",
        "Method(get_asset_text(uint64)(string,string,string))",
        "Method(get_assets_text(uint64[])void)",
        "Method(get_asset_text_labels(uint64)(string,string,string,string[]))",
        "Method(get_assets_text_labels(uint64[])void)",
        "Method(get_asset_small(uint64)(string,string,uint8,uint64,bool,bool,string[]))",
        "Method(get_assets_small(uint64[])void)",
        "Method(get_asset_full(uint64)(string,string,string,uint64,uint8,address,address,address,address,address,bool,byte[],uint64,string[]))",
        "Method(get_assets_full(uint64[])void)",
        "tmp%2#0"
      ]
    },
    "265": {
      "op": "match main_change_admin_route@5 main_add_label_route@6 main_remove_label_route@7 main_get_label_route@8 main_log_labels_route@9 main_add_operator_to_label_route@10 main_remove_operator_from_label_route@11 main_get_operator_labels_route@12 main_add_label_to_asset_route@13 main_add_label_to_assets_route@14 main_remove_label_from_asset_route@15 main_get_asset_labels_route@16 main_get_assets_labels_route@17 main_get_asset_micro_route@18 main_get_assets_micro_route@19 main_get_asset_micro_labels_route@20 main_get_assets_micro_labels_route@21 main_get_asset_tiny_route@22 main_get_assets_tiny_route@23 main_get_asset_tiny_labels_route@24 main_get_assets_tiny_labels_route@25 main_get_asset_text_route@26 main_get_assets_text_route@27 main_get_asset_text_labels_route@28 main_get_assets_text_labels_route@29 main_get_asset_small_route@30 main_get_assets_small_route@31 main_get_asset_full_route@32 main_get_assets_full_route@33",
      "stack_out": []
    },
    "325": {
      "block": "main_after_if_else@38",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "326": {
      "op": "return",
      "stack_out": []
    },
    "327": {
      "block": "main_get_assets_full_route@33",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%189#0"
      ],
      "stack_out": [
        "tmp%189#0"
      ]
    },
    "329": {
      "op": "!",
      "defined_out": [
        "tmp%190#0"
      ],
      "stack_out": [
        "tmp%190#0"
      ]
    },
    "330": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "331": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%191#0"
      ],
      "stack_out": [
        "tmp%191#0"
      ]
    },
    "333": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "334": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%193#0"
      ],
      "stack_out": [
        "tmp%193#0"
      ]
    },
    "337": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_full",
      "op": "callsub get_assets_full",
      "stack_out": []
    },
    "340": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "341": {
      "op": "return",
      "stack_out": []
    },
    "342": {
      "block": "main_get_asset_full_route@32",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%182#0"
      ],
      "stack_out": [
        "tmp%182#0"
      ]
    },
    "344": {
      "op": "!",
      "defined_out": [
        "tmp%183#0"
      ],
      "stack_out": [
        "tmp%183#0"
      ]
    },
    "345": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "346": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%184#0"
      ],
      "stack_out": [
        "tmp%184#0"
      ]
    },
    "348": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "349": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "352": {
      "op": "btoi",
      "defined_out": [
        "tmp%186#0"
      ],
      "stack_out": [
        "tmp%186#0"
      ]
    },
    "353": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_full",
      "op": "callsub get_asset_full",
      "defined_out": [
        "tmp%187#0"
      ],
      "stack_out": [
        "tmp%187#0"
      ]
    },
    "356": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%187#0"
      ],
      "stack_out": [
        "tmp%187#0",
        "0x151f7c75"
      ]
    },
    "357": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%187#0"
      ]
    },
    "358": {
      "op": "concat",
      "defined_out": [
        "tmp%188#0"
      ],
      "stack_out": [
        "tmp%188#0"
      ]
    },
    "359": {
      "op": "log",
      "stack_out": []
    },
    "360": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "361": {
      "op": "return",
      "stack_out": []
    },
    "362": {
      "block": "main_get_assets_small_route@31",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%177#0"
      ],
      "stack_out": [
        "tmp%177#0"
      ]
    },
    "364": {
      "op": "!",
      "defined_out": [
        "tmp%178#0"
      ],
      "stack_out": [
        "tmp%178#0"
      ]
    },
    "365": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "366": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%179#0"
      ],
      "stack_out": [
        "tmp%179#0"
      ]
    },
    "368": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "369": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%181#0"
      ],
      "stack_out": [
        "tmp%181#0"
      ]
    },
    "372": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_small",
      "op": "callsub get_assets_small",
      "stack_out": []
    },
    "375": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "376": {
      "op": "return",
      "stack_out": []
    },
    "377": {
      "block": "main_get_asset_small_route@30",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%170#0"
      ],
      "stack_out": [
        "tmp%170#0"
      ]
    },
    "379": {
      "op": "!",
      "defined_out": [
        "tmp%171#0"
      ],
      "stack_out": [
        "tmp%171#0"
      ]
    },
    "380": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "381": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%172#0"
      ],
      "stack_out": [
        "tmp%172#0"
      ]
    },
    "383": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "384": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "387": {
      "op": "btoi",
      "defined_out": [
        "tmp%174#0"
      ],
      "stack_out": [
        "tmp%174#0"
      ]
    },
    "388": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_small",
      "op": "callsub get_asset_small",
      "defined_out": [
        "tmp%175#0"
      ],
      "stack_out": [
        "tmp%175#0"
      ]
    },
    "391": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%175#0"
      ],
      "stack_out": [
        "tmp%175#0",
        "0x151f7c75"
      ]
    },
    "392": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%175#0"
      ]
    },
    "393": {
      "op": "concat",
      "defined_out": [
        "tmp%176#0"
      ],
      "stack_out": [
        "tmp%176#0"
      ]
    },
    "394": {
      "op": "log",
      "stack_out": []
    },
    "395": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "396": {
      "op": "return",
      "stack_out": []
    },
    "397": {
      "block": "main_get_assets_text_labels_route@29",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%165#0"
      ],
      "stack_out": [
        "tmp%165#0"
      ]
    },
    "399": {
      "op": "!",
      "defined_out": [
        "tmp%166#0"
      ],
      "stack_out": [
        "tmp%166#0"
      ]
    },
    "400": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "401": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%167#0"
      ],
      "stack_out": [
        "tmp%167#0"
      ]
    },
    "403": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "404": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%169#0"
      ],
      "stack_out": [
        "tmp%169#0"
      ]
    },
    "407": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_text_labels",
      "op": "callsub get_assets_text_labels",
      "stack_out": []
    },
    "410": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "411": {
      "op": "return",
      "stack_out": []
    },
    "412": {
      "block": "main_get_asset_text_labels_route@28",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%158#0"
      ],
      "stack_out": [
        "tmp%158#0"
      ]
    },
    "414": {
      "op": "!",
      "defined_out": [
        "tmp%159#0"
      ],
      "stack_out": [
        "tmp%159#0"
      ]
    },
    "415": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "416": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%160#0"
      ],
      "stack_out": [
        "tmp%160#0"
      ]
    },
    "418": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "419": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "422": {
      "op": "btoi",
      "defined_out": [
        "tmp%162#0"
      ],
      "stack_out": [
        "tmp%162#0"
      ]
    },
    "423": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_text_labels",
      "op": "callsub get_asset_text_labels",
      "defined_out": [
        "tmp%163#0"
      ],
      "stack_out": [
        "tmp%163#0"
      ]
    },
    "426": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%163#0"
      ],
      "stack_out": [
        "tmp%163#0",
        "0x151f7c75"
      ]
    },
    "427": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%163#0"
      ]
    },
    "428": {
      "op": "concat",
      "defined_out": [
        "tmp%164#0"
      ],
      "stack_out": [
        "tmp%164#0"
      ]
    },
    "429": {
      "op": "log",
      "stack_out": []
    },
    "430": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "431": {
      "op": "return",
      "stack_out": []
    },
    "432": {
      "block": "main_get_assets_text_route@27",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%153#0"
      ],
      "stack_out": [
        "tmp%153#0"
      ]
    },
    "434": {
      "op": "!",
      "defined_out": [
        "tmp%154#0"
      ],
      "stack_out": [
        "tmp%154#0"
      ]
    },
    "435": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "436": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%155#0"
      ],
      "stack_out": [
        "tmp%155#0"
      ]
    },
    "438": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "439": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%157#0"
      ],
      "stack_out": [
        "tmp%157#0"
      ]
    },
    "442": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_text",
      "op": "callsub get_assets_text",
      "stack_out": []
    },
    "445": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "446": {
      "op": "return",
      "stack_out": []
    },
    "447": {
      "block": "main_get_asset_text_route@26",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%146#0"
      ],
      "stack_out": [
        "tmp%146#0"
      ]
    },
    "449": {
      "op": "!",
      "defined_out": [
        "tmp%147#0"
      ],
      "stack_out": [
        "tmp%147#0"
      ]
    },
    "450": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "451": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%148#0"
      ],
      "stack_out": [
        "tmp%148#0"
      ]
    },
    "453": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "454": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "457": {
      "op": "btoi",
      "defined_out": [
        "tmp%150#0"
      ],
      "stack_out": [
        "tmp%150#0"
      ]
    },
    "458": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_text",
      "op": "callsub get_asset_text",
      "defined_out": [
        "tmp%151#0"
      ],
      "stack_out": [
        "tmp%151#0"
      ]
    },
    "461": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%151#0"
      ],
      "stack_out": [
        "tmp%151#0",
        "0x151f7c75"
      ]
    },
    "462": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%151#0"
      ]
    },
    "463": {
      "op": "concat",
      "defined_out": [
        "tmp%152#0"
      ],
      "stack_out": [
        "tmp%152#0"
      ]
    },
    "464": {
      "op": "log",
      "stack_out": []
    },
    "465": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "466": {
      "op": "return",
      "stack_out": []
    },
    "467": {
      "block": "main_get_assets_tiny_labels_route@25",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%141#0"
      ],
      "stack_out": [
        "tmp%141#0"
      ]
    },
    "469": {
      "op": "!",
      "defined_out": [
        "tmp%142#0"
      ],
      "stack_out": [
        "tmp%142#0"
      ]
    },
    "470": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "471": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%143#0"
      ],
      "stack_out": [
        "tmp%143#0"
      ]
    },
    "473": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "474": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%145#0"
      ],
      "stack_out": [
        "tmp%145#0"
      ]
    },
    "477": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_tiny_labels",
      "op": "callsub get_assets_tiny_labels",
      "stack_out": []
    },
    "480": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "481": {
      "op": "return",
      "stack_out": []
    },
    "482": {
      "block": "main_get_asset_tiny_labels_route@24",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%134#0"
      ],
      "stack_out": [
        "tmp%134#0"
      ]
    },
    "484": {
      "op": "!",
      "defined_out": [
        "tmp%135#0"
      ],
      "stack_out": [
        "tmp%135#0"
      ]
    },
    "485": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "486": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%136#0"
      ],
      "stack_out": [
        "tmp%136#0"
      ]
    },
    "488": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "489": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "492": {
      "op": "btoi",
      "defined_out": [
        "tmp%138#0"
      ],
      "stack_out": [
        "tmp%138#0"
      ]
    },
    "493": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_tiny_labels",
      "op": "callsub get_asset_tiny_labels",
      "defined_out": [
        "tmp%139#0"
      ],
      "stack_out": [
        "tmp%139#0"
      ]
    },
    "496": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%139#0"
      ],
      "stack_out": [
        "tmp%139#0",
        "0x151f7c75"
      ]
    },
    "497": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%139#0"
      ]
    },
    "498": {
      "op": "concat",
      "defined_out": [
        "tmp%140#0"
      ],
      "stack_out": [
        "tmp%140#0"
      ]
    },
    "499": {
      "op": "log",
      "stack_out": []
    },
    "500": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "501": {
      "op": "return",
      "stack_out": []
    },
    "502": {
      "block": "main_get_assets_tiny_route@23",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%129#0"
      ],
      "stack_out": [
        "tmp%129#0"
      ]
    },
    "504": {
      "op": "!",
      "defined_out": [
        "tmp%130#0"
      ],
      "stack_out": [
        "tmp%130#0"
      ]
    },
    "505": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "506": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%131#0"
      ],
      "stack_out": [
        "tmp%131#0"
      ]
    },
    "508": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "509": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%133#0"
      ],
      "stack_out": [
        "tmp%133#0"
      ]
    },
    "512": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_tiny",
      "op": "callsub get_assets_tiny",
      "stack_out": []
    },
    "515": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "516": {
      "op": "return",
      "stack_out": []
    },
    "517": {
      "block": "main_get_asset_tiny_route@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%122#0"
      ],
      "stack_out": [
        "tmp%122#0"
      ]
    },
    "519": {
      "op": "!",
      "defined_out": [
        "tmp%123#0"
      ],
      "stack_out": [
        "tmp%123#0"
      ]
    },
    "520": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "521": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%124#0"
      ],
      "stack_out": [
        "tmp%124#0"
      ]
    },
    "523": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "524": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "527": {
      "op": "btoi",
      "defined_out": [
        "tmp%126#0"
      ],
      "stack_out": [
        "tmp%126#0"
      ]
    },
    "528": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_tiny",
      "op": "callsub get_asset_tiny",
      "defined_out": [
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%127#0"
      ]
    },
    "531": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%127#0",
        "0x151f7c75"
      ]
    },
    "532": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%127#0"
      ]
    },
    "533": {
      "op": "concat",
      "defined_out": [
        "tmp%128#0"
      ],
      "stack_out": [
        "tmp%128#0"
      ]
    },
    "534": {
      "op": "log",
      "stack_out": []
    },
    "535": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "536": {
      "op": "return",
      "stack_out": []
    },
    "537": {
      "block": "main_get_assets_micro_labels_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%117#0"
      ],
      "stack_out": [
        "tmp%117#0"
      ]
    },
    "539": {
      "op": "!",
      "defined_out": [
        "tmp%118#0"
      ],
      "stack_out": [
        "tmp%118#0"
      ]
    },
    "540": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "541": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%119#0"
      ],
      "stack_out": [
        "tmp%119#0"
      ]
    },
    "543": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "544": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%121#0"
      ],
      "stack_out": [
        "tmp%121#0"
      ]
    },
    "547": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_micro_labels",
      "op": "callsub get_assets_micro_labels",
      "stack_out": []
    },
    "550": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "551": {
      "op": "return",
      "stack_out": []
    },
    "552": {
      "block": "main_get_asset_micro_labels_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%110#0"
      ],
      "stack_out": [
        "tmp%110#0"
      ]
    },
    "554": {
      "op": "!",
      "defined_out": [
        "tmp%111#0"
      ],
      "stack_out": [
        "tmp%111#0"
      ]
    },
    "555": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "556": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "558": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "559": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "562": {
      "op": "btoi",
      "defined_out": [
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0"
      ]
    },
    "563": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_micro_labels",
      "op": "callsub get_asset_micro_labels",
      "defined_out": [
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%115#0"
      ]
    },
    "566": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%115#0",
        "0x151f7c75"
      ]
    },
    "567": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%115#0"
      ]
    },
    "568": {
      "op": "concat",
      "defined_out": [
        "tmp%116#0"
      ],
      "stack_out": [
        "tmp%116#0"
      ]
    },
    "569": {
      "op": "log",
      "stack_out": []
    },
    "570": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "571": {
      "op": "return",
      "stack_out": []
    },
    "572": {
      "block": "main_get_assets_micro_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "574": {
      "op": "!",
      "defined_out": [
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%106#0"
      ]
    },
    "575": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "576": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%107#0"
      ],
      "stack_out": [
        "tmp%107#0"
      ]
    },
    "578": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "579": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%109#0"
      ],
      "stack_out": [
        "tmp%109#0"
      ]
    },
    "582": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_micro",
      "op": "callsub get_assets_micro",
      "stack_out": []
    },
    "585": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "586": {
      "op": "return",
      "stack_out": []
    },
    "587": {
      "block": "main_get_asset_micro_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "589": {
      "op": "!",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "590": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "591": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "593": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "594": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "597": {
      "op": "btoi",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "598": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_micro",
      "op": "callsub get_asset_micro",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "601": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0",
        "0x151f7c75"
      ]
    },
    "602": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%103#0"
      ]
    },
    "603": {
      "op": "concat",
      "defined_out": [
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%104#0"
      ]
    },
    "604": {
      "op": "log",
      "stack_out": []
    },
    "605": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "606": {
      "op": "return",
      "stack_out": []
    },
    "607": {
      "block": "main_get_assets_labels_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "609": {
      "op": "!",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "610": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "611": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "613": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "614": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "617": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_labels",
      "op": "callsub get_assets_labels",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "620": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0",
        "0x151f7c75"
      ]
    },
    "621": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%96#0"
      ]
    },
    "622": {
      "op": "concat",
      "defined_out": [
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0"
      ]
    },
    "623": {
      "op": "log",
      "stack_out": []
    },
    "624": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "625": {
      "op": "return",
      "stack_out": []
    },
    "626": {
      "block": "main_get_asset_labels_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "628": {
      "op": "!",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "629": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "630": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "632": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "633": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%6#0"
      ]
    },
    "636": {
      "op": "btoi",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "637": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "639": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_labels",
      "op": "callsub get_asset_labels",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "642": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0",
        "0x151f7c75"
      ]
    },
    "643": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%89#0"
      ]
    },
    "644": {
      "op": "concat",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "645": {
      "op": "log",
      "stack_out": []
    },
    "646": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "647": {
      "op": "return",
      "stack_out": []
    },
    "648": {
      "block": "main_remove_label_from_asset_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "650": {
      "op": "!",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "651": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "652": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "654": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "655": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "658": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "661": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%5#0",
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0",
        "reinterpret_bytes[1]%5#0"
      ]
    },
    "664": {
      "op": "btoi",
      "defined_out": [
        "tmp%80#0",
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%80#0",
        "tmp%81#0"
      ]
    },
    "665": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%80#0",
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%80#0",
        "tmp%82#0"
      ]
    },
    "667": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_label_from_asset",
      "op": "callsub remove_label_from_asset",
      "stack_out": []
    },
    "670": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "671": {
      "op": "return",
      "stack_out": []
    },
    "672": {
      "block": "main_add_label_to_assets_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "674": {
      "op": "!",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "675": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "676": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "678": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "679": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "682": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "685": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%73#0",
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%73#0",
        "tmp%74#0"
      ]
    },
    "688": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.add_label_to_assets",
      "op": "callsub add_label_to_assets",
      "stack_out": []
    },
    "691": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "692": {
      "op": "return",
      "stack_out": []
    },
    "693": {
      "block": "main_add_label_to_asset_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "695": {
      "op": "!",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "696": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "697": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "699": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "700": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "703": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "706": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%4#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0",
        "reinterpret_bytes[1]%4#0"
      ]
    },
    "709": {
      "op": "btoi",
      "defined_out": [
        "tmp%65#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%65#0",
        "tmp%66#0"
      ]
    },
    "710": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%65#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%65#0",
        "tmp%67#0"
      ]
    },
    "712": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.add_label_to_asset",
      "op": "callsub add_label_to_asset",
      "stack_out": []
    },
    "715": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "716": {
      "op": "return",
      "stack_out": []
    },
    "717": {
      "block": "main_get_operator_labels_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "719": {
      "op": "!",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "720": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "721": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "723": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "724": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%3#0"
      ]
    },
    "727": {
      "op": "btoi",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "728": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "730": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_labels",
      "op": "callsub get_operator_labels",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "733": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0",
        "0x151f7c75"
      ]
    },
    "734": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%58#0"
      ]
    },
    "735": {
      "op": "concat",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "736": {
      "op": "log",
      "stack_out": []
    },
    "737": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "738": {
      "op": "return",
      "stack_out": []
    },
    "739": {
      "block": "main_remove_operator_from_label_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "741": {
      "op": "!",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "742": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "743": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "745": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "746": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "749": {
      "op": "btoi",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "750": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "752": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%49#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%49#0",
        "tmp%50#0"
      ]
    },
    "755": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%49#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%49#0",
        "tmp%51#0"
      ]
    },
    "758": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_operator_from_label",
      "op": "callsub remove_operator_from_label",
      "stack_out": []
    },
    "761": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "762": {
      "op": "return",
      "stack_out": []
    },
    "763": {
      "block": "main_add_operator_to_label_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "765": {
      "op": "!",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "766": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "767": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "769": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "770": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "773": {
      "op": "btoi",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "774": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "776": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%41#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "tmp%42#0"
      ]
    },
    "779": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%41#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "tmp%43#0"
      ]
    },
    "782": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.add_operator_to_label",
      "op": "callsub add_operator_to_label",
      "stack_out": []
    },
    "785": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "786": {
      "op": "return",
      "stack_out": []
    },
    "787": {
      "block": "main_log_labels_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "789": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "790": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "791": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "793": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "794": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "797": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.log_labels",
      "op": "callsub log_labels",
      "stack_out": []
    },
    "800": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "801": {
      "op": "return",
      "stack_out": []
    },
    "802": {
      "block": "main_get_label_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "804": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "805": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "806": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "808": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "809": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "812": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "815": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_label",
      "op": "callsub get_label",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "818": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "0x151f7c75"
      ]
    },
    "819": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%29#0"
      ]
    },
    "820": {
      "op": "concat",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "821": {
      "op": "log",
      "stack_out": []
    },
    "822": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "823": {
      "op": "return",
      "stack_out": []
    },
    "824": {
      "block": "main_remove_label_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "826": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "827": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "828": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "830": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "831": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "834": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "837": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_label",
      "op": "callsub remove_label",
      "stack_out": []
    },
    "840": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "841": {
      "op": "return",
      "stack_out": []
    },
    "842": {
      "block": "main_add_label_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "844": {
      "op": "!",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "845": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "846": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "848": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "849": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "852": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "855": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "858": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%16#0"
      ]
    },
    "861": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.add_label",
      "op": "callsub add_label",
      "stack_out": []
    },
    "864": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "865": {
      "op": "return",
      "stack_out": []
    },
    "866": {
      "block": "main_change_admin_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "868": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "869": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "870": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "872": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "873": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "876": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "877": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "879": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.change_admin",
      "op": "callsub change_admin",
      "stack_out": []
    },
    "882": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "883": {
      "op": "return",
      "stack_out": []
    },
    "884": {
      "block": "main_bare_routing@34",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%194#0"
      ],
      "stack_out": [
        "tmp%194#0"
      ]
    },
    "886": {
      "op": "switch main___algopy_default_create@37 main_after_if_else@38 main_after_if_else@38 main_after_if_else@38 main_update@35 main_delete@36",
      "stack_out": []
    },
    "900": {
      "op": "b main_after_if_else@38"
    },
    "903": {
      "block": "main_delete@36",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%197#0"
      ],
      "stack_out": [
        "tmp%197#0"
      ]
    },
    "905": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "906": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.delete",
      "op": "callsub delete"
    },
    "909": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "910": {
      "op": "return",
      "stack_out": []
    },
    "911": {
      "block": "main_update@35",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%195#0"
      ],
      "stack_out": [
        "tmp%195#0"
      ]
    },
    "913": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "914": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.update",
      "op": "callsub update"
    },
    "917": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "918": {
      "op": "return",
      "stack_out": []
    },
    "919": {
      "block": "main___algopy_default_create@37",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%199#0"
      ],
      "stack_out": [
        "tmp%199#0"
      ]
    },
    "921": {
      "op": "!",
      "defined_out": [
        "tmp%200#0"
      ],
      "stack_out": [
        "tmp%200#0"
      ]
    },
    "922": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "923": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "924": {
      "op": "return",
      "stack_out": []
    },
    "925": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64"
      },
      "block": "dynamic_array_concat_byte_length_head",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "928": {
      "op": "frame_dig -3",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "930": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "931": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "932": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "933": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "935": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "new_length#0"
      ]
    },
    "936": {
      "op": "swap",
      "stack_out": [
        "new_length#0",
        "array_length#0"
      ]
    },
    "937": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_length#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "array_length#0",
        "2"
      ]
    },
    "938": {
      "op": "*",
      "defined_out": [
        "new_length#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%0#0"
      ]
    },
    "939": {
      "op": "intc_2 // 2",
      "stack_out": [
        "new_length#0",
        "tmp%0#0",
        "2"
      ]
    },
    "940": {
      "op": "+",
      "defined_out": [
        "header_end#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0"
      ]
    },
    "941": {
      "op": "dig 1",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "new_length#0 (copy)"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "new_length#0 (copy)"
      ]
    },
    "943": {
      "op": "itob",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "tmp%1#0"
      ]
    },
    "944": {
      "op": "extract 6 2",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "tmp%2#0"
      ]
    },
    "947": {
      "op": "cover 2",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0"
      ]
    },
    "949": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "array#0 (copy)"
      ]
    },
    "951": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "array#0 (copy)",
        "2"
      ]
    },
    "952": {
      "op": "dig 2",
      "defined_out": [
        "2",
        "array#0 (copy)",
        "header_end#0",
        "header_end#0 (copy)",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "array#0 (copy)",
        "2",
        "header_end#0 (copy)"
      ]
    },
    "954": {
      "op": "substring3",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0"
      ]
    },
    "955": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0",
        "new_items_count#0 (copy)"
      ]
    },
    "957": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "958": {
      "op": "*",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "959": {
      "op": "bzero",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "960": {
      "op": "concat",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0"
      ]
    },
    "961": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "array#0 (copy)"
      ]
    },
    "963": {
      "op": "len",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "964": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "tmp%7#0",
        "array#0 (copy)"
      ]
    },
    "966": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0",
        "tmp%7#0",
        "array#0 (copy)",
        "header_end#0"
      ]
    },
    "968": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0",
        "array#0 (copy)",
        "header_end#0",
        "tmp%7#0"
      ]
    },
    "970": {
      "op": "substring3",
      "defined_out": [
        "new_length#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "971": {
      "op": "concat",
      "defined_out": [
        "new_length#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%9#0"
      ]
    },
    "972": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "new_length#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%9#0",
        "new_items_bytes#0 (copy)"
      ]
    },
    "974": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail#0",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "array_head_and_tail#0"
      ]
    },
    "975": {
      "op": "swap",
      "defined_out": [
        "array_head_and_tail#0",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "new_length#0"
      ]
    },
    "976": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "new_length#0",
        "2"
      ]
    },
    "977": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail#0",
        "tail_offset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "978": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0",
        "tail_offset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#0"
      ]
    },
    "979": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#0",
        "head_offset#0"
      ]
    },
    "980": {
      "op": "swap",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "981": {
      "block": "dynamic_array_concat_byte_length_head_for_header@2",
      "stack_in": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ]
    },
    "983": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#0"
      ]
    },
    "985": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "continue_looping%0#0"
      ]
    },
    "986": {
      "op": "bz dynamic_array_concat_byte_length_head_after_for@5",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "989": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1"
      ]
    },
    "991": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset#1 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset#1 (copy)"
      ]
    },
    "992": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tmp%5#0"
      ]
    },
    "993": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ]
    },
    "996": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0"
      ]
    },
    "998": {
      "op": "frame_dig 3",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0",
        "head_offset#0"
      ]
    },
    "1000": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "head_offset#0 (copy)",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "1001": {
      "op": "cover 4",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0",
        "head_offset#0 (copy)"
      ]
    },
    "1003": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0",
        "head_offset#0 (copy)",
        "tail_offset_bytes#0"
      ]
    },
    "1005": {
      "op": "replace3",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0"
      ]
    },
    "1006": {
      "op": "dup",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0",
        "array_head_and_tail#0"
      ]
    },
    "1007": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0"
      ]
    },
    "1009": {
      "op": "dig 1",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0",
        "tail_offset#1 (copy)"
      ]
    },
    "1011": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tmp%6#1"
      ]
    },
    "1012": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tmp%6#1",
        "2"
      ]
    },
    "1013": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tmp%7#0"
      ]
    },
    "1014": {
      "op": "+",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "1015": {
      "op": "frame_bury 4",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ]
    },
    "1017": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "2"
      ]
    },
    "1018": {
      "op": "+",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ]
    },
    "1019": {
      "op": "frame_bury 3",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "1021": {
      "op": "b dynamic_array_concat_byte_length_head_for_header@2"
    },
    "1024": {
      "block": "dynamic_array_concat_byte_length_head_after_for@5",
      "stack_in": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tmp%2#0"
      ]
    },
    "1026": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_head_and_tail#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tmp%2#0",
        "array_head_and_tail#0"
      ]
    },
    "1028": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tmp%12#0"
      ]
    },
    "1029": {
      "op": "frame_bury 0"
    },
    "1031": {
      "retsub": true,
      "op": "retsub"
    },
    "1032": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "params": {
        "array_items_count#0": "uint64",
        "array_head_and_tail#0": "bytes",
        "new_items_count#0": "uint64",
        "new_head_and_tail#0": "bytes"
      },
      "block": "dynamic_array_concat_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "1035": {
      "op": "bytec_3 // \"\"",
      "stack_out": [
        "item_offset_adjustment#2"
      ]
    },
    "1036": {
      "op": "dup"
    },
    "1037": {
      "op": "frame_dig -2"
    },
    "1039": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "new_head#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "1040": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0"
      ]
    },
    "1041": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)"
      ]
    },
    "1043": {
      "op": "intc_2 // 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "1044": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0"
      ]
    },
    "1045": {
      "op": "intc_1 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "1046": {
      "block": "dynamic_array_concat_dynamic_element_for_header@1",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1048": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%0#0"
      ]
    },
    "1050": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "1051": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@4",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "1054": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1056": {
      "op": "frame_dig 4",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "1058": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "head_offset#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "1059": {
      "op": "cover 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "1061": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "1062": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "1064": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%1#0"
      ]
    },
    "1065": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%2#0"
      ]
    },
    "1066": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "1069": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%3#0",
        "new_head#0"
      ]
    },
    "1071": {
      "op": "swap",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0",
        "tmp%3#0"
      ]
    },
    "1072": {
      "op": "concat",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "1073": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1075": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "1076": {
      "op": "+",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1077": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "1079": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "1082": {
      "block": "dynamic_array_concat_dynamic_element_after_for@4",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1084": {
      "op": "len",
      "defined_out": [
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "item_offset_adjustment#2"
      ]
    },
    "1085": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "1087": {
      "op": "intc_1 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1088": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "1090": {
      "block": "dynamic_array_concat_dynamic_element_for_header@5",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1092": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "1094": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "head_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "continue_looping%1#0"
      ]
    },
    "1095": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@8",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "1098": {
      "op": "frame_dig -1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "1100": {
      "op": "frame_dig 4",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "1102": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "head_offset#0 (copy)",
        "item_offset_adjustment#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "1103": {
      "op": "cover 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "1105": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "1106": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#2"
      ]
    },
    "1108": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "tmp%5#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "1109": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "tmp%6#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%6#0"
      ]
    },
    "1110": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "tmp%7#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%7#0"
      ]
    },
    "1113": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%7#0",
        "new_head#0"
      ]
    },
    "1115": {
      "op": "swap",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0",
        "tmp%7#0"
      ]
    },
    "1116": {
      "op": "concat",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "1117": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1119": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "1120": {
      "op": "+",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1121": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "1123": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "1126": {
      "block": "dynamic_array_concat_dynamic_element_after_for@8",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_items_count#0 (copy)"
      ]
    },
    "1128": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "1130": {
      "op": "+",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "1131": {
      "op": "itob",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%9#0"
      ]
    },
    "1132": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "1135": {
      "op": "frame_dig 1",
      "defined_out": [
        "new_head#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%10#0",
        "new_head#0"
      ]
    },
    "1137": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "1138": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1140": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "array_head_and_tail#0 (copy)",
        "tmp%0#0"
      ]
    },
    "1142": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "array_head_and_tail#0 (copy)",
        "tmp%0#0",
        "item_offset_adjustment#2"
      ]
    },
    "1144": {
      "op": "substring3",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%11#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "tmp%14#0"
      ]
    },
    "1145": {
      "op": "concat",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "1146": {
      "op": "frame_dig -1",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "1148": {
      "op": "len",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "1149": {
      "op": "frame_dig -1",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%17#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "1151": {
      "op": "frame_dig 2",
      "defined_out": [
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%17#0",
        "new_head_and_tail#0 (copy)",
        "item_offset_adjustment#0"
      ]
    },
    "1153": {
      "op": "uncover 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "new_head_and_tail#0 (copy)",
        "item_offset_adjustment#0",
        "tmp%17#0"
      ]
    },
    "1155": {
      "op": "substring3",
      "defined_out": [
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%18#0"
      ]
    },
    "1156": {
      "op": "concat",
      "defined_out": [
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%19#0"
      ]
    },
    "1157": {
      "op": "frame_bury 0"
    },
    "1159": {
      "retsub": true,
      "op": "retsub"
    },
    "1160": {
      "subroutine": "smart_contracts.asset_labeling.contract.b2str",
      "params": {
        "b#0": "bytes"
      },
      "block": "b2str",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1163": {
      "op": "frame_dig -1",
      "defined_out": [
        "b#0 (copy)"
      ],
      "stack_out": [
        "b#0 (copy)"
      ]
    },
    "1165": {
      "op": "len",
      "defined_out": [
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0"
      ]
    },
    "1166": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0"
      ],
      "stack_out": [
        "as_bytes%0#0"
      ]
    },
    "1167": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0"
      ],
      "stack_out": [
        "length_uint16%0#0"
      ]
    },
    "1170": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_uint16%0#0",
        "b#0 (copy)"
      ]
    },
    "1172": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1173": {
      "retsub": true,
      "op": "retsub"
    },
    "1174": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.update",
      "params": {},
      "block": "update",
      "stack_in": [],
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_only",
      "op": "callsub admin_only"
    },
    "1177": {
      "retsub": true,
      "op": "retsub"
    },
    "1178": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.delete",
      "params": {},
      "block": "delete",
      "stack_in": [],
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_only",
      "op": "callsub admin_only"
    },
    "1181": {
      "retsub": true,
      "op": "retsub"
    },
    "1182": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_only",
      "params": {},
      "block": "admin_only",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1184": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1185": {
      "op": "bytec 4 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "1187": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1188": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1189": {
      "op": "==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "1190": {
      "op": "bnz admin_only_after_if_else@3",
      "stack_out": []
    },
    "1193": {
      "op": "bytec 10 // \"ERR:UNAUTH\"",
      "defined_out": [
        "\"ERR:UNAUTH\""
      ],
      "stack_out": [
        "\"ERR:UNAUTH\""
      ]
    },
    "1195": {
      "op": "log",
      "stack_out": []
    },
    "1196": {
      "op": "err"
    },
    "1197": {
      "block": "admin_only_after_if_else@3",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "1198": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.change_admin",
      "params": {
        "new_admin#0": "bytes"
      },
      "block": "change_admin",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1201": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_only",
      "op": "callsub admin_only"
    },
    "1204": {
      "op": "bytec 4 // \"admin\"",
      "defined_out": [
        "\"admin\""
      ],
      "stack_out": [
        "\"admin\""
      ]
    },
    "1206": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"admin\"",
        "new_admin#0 (copy)"
      ],
      "stack_out": [
        "\"admin\"",
        "new_admin#0 (copy)"
      ]
    },
    "1208": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1209": {
      "retsub": true,
      "op": "retsub"
    },
    "1210": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.add_label",
      "params": {
        "id#0": "bytes",
        "name#0": "bytes"
      },
      "block": "add_label",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1213": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_only",
      "op": "callsub admin_only"
    },
    "1216": {
      "op": "frame_dig -2",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "1218": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1219": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1221": {
      "op": "bz add_label_after_if_else@3",
      "stack_out": []
    },
    "1224": {
      "op": "bytec 5 // \"ERR:EXISTS\"",
      "defined_out": [
        "\"ERR:EXISTS\""
      ],
      "stack_out": [
        "\"ERR:EXISTS\""
      ]
    },
    "1226": {
      "op": "log",
      "stack_out": []
    },
    "1227": {
      "op": "err"
    },
    "1228": {
      "block": "add_label_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "1230": {
      "op": "len",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1231": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "2"
      ]
    },
    "1232": {
      "op": "==",
      "defined_out": [
        "cond#1"
      ],
      "stack_out": [
        "cond#1"
      ]
    },
    "1233": {
      "op": "bnz add_label_after_if_else@7",
      "stack_out": []
    },
    "1236": {
      "op": "pushbytes \"ERR:LENGTH\"",
      "defined_out": [
        "\"ERR:LENGTH\""
      ],
      "stack_out": [
        "\"ERR:LENGTH\""
      ]
    },
    "1248": {
      "op": "log",
      "stack_out": []
    },
    "1249": {
      "op": "err"
    },
    "1250": {
      "block": "add_label_after_if_else@7",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "name#0 (copy)"
      ],
      "stack_out": [
        "name#0 (copy)"
      ]
    },
    "1252": {
      "op": "len",
      "defined_out": [
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0"
      ]
    },
    "1253": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0"
      ],
      "stack_out": [
        "as_bytes%0#0"
      ]
    },
    "1254": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0"
      ],
      "stack_out": [
        "length_uint16%0#0"
      ]
    },
    "1257": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_uint16%0#0",
        "name#0 (copy)"
      ]
    },
    "1259": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1260": {
      "op": "pushbytes 0x001200000000000000000000000000000000",
      "defined_out": [
        "0x001200000000000000000000000000000000",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x001200000000000000000000000000000000"
      ]
    },
    "1280": {
      "op": "swap",
      "stack_out": [
        "0x001200000000000000000000000000000000",
        "encoded_value%0#0"
      ]
    },
    "1281": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1282": {
      "op": "frame_dig -2",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "id#0 (copy)"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "id#0 (copy)"
      ]
    },
    "1284": {
      "op": "box_del",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "{box_del}"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "{box_del}"
      ]
    },
    "1285": {
      "op": "pop",
      "stack_out": [
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1286": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "id#0 (copy)"
      ]
    },
    "1288": {
      "op": "swap",
      "stack_out": [
        "id#0 (copy)",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1289": {
      "op": "box_put",
      "stack_out": []
    },
    "1290": {
      "retsub": true,
      "op": "retsub"
    },
    "1291": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_label",
      "params": {
        "id#0": "bytes"
      },
      "block": "remove_label",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1294": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_only",
      "op": "callsub admin_only"
    },
    "1297": {
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "1299": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "1300": {
      "op": "bury 1",
      "stack_out": [
        "cond#0"
      ]
    },
    "1302": {
      "op": "bnz remove_label_after_if_else@3",
      "stack_out": []
    },
    "1305": {
      "op": "bytec_2 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "\"ERR:NOEXIST\""
      ]
    },
    "1306": {
      "op": "log",
      "stack_out": []
    },
    "1307": {
      "op": "err"
    },
    "1308": {
      "block": "remove_label_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "1310": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1311": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1312": {
      "error": "Index access is out of bounds",
      "op": "extract 2 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "1315": {
      "op": "bytec 6 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "0x0000000000000000"
      ]
    },
    "1317": {
      "op": "b==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "1318": {
      "op": "bnz remove_label_after_if_else@7",
      "stack_out": []
    },
    "1321": {
      "op": "bytec 7 // \"ERR:NOEMPTY\"",
      "defined_out": [
        "\"ERR:NOEMPTY\""
      ],
      "stack_out": [
        "\"ERR:NOEMPTY\""
      ]
    },
    "1323": {
      "op": "log",
      "stack_out": []
    },
    "1324": {
      "op": "err"
    },
    "1325": {
      "block": "remove_label_after_if_else@7",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "1327": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1328": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1329": {
      "error": "Index access is out of bounds",
      "op": "extract 10 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%2#0"
      ]
    },
    "1332": {
      "op": "bytec 6 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%2#0",
        "0x0000000000000000"
      ]
    },
    "1334": {
      "op": "b==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "1335": {
      "op": "bnz remove_label_after_if_else@11",
      "stack_out": []
    },
    "1338": {
      "op": "bytec 7 // \"ERR:NOEMPTY\"",
      "defined_out": [
        "\"ERR:NOEMPTY\""
      ],
      "stack_out": [
        "\"ERR:NOEMPTY\""
      ]
    },
    "1340": {
      "op": "log",
      "stack_out": []
    },
    "1341": {
      "op": "err"
    },
    "1342": {
      "block": "remove_label_after_if_else@11",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "1344": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "1345": {
      "op": "pop",
      "stack_out": []
    },
    "1346": {
      "retsub": true,
      "op": "retsub"
    },
    "1347": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_label",
      "params": {
        "id#0": "bytes"
      },
      "block": "get_label",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1350": {
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "1352": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "1353": {
      "op": "bury 1",
      "stack_out": [
        "cond#0"
      ]
    },
    "1355": {
      "op": "bnz get_label_after_if_else@3",
      "stack_out": []
    },
    "1358": {
      "op": "bytec_2 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "\"ERR:NOEXIST\""
      ]
    },
    "1359": {
      "op": "log",
      "stack_out": []
    },
    "1360": {
      "op": "err"
    },
    "1361": {
      "block": "get_label_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "1363": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1364": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1365": {
      "retsub": true,
      "op": "retsub"
    },
    "1366": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.log_labels",
      "params": {
        "ids#0": "bytes"
      },
      "block": "log_labels",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1369": {
      "op": "frame_dig -1",
      "defined_out": [
        "ids#0 (copy)"
      ],
      "stack_out": [
        "ids#0 (copy)"
      ]
    },
    "1371": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "ids#0 (copy)"
      ],
      "stack_out": [
        "ids#0 (copy)",
        "0"
      ]
    },
    "1372": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0"
      ]
    },
    "1373": {
      "op": "intc_1 // 0",
      "defined_out": [
        "_idx#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0"
      ]
    },
    "1374": {
      "block": "log_labels_for_header@1",
      "stack_in": [
        "array_length%0#0",
        "_idx#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_idx#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0"
      ]
    },
    "1376": {
      "op": "frame_dig 0",
      "defined_out": [
        "_idx#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_length%0#0"
      ]
    },
    "1378": {
      "op": "<",
      "defined_out": [
        "_idx#0",
        "array_length%0#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "continue_looping%0#0"
      ]
    },
    "1379": {
      "op": "bz log_labels_after_for@4",
      "stack_out": [
        "array_length%0#0",
        "_idx#0"
      ]
    },
    "1382": {
      "op": "frame_dig -1",
      "defined_out": [
        "_idx#0",
        "array_length%0#0",
        "ids#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "ids#0 (copy)"
      ]
    },
    "1384": {
      "op": "extract 2 0",
      "defined_out": [
        "_idx#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1387": {
      "op": "frame_dig 1",
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "_idx#0"
      ]
    },
    "1389": {
      "op": "dup",
      "defined_out": [
        "_idx#0",
        "_idx#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "_idx#0 (copy)",
        "_idx#0 (copy)"
      ]
    },
    "1390": {
      "op": "cover 2",
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "_idx#0 (copy)"
      ]
    },
    "1392": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "_idx#0",
        "_idx#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "_idx#0 (copy)",
        "2"
      ]
    },
    "1393": {
      "op": "*",
      "defined_out": [
        "_idx#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "1394": {
      "op": "dig 1",
      "defined_out": [
        "_idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "item_offset_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1396": {
      "op": "swap",
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "1397": {
      "op": "extract_uint16",
      "defined_out": [
        "_idx#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1398": {
      "op": "dup2",
      "defined_out": [
        "_idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset%0#0 (copy)"
      ]
    },
    "1399": {
      "op": "extract_uint16",
      "defined_out": [
        "_idx#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0"
      ]
    },
    "1400": {
      "op": "intc_2 // 2",
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0",
        "2"
      ]
    },
    "1401": {
      "op": "+",
      "defined_out": [
        "_idx#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_head_tail_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_head_tail_length%0#0"
      ]
    },
    "1402": {
      "op": "extract3",
      "defined_out": [
        "_idx#0",
        "array_length%0#0",
        "label_id#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "label_id#0"
      ]
    },
    "1403": {
      "op": "extract 2 0",
      "defined_out": [
        "_idx#0",
        "array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "tmp%0#0"
      ]
    },
    "1406": {
      "op": "box_get",
      "defined_out": [
        "_idx#0",
        "array_length%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1407": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "maybe_value%0#0"
      ]
    },
    "1408": {
      "op": "log",
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0"
      ]
    },
    "1409": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "_idx#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "1"
      ]
    },
    "1410": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0"
      ]
    },
    "1411": {
      "op": "frame_bury 1",
      "defined_out": [
        "_idx#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0"
      ]
    },
    "1413": {
      "op": "b log_labels_for_header@1"
    },
    "1416": {
      "block": "log_labels_after_for@4",
      "stack_in": [
        "array_length%0#0",
        "_idx#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1417": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_or_operator_only",
      "params": {
        "label#0": "bytes"
      },
      "block": "admin_or_operator_only",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1420": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1422": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1423": {
      "op": "bytec 4 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "1425": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1426": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1427": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1428": {
      "op": "bz admin_or_operator_only_after_if_else@2",
      "stack_out": []
    },
    "1431": {
      "retsub": true,
      "op": "retsub"
    },
    "1432": {
      "block": "admin_or_operator_only_after_if_else@2",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "1434": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.operator_only",
      "op": "callsub operator_only",
      "stack_out": []
    },
    "1437": {
      "retsub": true,
      "op": "retsub"
    },
    "1438": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.operator_only",
      "params": {
        "label#0": "bytes"
      },
      "block": "operator_only",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1441": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1443": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "label#0 (copy)"
      ]
    },
    "1445": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_label_index",
      "op": "callsub get_operator_label_index",
      "defined_out": [
        "operator_index#0"
      ],
      "stack_out": [
        "operator_index#0"
      ]
    },
    "1448": {
      "op": "dup",
      "defined_out": [
        "operator_index#0"
      ],
      "stack_out": [
        "operator_index#0",
        "operator_index#0"
      ]
    },
    "1449": {
      "op": "intc 5 // 4294967296",
      "defined_out": [
        "4294967296",
        "operator_index#0"
      ],
      "stack_out": [
        "operator_index#0",
        "operator_index#0",
        "4294967296"
      ]
    },
    "1451": {
      "op": "!=",
      "defined_out": [
        "operator_index#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "operator_index#0",
        "tmp%1#0"
      ]
    },
    "1452": {
      "op": "bz operator_only_bool_false@3",
      "stack_out": [
        "operator_index#0"
      ]
    },
    "1455": {
      "op": "frame_dig 0",
      "stack_out": [
        "operator_index#0",
        "operator_index#0"
      ]
    },
    "1457": {
      "op": "intc 4 // 4294967295",
      "defined_out": [
        "4294967295",
        "operator_index#0"
      ],
      "stack_out": [
        "operator_index#0",
        "operator_index#0",
        "4294967295"
      ]
    },
    "1459": {
      "op": "!=",
      "defined_out": [
        "operator_index#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "operator_index#0",
        "tmp%2#0"
      ]
    },
    "1460": {
      "op": "bz operator_only_bool_false@3",
      "stack_out": [
        "operator_index#0"
      ]
    },
    "1463": {
      "op": "intc_0 // 1",
      "defined_out": [
        "cond#0",
        "operator_index#0"
      ],
      "stack_out": [
        "operator_index#0",
        "cond#0"
      ]
    },
    "1464": {
      "block": "operator_only_bool_merge@4",
      "stack_in": [
        "operator_index#0",
        "cond#0"
      ],
      "op": "bnz operator_only_after_if_else@7",
      "defined_out": [],
      "stack_out": [
        "operator_index#0"
      ]
    },
    "1467": {
      "op": "bytec 10 // \"ERR:UNAUTH\"",
      "defined_out": [
        "\"ERR:UNAUTH\""
      ],
      "stack_out": [
        "operator_index#0",
        "\"ERR:UNAUTH\""
      ]
    },
    "1469": {
      "op": "log",
      "stack_out": [
        "operator_index#0"
      ]
    },
    "1470": {
      "op": "err"
    },
    "1471": {
      "block": "operator_only_after_if_else@7",
      "stack_in": [
        "operator_index#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1472": {
      "block": "operator_only_bool_false@3",
      "stack_in": [
        "operator_index#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "operator_index#0",
        "cond#0"
      ]
    },
    "1473": {
      "op": "b operator_only_bool_merge@4"
    },
    "1476": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_label_index",
      "params": {
        "operator#0": "bytes",
        "label#0": "bytes"
      },
      "block": "get_operator_label_index",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1479": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1480": {
      "op": "bytec_3 // \"\"",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0"
      ]
    },
    "1481": {
      "op": "dup",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1482": {
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "operator#0 (copy)"
      ]
    },
    "1484": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1485": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%0#0"
      ]
    },
    "1487": {
      "op": "bnz get_operator_label_index_after_if_else@2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1490": {
      "op": "intc 5 // 4294967296",
      "defined_out": [
        "4294967296"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "4294967296"
      ]
    },
    "1492": {
      "op": "frame_bury 0"
    },
    "1494": {
      "retsub": true,
      "op": "retsub"
    },
    "1495": {
      "block": "get_operator_label_index_after_if_else@2",
      "stack_in": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "operator#0 (copy)"
      ]
    },
    "1497": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1498": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ]
    },
    "1499": {
      "op": "dup",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "1500": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ]
    },
    "1502": {
      "op": "frame_bury 0",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1504": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ]
    },
    "1505": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "1506": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_length%0#0"
      ]
    },
    "1507": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1509": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1510": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1512": {
      "block": "get_operator_label_index_for_header@3",
      "stack_in": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1514": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0",
        "array_length%0#0"
      ]
    },
    "1516": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "continue_looping%0#0"
      ]
    },
    "1517": {
      "op": "bz get_operator_label_index_after_for@8",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1520": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ]
    },
    "1522": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1525": {
      "op": "frame_dig 2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0"
      ]
    },
    "1527": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0",
        "2"
      ]
    },
    "1528": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "1529": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1531": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "1532": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1533": {
      "op": "dup2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset%0#0 (copy)"
      ]
    },
    "1534": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_length%0#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0"
      ]
    },
    "1535": {
      "op": "intc_2 // 2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0",
        "2"
      ]
    },
    "1536": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_head_tail_length%0#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_head_tail_length%0#0"
      ]
    },
    "1537": {
      "op": "extract3",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "stored_label#0"
      ]
    },
    "1538": {
      "op": "extract 2 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%2#0"
      ]
    },
    "1541": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label#0 (copy)",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%2#0",
        "label#0 (copy)"
      ]
    },
    "1543": {
      "op": "==",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%3#0"
      ]
    },
    "1544": {
      "op": "bz get_operator_label_index_after_if_else@6",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1547": {
      "op": "frame_dig 2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1549": {
      "op": "frame_bury 0"
    },
    "1551": {
      "retsub": true,
      "op": "retsub"
    },
    "1552": {
      "block": "get_operator_label_index_after_if_else@6",
      "stack_in": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1554": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0",
        "1"
      ]
    },
    "1555": {
      "op": "+",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1556": {
      "op": "frame_bury 2",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1558": {
      "op": "b get_operator_label_index_for_header@3"
    },
    "1561": {
      "block": "get_operator_label_index_after_for@8",
      "stack_in": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "intc 4 // 4294967295",
      "defined_out": [
        "4294967295"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "4294967295"
      ]
    },
    "1563": {
      "op": "frame_bury 0"
    },
    "1565": {
      "retsub": true,
      "op": "retsub"
    },
    "1566": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.add_operator_to_label",
      "params": {
        "operator#0": "bytes",
        "label#0": "bytes"
      },
      "block": "add_operator_to_label",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1569": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "1571": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_or_operator_only",
      "op": "callsub admin_or_operator_only",
      "stack_out": []
    },
    "1574": {
      "op": "frame_dig -1",
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "1576": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "1577": {
      "op": "bury 1",
      "stack_out": [
        "cond#0"
      ]
    },
    "1579": {
      "op": "bnz add_operator_to_label_after_if_else@10",
      "stack_out": []
    },
    "1582": {
      "op": "bytec_2 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "\"ERR:NOEXIST\""
      ]
    },
    "1583": {
      "op": "log",
      "stack_out": []
    },
    "1584": {
      "op": "err"
    },
    "1585": {
      "block": "add_operator_to_label_after_if_else@10",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "1587": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1588": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "1590": {
      "op": "bz add_operator_to_label_else_body@2",
      "stack_out": []
    },
    "1593": {
      "op": "frame_dig -2",
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "1595": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "operator#0 (copy)",
        "label#0 (copy)"
      ]
    },
    "1597": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_label_index",
      "op": "callsub get_operator_label_index",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1600": {
      "op": "intc 4 // 4294967295",
      "defined_out": [
        "4294967295",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "4294967295"
      ]
    },
    "1602": {
      "op": "==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "1603": {
      "op": "bnz add_operator_to_label_after_if_else@6",
      "stack_out": []
    },
    "1606": {
      "op": "bytec 5 // \"ERR:EXISTS\"",
      "defined_out": [
        "\"ERR:EXISTS\""
      ],
      "stack_out": [
        "\"ERR:EXISTS\""
      ]
    },
    "1608": {
      "op": "log",
      "stack_out": []
    },
    "1609": {
      "op": "err"
    },
    "1610": {
      "block": "add_operator_to_label_after_if_else@6",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "1612": {
      "op": "box_get",
      "defined_out": [
        "existing#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "existing#0",
        "maybe_exists%2#0"
      ]
    },
    "1613": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "existing#0"
      ]
    },
    "1614": {
      "op": "frame_dig -1",
      "defined_out": [
        "existing#0",
        "label#0 (copy)"
      ],
      "stack_out": [
        "existing#0",
        "label#0 (copy)"
      ]
    },
    "1616": {
      "op": "len",
      "defined_out": [
        "existing#0",
        "length%0#0"
      ],
      "stack_out": [
        "existing#0",
        "length%0#0"
      ]
    },
    "1617": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "existing#0"
      ],
      "stack_out": [
        "existing#0",
        "as_bytes%0#0"
      ]
    },
    "1618": {
      "op": "extract 6 2",
      "defined_out": [
        "existing#0",
        "length_uint16%0#0"
      ],
      "stack_out": [
        "existing#0",
        "length_uint16%0#0"
      ]
    },
    "1621": {
      "op": "frame_dig -1",
      "stack_out": [
        "existing#0",
        "length_uint16%0#0",
        "label#0 (copy)"
      ]
    },
    "1623": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "existing#0"
      ],
      "stack_out": [
        "existing#0",
        "encoded_value%0#0"
      ]
    },
    "1624": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "encoded_value%0#0",
        "existing#0"
      ],
      "stack_out": [
        "existing#0",
        "encoded_value%0#0",
        "1"
      ]
    },
    "1625": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "stack_out": [
        "existing#0"
      ]
    },
    "1628": {
      "op": "frame_dig -2",
      "stack_out": [
        "existing#0",
        "operator#0 (copy)"
      ]
    },
    "1630": {
      "op": "box_del",
      "defined_out": [
        "existing#0",
        "{box_del}"
      ],
      "stack_out": [
        "existing#0",
        "{box_del}"
      ]
    },
    "1631": {
      "op": "pop",
      "stack_out": [
        "existing#0"
      ]
    },
    "1632": {
      "op": "frame_dig -2",
      "stack_out": [
        "existing#0",
        "operator#0 (copy)"
      ]
    },
    "1634": {
      "op": "swap",
      "stack_out": [
        "operator#0 (copy)",
        "existing#0"
      ]
    },
    "1635": {
      "op": "box_put",
      "stack_out": []
    },
    "1636": {
      "block": "add_operator_to_label_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "1638": {
      "op": "box_get",
      "defined_out": [
        "label_descriptor#0",
        "maybe_exists%3#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_exists%3#0"
      ]
    },
    "1639": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "label_descriptor#0"
      ]
    },
    "1640": {
      "op": "dup",
      "defined_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ]
    },
    "1641": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)",
        "10"
      ]
    },
    "1643": {
      "op": "extract_uint64",
      "defined_out": [
        "label_descriptor#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "tmp%9#0"
      ]
    },
    "1644": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "label_descriptor#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "tmp%9#0",
        "1"
      ]
    },
    "1645": {
      "op": "+",
      "defined_out": [
        "label_descriptor#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "to_encode%0#0"
      ]
    },
    "1646": {
      "op": "itob",
      "defined_out": [
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ]
    },
    "1647": {
      "op": "replace2 10",
      "stack_out": [
        "label_descriptor#0"
      ]
    },
    "1649": {
      "op": "frame_dig -1",
      "stack_out": [
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "1651": {
      "op": "box_del",
      "defined_out": [
        "label_descriptor#0",
        "{box_del}"
      ],
      "stack_out": [
        "label_descriptor#0",
        "{box_del}"
      ]
    },
    "1652": {
      "op": "pop",
      "stack_out": [
        "label_descriptor#0"
      ]
    },
    "1653": {
      "op": "frame_dig -1",
      "stack_out": [
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "1655": {
      "op": "swap",
      "stack_out": [
        "label#0 (copy)",
        "label_descriptor#0"
      ]
    },
    "1656": {
      "op": "box_put",
      "stack_out": []
    },
    "1657": {
      "retsub": true,
      "op": "retsub"
    },
    "1658": {
      "block": "add_operator_to_label_else_body@2",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "1660": {
      "op": "len",
      "defined_out": [
        "length%1#0"
      ],
      "stack_out": [
        "length%1#0"
      ]
    },
    "1661": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0"
      ],
      "stack_out": [
        "as_bytes%1#0"
      ]
    },
    "1662": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%1#0"
      ],
      "stack_out": [
        "length_uint16%1#0"
      ]
    },
    "1665": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_uint16%1#0",
        "label#0 (copy)"
      ]
    },
    "1667": {
      "op": "concat",
      "defined_out": [
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0"
      ]
    },
    "1668": {
      "op": "bytec 8 // 0x0002",
      "defined_out": [
        "0x0002",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "0x0002"
      ]
    },
    "1670": {
      "op": "swap",
      "stack_out": [
        "0x0002",
        "encoded_value%1#0"
      ]
    },
    "1671": {
      "op": "concat",
      "defined_out": [
        "result%1#0"
      ],
      "stack_out": [
        "result%1#0"
      ]
    },
    "1672": {
      "op": "bytec 11 // 0x0001",
      "defined_out": [
        "0x0001",
        "result%1#0"
      ],
      "stack_out": [
        "result%1#0",
        "0x0001"
      ]
    },
    "1674": {
      "op": "swap",
      "stack_out": [
        "0x0001",
        "result%1#0"
      ]
    },
    "1675": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0"
      ]
    },
    "1676": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_data%0#0",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "array_data%0#0",
        "operator#0 (copy)"
      ]
    },
    "1678": {
      "op": "box_del",
      "defined_out": [
        "array_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "array_data%0#0",
        "{box_del}"
      ]
    },
    "1679": {
      "op": "pop",
      "stack_out": [
        "array_data%0#0"
      ]
    },
    "1680": {
      "op": "frame_dig -2",
      "stack_out": [
        "array_data%0#0",
        "operator#0 (copy)"
      ]
    },
    "1682": {
      "op": "swap",
      "stack_out": [
        "operator#0 (copy)",
        "array_data%0#0"
      ]
    },
    "1683": {
      "op": "box_put",
      "stack_out": []
    },
    "1684": {
      "op": "b add_operator_to_label_after_if_else@3"
    },
    "1687": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_operator_from_label",
      "params": {
        "operator#0": "bytes",
        "label#0": "bytes"
      },
      "block": "remove_operator_from_label",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1690": {
      "op": "intc_1 // 0",
      "stack_out": [
        "label_descriptor#0"
      ]
    },
    "1691": {
      "op": "dupn 4",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0"
      ]
    },
    "1693": {
      "op": "bytec_3 // \"\"",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0"
      ]
    },
    "1694": {
      "op": "dupn 2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1696": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label#0 (copy)"
      ]
    },
    "1698": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_or_operator_only",
      "op": "callsub admin_or_operator_only",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1701": {
      "op": "frame_dig -1",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label#0 (copy)"
      ]
    },
    "1703": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "1704": {
      "op": "bury 1",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "1706": {
      "op": "bnz remove_operator_from_label_after_if_else@28",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1709": {
      "op": "bytec_2 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "1710": {
      "op": "log",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1711": {
      "op": "err"
    },
    "1712": {
      "block": "remove_operator_from_label_after_if_else@28",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1714": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%1#0",
        "cond#0"
      ]
    },
    "1715": {
      "op": "bury 1",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "1717": {
      "op": "bnz remove_operator_from_label_after_if_else@32",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1720": {
      "op": "bytec_2 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "1721": {
      "op": "log",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1722": {
      "op": "err"
    },
    "1723": {
      "block": "remove_operator_from_label_after_if_else@32",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1725": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)",
        "label#0 (copy)"
      ]
    },
    "1727": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_label_index",
      "op": "callsub get_operator_label_index",
      "defined_out": [
        "label_idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0"
      ]
    },
    "1730": {
      "op": "dup",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0",
        "label_idx#0"
      ]
    },
    "1731": {
      "op": "frame_bury 7",
      "defined_out": [
        "label_idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0"
      ]
    },
    "1733": {
      "op": "intc 4 // 4294967295",
      "defined_out": [
        "4294967295",
        "label_idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0",
        "4294967295"
      ]
    },
    "1735": {
      "op": "!=",
      "defined_out": [
        "label_idx#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%2#0"
      ]
    },
    "1736": {
      "op": "bz remove_operator_from_label_bool_false@3",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1739": {
      "op": "frame_dig 7",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0"
      ]
    },
    "1741": {
      "op": "intc 5 // 4294967296",
      "defined_out": [
        "4294967296",
        "label_idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0",
        "4294967296"
      ]
    },
    "1743": {
      "op": "!=",
      "defined_out": [
        "label_idx#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%3#0"
      ]
    },
    "1744": {
      "op": "bz remove_operator_from_label_bool_false@3",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1747": {
      "op": "intc_0 // 1",
      "defined_out": [
        "cond#0",
        "label_idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "1748": {
      "block": "remove_operator_from_label_bool_merge@4",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ],
      "op": "bnz remove_operator_from_label_after_if_else@24",
      "defined_out": [],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1751": {
      "op": "bytec_2 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "1752": {
      "op": "log",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1753": {
      "op": "err"
    },
    "1754": {
      "block": "remove_operator_from_label_after_if_else@24",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label#0 (copy)"
      ]
    },
    "1756": {
      "op": "box_get",
      "defined_out": [
        "label_descriptor#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "maybe_exists%2#0"
      ]
    },
    "1757": {
      "op": "swap",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_exists%2#0",
        "label_descriptor#0"
      ]
    },
    "1758": {
      "op": "dup",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_exists%2#0",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ]
    },
    "1759": {
      "op": "cover 2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "maybe_exists%2#0",
        "label_descriptor#0"
      ]
    },
    "1761": {
      "op": "frame_bury 0",
      "defined_out": [
        "label_descriptor#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "maybe_exists%2#0"
      ]
    },
    "1763": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0"
      ]
    },
    "1764": {
      "error": "Index access is out of bounds",
      "op": "extract 10 8 // on error: Index access is out of bounds",
      "defined_out": [
        "label_descriptor#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1767": {
      "op": "pushbytes 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "label_descriptor#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "reinterpret_biguint%0#0",
        "0x0000000000000001"
      ]
    },
    "1777": {
      "op": "b>",
      "defined_out": [
        "label_descriptor#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%5#0"
      ]
    },
    "1778": {
      "op": "bnz remove_operator_from_label_bool_true@6",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1781": {
      "op": "frame_dig 0",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0"
      ]
    },
    "1783": {
      "error": "Index access is out of bounds",
      "op": "extract 2 8 // on error: Index access is out of bounds",
      "defined_out": [
        "label_descriptor#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "1786": {
      "op": "bytec 6 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "label_descriptor#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "reinterpret_biguint%2#0",
        "0x0000000000000000"
      ]
    },
    "1788": {
      "op": "b==",
      "defined_out": [
        "label_descriptor#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%6#0"
      ]
    },
    "1789": {
      "op": "bz remove_operator_from_label_bool_false@7",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1792": {
      "block": "remove_operator_from_label_bool_true@6",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "1793": {
      "block": "remove_operator_from_label_bool_merge@8",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ],
      "op": "bnz remove_operator_from_label_after_if_else@20",
      "defined_out": [],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1796": {
      "op": "bytec 7 // \"ERR:NOEMPTY\"",
      "defined_out": [
        "\"ERR:NOEMPTY\""
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "\"ERR:NOEMPTY\""
      ]
    },
    "1798": {
      "op": "log",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1799": {
      "op": "err"
    },
    "1800": {
      "block": "remove_operator_from_label_after_if_else@20",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "label_descriptor#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0"
      ]
    },
    "1802": {
      "op": "dup",
      "defined_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ]
    },
    "1803": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "label_descriptor#0 (copy)",
        "10"
      ]
    },
    "1805": {
      "op": "extract_uint64",
      "defined_out": [
        "label_descriptor#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "tmp%8#0"
      ]
    },
    "1806": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "label_descriptor#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "tmp%8#0",
        "1"
      ]
    },
    "1807": {
      "op": "-",
      "defined_out": [
        "label_descriptor#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "to_encode%0#0"
      ]
    },
    "1808": {
      "op": "itob",
      "defined_out": [
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ]
    },
    "1809": {
      "op": "replace2 10",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0"
      ]
    },
    "1811": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)",
        "label_descriptor#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "1813": {
      "op": "box_del",
      "defined_out": [
        "label_descriptor#0",
        "{box_del}"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "{box_del}"
      ]
    },
    "1814": {
      "op": "pop",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0"
      ]
    },
    "1815": {
      "op": "frame_dig -1",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "1817": {
      "op": "swap",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label#0 (copy)",
        "label_descriptor#0"
      ]
    },
    "1818": {
      "op": "box_put",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1819": {
      "op": "frame_dig -2",
      "defined_out": [
        "label_descriptor#0",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1821": {
      "op": "box_get",
      "defined_out": [
        "label_descriptor#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1822": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0"
      ]
    },
    "1823": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "label_descriptor#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "1824": {
      "op": "extract_uint16",
      "defined_out": [
        "label_descriptor#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%11#0"
      ]
    },
    "1825": {
      "op": "intc_0 // 1",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%11#0",
        "1"
      ]
    },
    "1826": {
      "op": "==",
      "defined_out": [
        "label_descriptor#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%12#0"
      ]
    },
    "1827": {
      "op": "bz remove_operator_from_label_else_body@10",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1830": {
      "op": "frame_dig -2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1832": {
      "op": "box_del",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "{box_del}"
      ]
    },
    "1833": {
      "op": "pop",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1834": {
      "retsub": true,
      "op": "retsub"
    },
    "1835": {
      "block": "remove_operator_from_label_else_body@10",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0"
      ]
    },
    "1836": {
      "op": "frame_bury 2",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1838": {
      "op": "frame_dig -2",
      "defined_out": [
        "next_list#0",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1840": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1841": {
      "op": "swap",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ]
    },
    "1842": {
      "op": "dup",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "maybe_value%4#0 (copy)"
      ]
    },
    "1843": {
      "op": "cover 2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ]
    },
    "1845": {
      "op": "frame_bury 1",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1847": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0"
      ]
    },
    "1848": {
      "op": "intc_1 // 0",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "0"
      ]
    },
    "1849": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%4#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "array_length%0#0"
      ]
    },
    "1850": {
      "op": "frame_bury 5",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%4#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1852": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%4#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "1853": {
      "op": "frame_bury 6",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%4#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1855": {
      "block": "remove_operator_from_label_for_header@11",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "1857": {
      "op": "frame_dig 5",
      "defined_out": [
        "array_length%0#0",
        "idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_length%0#0"
      ]
    },
    "1859": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "continue_looping%0#0"
      ]
    },
    "1860": {
      "op": "bz remove_operator_from_label_after_for@16",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1863": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0"
      ]
    },
    "1865": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1868": {
      "op": "frame_dig 6",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "array_head_and_tail%0#0",
        "idx#0"
      ]
    },
    "1870": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "idx#0 (copy)",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "array_head_and_tail%0#0",
        "idx#0 (copy)",
        "idx#0 (copy)"
      ]
    },
    "1871": {
      "op": "cover 2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0 (copy)"
      ]
    },
    "1873": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "idx#0 (copy)",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0 (copy)",
        "2"
      ]
    },
    "1874": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "1875": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1877": {
      "op": "swap",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "1878": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1879": {
      "op": "dup2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset%0#0 (copy)"
      ]
    },
    "1880": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_length%0#0",
        "item_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0"
      ]
    },
    "1881": {
      "op": "intc_2 // 2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0",
        "2"
      ]
    },
    "1882": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_head_tail_length%0#0",
        "item_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_head_tail_length%0#0"
      ]
    },
    "1883": {
      "op": "extract3",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%4#0",
        "stored_label#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "stored_label#0"
      ]
    },
    "1884": {
      "op": "frame_bury 4",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%4#0",
        "stored_label#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "1886": {
      "op": "frame_dig 7",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "stored_label#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1888": {
      "op": "!=",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "stored_label#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%15#0"
      ]
    },
    "1889": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "next_list#9",
        "stored_label#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%15#0",
        "next_list#9"
      ]
    },
    "1891": {
      "op": "frame_bury 3",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "next_list#9",
        "stored_label#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%15#0"
      ]
    },
    "1893": {
      "op": "bz remove_operator_from_label_after_if_else@14",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1896": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0"
      ]
    },
    "1898": {
      "op": "frame_dig 4",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0",
        "stored_label#0"
      ]
    },
    "1900": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0",
        "stored_label#0",
        "1"
      ]
    },
    "1901": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#9"
      ]
    },
    "1904": {
      "op": "frame_bury 3",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1906": {
      "block": "remove_operator_from_label_after_if_else@14",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0"
      ]
    },
    "1908": {
      "op": "frame_bury 2",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1910": {
      "op": "frame_dig 6",
      "defined_out": [
        "idx#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "1912": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "idx#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "1"
      ]
    },
    "1913": {
      "op": "+",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "1914": {
      "op": "frame_bury 6",
      "defined_out": [
        "idx#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1916": {
      "op": "b remove_operator_from_label_for_header@11"
    },
    "1919": {
      "block": "remove_operator_from_label_after_for@16",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1921": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "{box_del}"
      ]
    },
    "1922": {
      "op": "pop",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1923": {
      "op": "frame_dig -2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1925": {
      "op": "frame_dig 2",
      "defined_out": [
        "next_list#0",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)",
        "next_list#0"
      ]
    },
    "1927": {
      "op": "box_put",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1928": {
      "retsub": true,
      "op": "retsub"
    },
    "1929": {
      "block": "remove_operator_from_label_bool_false@7",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "1930": {
      "op": "b remove_operator_from_label_bool_merge@8"
    },
    "1933": {
      "block": "remove_operator_from_label_bool_false@3",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "1934": {
      "op": "b remove_operator_from_label_bool_merge@4"
    },
    "1937": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_labels",
      "params": {
        "operator#0": "bytes"
      },
      "block": "get_operator_labels",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1940": {
      "op": "frame_dig -1",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "1942": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1943": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1945": {
      "op": "bz get_operator_labels_after_if_else@2",
      "stack_out": []
    },
    "1948": {
      "op": "frame_dig -1",
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "1950": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1951": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1952": {
      "retsub": true,
      "op": "retsub"
    },
    "1953": {
      "block": "get_operator_labels_after_if_else@2",
      "stack_in": [],
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "1954": {
      "retsub": true,
      "op": "retsub"
    },
    "1955": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling._add_label_to_asset",
      "params": {
        "label#0": "bytes",
        "asset#0": "uint64"
      },
      "block": "_add_label_to_asset",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1958": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%1#1"
      ]
    },
    "1959": {
      "op": "dup",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0"
      ]
    },
    "1960": {
      "op": "bytec_3 // \"\"",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0"
      ]
    },
    "1961": {
      "op": "dup",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1962": {
      "op": "frame_dig -2",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label#0 (copy)"
      ]
    },
    "1964": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "1965": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "cond#0"
      ]
    },
    "1967": {
      "op": "bnz _add_label_to_asset_after_if_else@19",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1970": {
      "op": "bytec_2 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "1971": {
      "op": "log",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1972": {
      "op": "err"
    },
    "1973": {
      "block": "_add_label_to_asset_after_if_else@19",
      "stack_in": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "asset#0 (copy)"
      ]
    },
    "1975": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "1976": {
      "op": "dup",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "1977": {
      "op": "frame_bury 1",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "1979": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1980": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%1#0"
      ]
    },
    "1982": {
      "op": "bz _add_label_to_asset_else_body@2",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1985": {
      "op": "frame_dig 1",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "1987": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#1",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%0#0",
        "maybe_exists%0#1"
      ]
    },
    "1988": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%0#1"
      ]
    },
    "1990": {
      "op": "bnz _add_label_to_asset_after_if_else@6",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1993": {
      "op": "intc 5 // 4294967296",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%3#0"
      ]
    },
    "1995": {
      "block": "_add_label_to_asset_after_inlined_smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_label_index@12",
      "stack_in": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%3#0"
      ],
      "op": "intc 4 // 4294967295",
      "defined_out": [
        "4294967295",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%3#0",
        "4294967295"
      ]
    },
    "1997": {
      "op": "==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "cond#0"
      ]
    },
    "1998": {
      "op": "bnz _add_label_to_asset_after_if_else@15",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "2001": {
      "op": "bytec 5 // \"ERR:EXISTS\"",
      "defined_out": [
        "\"ERR:EXISTS\""
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "\"ERR:EXISTS\""
      ]
    },
    "2003": {
      "op": "log",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "2004": {
      "op": "err"
    },
    "2005": {
      "block": "_add_label_to_asset_after_if_else@15",
      "stack_in": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "2007": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "2008": {
      "op": "box_get",
      "defined_out": [
        "existing#0",
        "maybe_exists%2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "maybe_exists%2#0"
      ]
    },
    "2009": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0"
      ]
    },
    "2010": {
      "op": "frame_dig -2",
      "defined_out": [
        "existing#0",
        "label#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "label#0 (copy)"
      ]
    },
    "2012": {
      "op": "len",
      "defined_out": [
        "existing#0",
        "length%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "length%0#0"
      ]
    },
    "2013": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "existing#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "as_bytes%0#0"
      ]
    },
    "2014": {
      "op": "extract 6 2",
      "defined_out": [
        "existing#0",
        "length_uint16%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "length_uint16%0#0"
      ]
    },
    "2017": {
      "op": "frame_dig -2",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "length_uint16%0#0",
        "label#0 (copy)"
      ]
    },
    "2019": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "existing#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "encoded_value%0#0"
      ]
    },
    "2020": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "encoded_value%0#0",
        "existing#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "encoded_value%0#0",
        "1"
      ]
    },
    "2021": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0"
      ]
    },
    "2024": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "tmp%1#0 (copy)"
      ]
    },
    "2026": {
      "op": "box_del",
      "defined_out": [
        "existing#0",
        "tmp%1#0",
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "{box_del}"
      ]
    },
    "2027": {
      "op": "pop",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0"
      ]
    },
    "2028": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "2029": {
      "block": "_add_label_to_asset_after_if_else@3",
      "stack_in": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label#0 (copy)"
      ]
    },
    "2031": {
      "op": "box_get",
      "defined_out": [
        "label_descriptor#0",
        "maybe_exists%3#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "maybe_exists%3#0"
      ]
    },
    "2032": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0"
      ]
    },
    "2033": {
      "op": "dup",
      "defined_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ]
    },
    "2034": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "label_descriptor#0 (copy)",
        "2"
      ]
    },
    "2035": {
      "op": "extract_uint64",
      "defined_out": [
        "label_descriptor#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "tmp%13#0"
      ]
    },
    "2036": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "label_descriptor#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "tmp%13#0",
        "1"
      ]
    },
    "2037": {
      "op": "+",
      "defined_out": [
        "label_descriptor#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "to_encode%0#0"
      ]
    },
    "2038": {
      "op": "itob",
      "defined_out": [
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ]
    },
    "2039": {
      "op": "replace2 2",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0"
      ]
    },
    "2041": {
      "op": "frame_dig -2",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "2043": {
      "op": "box_del",
      "defined_out": [
        "label_descriptor#0",
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "{box_del}"
      ]
    },
    "2044": {
      "op": "pop",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0"
      ]
    },
    "2045": {
      "op": "frame_dig -2",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "2047": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label#0 (copy)",
        "label_descriptor#0"
      ]
    },
    "2048": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "2049": {
      "retsub": true,
      "op": "retsub"
    },
    "2050": {
      "block": "_add_label_to_asset_after_if_else@6",
      "stack_in": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "2052": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "maybe_exists%1#0"
      ]
    },
    "2053": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%1#0",
        "maybe_value%1#1"
      ]
    },
    "2054": {
      "op": "dup",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%1#0",
        "maybe_value%1#1",
        "maybe_value%1#1 (copy)"
      ]
    },
    "2055": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "maybe_exists%1#0",
        "maybe_value%1#1"
      ]
    },
    "2057": {
      "op": "frame_bury 0",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "maybe_exists%1#0"
      ]
    },
    "2059": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1"
      ]
    },
    "2060": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "maybe_value%1#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "0"
      ]
    },
    "2061": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%1#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_length%0#0"
      ]
    },
    "2062": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%1#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "2064": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "2065": {
      "op": "frame_bury 3",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "2067": {
      "block": "_add_label_to_asset_for_header@7",
      "stack_in": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "2069": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%0#0",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0",
        "array_length%0#0"
      ]
    },
    "2071": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "continue_looping%0#0"
      ]
    },
    "2072": {
      "op": "bz _add_label_to_asset_after_for@11",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "2075": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1"
      ]
    },
    "2077": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2080": {
      "op": "frame_dig 3",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0"
      ]
    },
    "2082": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0",
        "2"
      ]
    },
    "2083": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "2084": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "2086": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "2087": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "2088": {
      "op": "dup2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset%0#0 (copy)"
      ]
    },
    "2089": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_length%0#0",
        "item_offset%0#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0"
      ]
    },
    "2090": {
      "op": "intc_2 // 2",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0",
        "2"
      ]
    },
    "2091": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_head_tail_length%0#0",
        "item_offset%0#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_head_tail_length%0#0"
      ]
    },
    "2092": {
      "op": "extract3",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "stored_label#0"
      ]
    },
    "2093": {
      "op": "extract 2 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "tmp%4#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%4#1"
      ]
    },
    "2096": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label#0 (copy)",
        "maybe_value%1#1",
        "tmp%4#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%4#1",
        "label#0 (copy)"
      ]
    },
    "2098": {
      "op": "==",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "tmp%5#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%5#1"
      ]
    },
    "2099": {
      "op": "bz _add_label_to_asset_after_if_else@10",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "2102": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%3#0"
      ]
    },
    "2104": {
      "op": "b _add_label_to_asset_after_inlined_smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_label_index@12"
    },
    "2107": {
      "block": "_add_label_to_asset_after_if_else@10",
      "stack_in": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "2109": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0",
        "1"
      ]
    },
    "2110": {
      "op": "+",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "2111": {
      "op": "frame_bury 3",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "2113": {
      "op": "b _add_label_to_asset_for_header@7"
    },
    "2116": {
      "block": "_add_label_to_asset_after_for@11",
      "stack_in": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "intc 4 // 4294967295",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%3#0"
      ]
    },
    "2118": {
      "op": "b _add_label_to_asset_after_inlined_smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_label_index@12"
    },
    "2121": {
      "block": "_add_label_to_asset_else_body@2",
      "stack_in": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label#0 (copy)"
      ]
    },
    "2123": {
      "op": "len",
      "defined_out": [
        "length%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "length%1#0"
      ]
    },
    "2124": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "as_bytes%1#0"
      ]
    },
    "2125": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "length_uint16%1#0"
      ]
    },
    "2128": {
      "op": "frame_dig -2",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "length_uint16%1#0",
        "label#0 (copy)"
      ]
    },
    "2130": {
      "op": "concat",
      "defined_out": [
        "encoded_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "encoded_value%1#0"
      ]
    },
    "2131": {
      "op": "bytec 8 // 0x0002",
      "defined_out": [
        "0x0002",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "encoded_value%1#0",
        "0x0002"
      ]
    },
    "2133": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "0x0002",
        "encoded_value%1#0"
      ]
    },
    "2134": {
      "op": "concat",
      "defined_out": [
        "result%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "result%1#0"
      ]
    },
    "2135": {
      "op": "bytec 11 // 0x0001",
      "defined_out": [
        "0x0001",
        "result%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "result%1#0",
        "0x0001"
      ]
    },
    "2137": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "0x0001",
        "result%1#0"
      ]
    },
    "2138": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_data%0#0"
      ]
    },
    "2139": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_data%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_data%0#0",
        "tmp%1#0"
      ]
    },
    "2141": {
      "op": "dup",
      "defined_out": [
        "array_data%0#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_data%0#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "2142": {
      "op": "box_del",
      "defined_out": [
        "array_data%0#0",
        "tmp%1#0",
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_data%0#0",
        "tmp%1#0",
        "{box_del}"
      ]
    },
    "2143": {
      "op": "pop",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_data%0#0",
        "tmp%1#0"
      ]
    },
    "2144": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "array_data%0#0"
      ]
    },
    "2145": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "2146": {
      "op": "b _add_label_to_asset_after_if_else@3"
    },
    "2149": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.add_label_to_asset",
      "params": {
        "label#0": "bytes",
        "asset#0": "uint64"
      },
      "block": "add_label_to_asset",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2152": {
      "op": "frame_dig -2",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "2154": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.operator_only",
      "op": "callsub operator_only",
      "stack_out": []
    },
    "2157": {
      "op": "frame_dig -2",
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "2159": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "label#0 (copy)"
      ],
      "stack_out": [
        "label#0 (copy)",
        "asset#0 (copy)"
      ]
    },
    "2161": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling._add_label_to_asset",
      "op": "callsub _add_label_to_asset",
      "stack_out": []
    },
    "2164": {
      "retsub": true,
      "op": "retsub"
    },
    "2165": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.add_label_to_assets",
      "params": {
        "label#0": "bytes",
        "assets#0": "bytes"
      },
      "block": "add_label_to_assets",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2168": {
      "op": "frame_dig -2",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "2170": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.operator_only",
      "op": "callsub operator_only",
      "stack_out": []
    },
    "2173": {
      "op": "frame_dig -1",
      "defined_out": [
        "assets#0 (copy)"
      ],
      "stack_out": [
        "assets#0 (copy)"
      ]
    },
    "2175": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "assets#0 (copy)",
        "0"
      ]
    },
    "2176": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0"
      ]
    },
    "2177": {
      "op": "intc_1 // 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2178": {
      "block": "add_label_to_assets_for_header@1",
      "stack_in": [
        "array_length%0#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "2180": {
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_length%0#0"
      ]
    },
    "2182": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "2183": {
      "op": "bz add_label_to_assets_after_for@4",
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2186": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "assets#0 (copy)"
      ]
    },
    "2188": {
      "op": "extract 2 0",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2191": {
      "op": "frame_dig 1",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0"
      ]
    },
    "2193": {
      "op": "dup",
      "defined_out": [
        "_i#0",
        "_i#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)",
        "_i#0 (copy)"
      ]
    },
    "2194": {
      "op": "cover 2",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)"
      ]
    },
    "2196": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "_i#0",
        "_i#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)",
        "8"
      ]
    },
    "2197": {
      "op": "*",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "2198": {
      "op": "extract_uint64",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "tmp%0#0"
      ]
    },
    "2199": {
      "op": "frame_dig -2",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "label#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "tmp%0#0",
        "label#0 (copy)"
      ]
    },
    "2201": {
      "op": "swap",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "label#0 (copy)",
        "tmp%0#0"
      ]
    },
    "2202": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling._add_label_to_asset",
      "op": "callsub _add_label_to_asset",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "2205": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "2206": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "2207": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2209": {
      "op": "b add_label_to_assets_for_header@1"
    },
    "2212": {
      "block": "add_label_to_assets_after_for@4",
      "stack_in": [
        "array_length%0#0",
        "_i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "2213": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_label_from_asset",
      "params": {
        "label#0": "bytes",
        "asset#0": "uint64"
      },
      "block": "remove_label_from_asset",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2216": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "2217": {
      "op": "dupn 3",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0"
      ]
    },
    "2219": {
      "op": "bytec_3 // \"\"",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0"
      ]
    },
    "2220": {
      "op": "dupn 2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2222": {
      "op": "frame_dig -2",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label#0 (copy)"
      ]
    },
    "2224": {
      "op": "box_len",
      "defined_out": [
        "cond#1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%0#0",
        "cond#1"
      ]
    },
    "2225": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "cond#1"
      ]
    },
    "2227": {
      "op": "bnz remove_label_from_asset_after_if_else@20",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2230": {
      "op": "bytec_2 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "2231": {
      "op": "log",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2232": {
      "op": "err"
    },
    "2233": {
      "block": "remove_label_from_asset_after_if_else@20",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label#0 (copy)"
      ]
    },
    "2235": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.operator_only",
      "op": "callsub operator_only",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2238": {
      "op": "intc_1 // 0",
      "defined_out": [
        "found#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "found#0"
      ]
    },
    "2239": {
      "op": "frame_bury 5",
      "defined_out": [
        "found#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2241": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "found#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "asset#0 (copy)"
      ]
    },
    "2243": {
      "op": "itob",
      "defined_out": [
        "found#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "2244": {
      "op": "dup",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "2245": {
      "op": "frame_bury 3",
      "defined_out": [
        "found#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "2247": {
      "op": "box_get",
      "defined_out": [
        "found#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2248": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%1#0"
      ]
    },
    "2249": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "2250": {
      "op": "extract_uint16",
      "defined_out": [
        "found#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%3#0"
      ]
    },
    "2251": {
      "op": "intc_0 // 1",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%3#0",
        "1"
      ]
    },
    "2252": {
      "op": "==",
      "defined_out": [
        "found#0",
        "tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%4#0"
      ]
    },
    "2253": {
      "op": "bz remove_label_from_asset_else_body@5",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2256": {
      "op": "frame_dig 3",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "2258": {
      "op": "box_get",
      "defined_out": [
        "found#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2259": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%2#0"
      ]
    },
    "2260": {
      "op": "dup",
      "defined_out": [
        "found#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)"
      ]
    },
    "2261": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "found#0",
        "maybe_value%2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%2#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2264": {
      "op": "swap",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "maybe_value%2#0"
      ]
    },
    "2265": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "2266": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "found#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ]
    },
    "2267": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2268": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "found#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "2269": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "0"
      ]
    },
    "2270": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "found#0",
        "item_offset%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "2271": {
      "op": "dup2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "found#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset%0#0 (copy)"
      ]
    },
    "2272": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "found#0",
        "item_length%0#0",
        "item_offset%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0"
      ]
    },
    "2273": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "found#0",
        "item_length%0#0",
        "item_offset%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0",
        "2"
      ]
    },
    "2274": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%0#0",
        "found#0",
        "item_head_tail_length%0#0",
        "item_offset%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_head_tail_length%0#0"
      ]
    },
    "2275": {
      "op": "extract3",
      "defined_out": [
        "found#0",
        "tmp%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%7#0"
      ]
    },
    "2276": {
      "op": "extract 2 0",
      "defined_out": [
        "found#0",
        "tmp%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%8#0"
      ]
    },
    "2279": {
      "op": "frame_dig -2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%8#0",
        "label#0 (copy)"
      ]
    },
    "2281": {
      "op": "==",
      "defined_out": [
        "found#0",
        "tmp%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%9#0"
      ]
    },
    "2282": {
      "op": "bz remove_label_from_asset_else_body@3",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2285": {
      "op": "frame_dig 3",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "2287": {
      "op": "box_del",
      "defined_out": [
        "found#0",
        "tmp%1#0",
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "{box_del}"
      ]
    },
    "2288": {
      "op": "pop",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2289": {
      "op": "intc_0 // 1",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "found#0"
      ]
    },
    "2290": {
      "op": "frame_bury 5",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2292": {
      "block": "remove_label_from_asset_after_if_else@13",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "found#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "found#0"
      ]
    },
    "2294": {
      "op": "bnz remove_label_from_asset_after_if_else@16",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2297": {
      "op": "bytec_2 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\"",
        "found#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "2298": {
      "op": "log",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2299": {
      "op": "err"
    },
    "2300": {
      "block": "remove_label_from_asset_after_if_else@16",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label#0 (copy)"
      ]
    },
    "2302": {
      "op": "box_get",
      "defined_out": [
        "label_descriptor#0",
        "maybe_exists%4#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "maybe_exists%4#0"
      ]
    },
    "2303": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0"
      ]
    },
    "2304": {
      "op": "dup",
      "defined_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ]
    },
    "2305": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "label_descriptor#0 (copy)",
        "2"
      ]
    },
    "2306": {
      "op": "extract_uint64",
      "defined_out": [
        "label_descriptor#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "tmp%20#0"
      ]
    },
    "2307": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "label_descriptor#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "tmp%20#0",
        "1"
      ]
    },
    "2308": {
      "op": "-",
      "defined_out": [
        "label_descriptor#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "to_encode%0#0"
      ]
    },
    "2309": {
      "op": "itob",
      "defined_out": [
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ]
    },
    "2310": {
      "op": "replace2 2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0"
      ]
    },
    "2312": {
      "op": "frame_dig -2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "2314": {
      "op": "box_del",
      "defined_out": [
        "label_descriptor#0",
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "{box_del}"
      ]
    },
    "2315": {
      "op": "pop",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0"
      ]
    },
    "2316": {
      "op": "frame_dig -2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "2318": {
      "op": "swap",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label#0 (copy)",
        "label_descriptor#0"
      ]
    },
    "2319": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2320": {
      "retsub": true,
      "op": "retsub"
    },
    "2321": {
      "block": "remove_label_from_asset_else_body@3",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "found#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "found#0"
      ]
    },
    "2322": {
      "op": "frame_bury 5",
      "defined_out": [
        "found#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2324": {
      "op": "b remove_label_from_asset_after_if_else@13"
    },
    "2327": {
      "block": "remove_label_from_asset_else_body@5",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ],
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "next_list#0"
      ]
    },
    "2328": {
      "op": "frame_bury 1",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2330": {
      "op": "frame_dig 3",
      "defined_out": [
        "next_list#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "2332": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "next_list#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2333": {
      "op": "swap",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ]
    },
    "2334": {
      "op": "dup",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "maybe_value%3#0 (copy)"
      ]
    },
    "2335": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%3#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ]
    },
    "2337": {
      "op": "frame_bury 0",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "next_list#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2339": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%3#0"
      ]
    },
    "2340": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "2341": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%1#0",
        "maybe_value%3#0",
        "next_list#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_length%1#0"
      ]
    },
    "2342": {
      "op": "frame_bury 4",
      "defined_out": [
        "array_length%1#0",
        "maybe_value%3#0",
        "next_list#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2344": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0",
        "next_list#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "idx#0"
      ]
    },
    "2345": {
      "op": "frame_bury 6",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0",
        "next_list#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2347": {
      "block": "remove_label_from_asset_for_header@6",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "idx#0"
      ]
    },
    "2349": {
      "op": "frame_dig 4",
      "defined_out": [
        "array_length%1#0",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "idx#0",
        "array_length%1#0"
      ]
    },
    "2351": {
      "op": "<",
      "defined_out": [
        "array_length%1#0",
        "continue_looping%0#0",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "continue_looping%0#0"
      ]
    },
    "2352": {
      "op": "bz remove_label_from_asset_after_for@12",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2355": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%3#0"
      ]
    },
    "2357": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0"
      ]
    },
    "2360": {
      "op": "frame_dig 6",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "idx#0"
      ]
    },
    "2362": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "idx#0",
        "2"
      ]
    },
    "2363": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "idx#0",
        "item_offset_offset%1#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "item_offset_offset%1#0"
      ]
    },
    "2364": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_head_and_tail%1#0 (copy)",
        "array_length%1#0",
        "idx#0",
        "item_offset_offset%1#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "item_offset_offset%1#0",
        "array_head_and_tail%1#0 (copy)"
      ]
    },
    "2366": {
      "op": "swap",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "array_head_and_tail%1#0 (copy)",
        "item_offset_offset%1#0"
      ]
    },
    "2367": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "idx#0",
        "item_offset%1#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "2368": {
      "op": "dup2",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_head_and_tail%1#0 (copy)",
        "array_length%1#0",
        "idx#0",
        "item_offset%1#0",
        "item_offset%1#0 (copy)",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "array_head_and_tail%1#0 (copy)",
        "item_offset%1#0 (copy)"
      ]
    },
    "2369": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "idx#0",
        "item_length%1#0",
        "item_offset%1#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "item_length%1#0"
      ]
    },
    "2370": {
      "op": "intc_2 // 2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "item_length%1#0",
        "2"
      ]
    },
    "2371": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "idx#0",
        "item_head_tail_length%1#0",
        "item_offset%1#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "item_head_tail_length%1#0"
      ]
    },
    "2372": {
      "op": "extract3",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "stored_label#0"
      ]
    },
    "2373": {
      "op": "dup",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "stored_label#0",
        "stored_label#0"
      ]
    },
    "2374": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "stored_label#0"
      ]
    },
    "2376": {
      "op": "extract 2 0",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0",
        "stored_label#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%14#0"
      ]
    },
    "2379": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "label#0 (copy)",
        "maybe_value%3#0",
        "stored_label#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%14#0",
        "label#0 (copy)"
      ]
    },
    "2381": {
      "op": "!=",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0",
        "stored_label#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%15#0"
      ]
    },
    "2382": {
      "op": "bz remove_label_from_asset_else_body@9",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2385": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "next_list#0"
      ]
    },
    "2387": {
      "op": "frame_dig 2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "next_list#0",
        "stored_label#0"
      ]
    },
    "2389": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "next_list#0",
        "stored_label#0",
        "1"
      ]
    },
    "2390": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "next_list#0"
      ]
    },
    "2393": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2395": {
      "block": "remove_label_from_asset_after_if_else@10",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "idx#0"
      ]
    },
    "2397": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "idx#0",
        "1"
      ]
    },
    "2398": {
      "op": "+",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "idx#0"
      ]
    },
    "2399": {
      "op": "frame_bury 6",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2401": {
      "op": "b remove_label_from_asset_for_header@6"
    },
    "2404": {
      "block": "remove_label_from_asset_else_body@9",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "found#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "found#0"
      ]
    },
    "2405": {
      "op": "frame_bury 5",
      "defined_out": [
        "found#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2407": {
      "op": "b remove_label_from_asset_after_if_else@10"
    },
    "2410": {
      "block": "remove_label_from_asset_after_for@12",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "2412": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "2413": {
      "op": "box_del",
      "defined_out": [
        "tmp%1#0",
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0",
        "{box_del}"
      ]
    },
    "2414": {
      "op": "pop",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "2415": {
      "op": "frame_dig 1",
      "defined_out": [
        "next_list#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0",
        "next_list#0"
      ]
    },
    "2417": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "2418": {
      "op": "b remove_label_from_asset_after_if_else@13"
    },
    "2421": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_labels",
      "params": {
        "asset#0": "uint64"
      },
      "block": "get_asset_labels",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2424": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "2426": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2427": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2428": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2429": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2431": {
      "op": "bz get_asset_labels_after_if_else@2",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2434": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2436": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2437": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0"
      ]
    },
    "2438": {
      "op": "swap"
    },
    "2439": {
      "retsub": true,
      "op": "retsub"
    },
    "2440": {
      "block": "get_asset_labels_after_if_else@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x0000"
      ]
    },
    "2441": {
      "op": "swap"
    },
    "2442": {
      "retsub": true,
      "op": "retsub"
    },
    "2443": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_labels",
      "params": {
        "assets#0": "bytes"
      },
      "block": "get_assets_labels",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2446": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2447": {
      "op": "bytec_1 // 0x0000"
    },
    "2448": {
      "op": "frame_dig -1"
    },
    "2450": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "assets#0 (copy)",
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "assets#0 (copy)",
        "0"
      ]
    },
    "2451": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0"
      ]
    },
    "2452": {
      "op": "intc_1 // 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2453": {
      "block": "get_assets_labels_for_header@1",
      "stack_in": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "2455": {
      "op": "frame_dig 2",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_length%0#0"
      ]
    },
    "2457": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "2458": {
      "op": "bz get_assets_labels_after_for@7",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2461": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "assets#0 (copy)"
      ]
    },
    "2463": {
      "op": "extract 2 0",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2466": {
      "op": "frame_dig 3",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0"
      ]
    },
    "2468": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0",
        "8"
      ]
    },
    "2469": {
      "op": "*",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "2470": {
      "op": "extract_uint64",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "asset#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "asset#0"
      ]
    },
    "2471": {
      "op": "itob",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "tmp%0#0"
      ]
    },
    "2472": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2473": {
      "op": "frame_bury 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "tmp%0#0"
      ]
    },
    "2475": {
      "op": "box_len",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2476": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "maybe_exists%0#0"
      ]
    },
    "2478": {
      "op": "bz get_assets_labels_else_body@4",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2481": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "tmp%0#0"
      ]
    },
    "2483": {
      "op": "box_get",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2484": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "maybe_value%1#0"
      ]
    },
    "2485": {
      "op": "bytec 8 // 0x0002",
      "defined_out": [
        "0x0002",
        "_i#0",
        "array_length%0#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "maybe_value%1#0",
        "0x0002"
      ]
    },
    "2487": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "0x0002",
        "maybe_value%1#0"
      ]
    },
    "2488": {
      "op": "concat",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "result%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "result%1#0"
      ]
    },
    "2489": {
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "out#0",
        "result%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "result%1#0",
        "out#0"
      ]
    },
    "2491": {
      "op": "dup",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "out#0",
        "out#0 (copy)",
        "result%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "result%1#0",
        "out#0",
        "out#0 (copy)"
      ]
    },
    "2492": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "result%1#0",
        "out#0",
        "out#0 (copy)",
        "0"
      ]
    },
    "2493": {
      "op": "extract_uint16",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "l_count%0#0",
        "out#0",
        "result%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "result%1#0",
        "out#0",
        "l_count%0#0"
      ]
    },
    "2494": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "result%1#0",
        "l_count%0#0",
        "out#0"
      ]
    },
    "2495": {
      "op": "extract 2 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "out#0",
        "result%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "2498": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "_i#0",
        "array_length%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "out#0",
        "result%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1"
      ]
    },
    "2499": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1",
        "result%1#0"
      ]
    },
    "2501": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "out#0"
      ]
    },
    "2504": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "out#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2506": {
      "block": "get_assets_labels_after_if_else@5",
      "stack_in": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "2508": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "_i#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "2509": {
      "op": "+",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "2510": {
      "op": "frame_bury 3",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2512": {
      "op": "b get_assets_labels_for_header@1"
    },
    "2515": {
      "block": "get_assets_labels_else_body@4",
      "stack_in": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "out#0"
      ]
    },
    "2517": {
      "op": "dup",
      "defined_out": [
        "out#0",
        "out#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "out#0",
        "out#0 (copy)"
      ]
    },
    "2518": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "out#0",
        "out#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "out#0",
        "out#0 (copy)",
        "0"
      ]
    },
    "2519": {
      "op": "extract_uint16",
      "defined_out": [
        "l_count%1#0",
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "out#0",
        "l_count%1#0"
      ]
    },
    "2520": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "l_count%1#0",
        "out#0"
      ]
    },
    "2521": {
      "op": "extract 2 0",
      "defined_out": [
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "l_count%1#0",
        "l_head_and_tail%1#0"
      ]
    },
    "2524": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "1"
      ]
    },
    "2525": {
      "op": "pushbytes 0x00020000",
      "defined_out": [
        "0x00020000",
        "1",
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "1",
        "0x00020000"
      ]
    },
    "2531": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "out#0"
      ]
    },
    "2534": {
      "op": "frame_bury 1",
      "defined_out": [
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2536": {
      "op": "b get_assets_labels_after_if_else@5"
    },
    "2539": {
      "block": "get_assets_labels_after_for@7",
      "stack_in": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "out#0"
      ]
    },
    "2541": {
      "op": "frame_bury 0"
    },
    "2543": {
      "retsub": true,
      "op": "retsub"
    },
    "2544": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_micro",
      "params": {
        "asset_id#0": "uint64"
      },
      "block": "_get_asset_micro",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2547": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_id#0 (copy)"
      ],
      "stack_out": [
        "asset_id#0 (copy)"
      ]
    },
    "2549": {
      "op": "asset_params_get AssetUnitName",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "2551": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "2552": {
      "callsub": "smart_contracts.asset_labeling.contract.b2str",
      "op": "callsub b2str",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2555": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "asset_id#0 (copy)"
      ]
    },
    "2557": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "check%1#0",
        "tmp%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "2559": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "tmp%0#0",
        "value%1#0"
      ]
    },
    "2560": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2561": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "2562": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "2563": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "2564": {
      "op": "<=",
      "defined_out": [
        "no_overflow%0#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "2565": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2566": {
      "op": "extract 7 1",
      "defined_out": [
        "tmp%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0"
      ]
    },
    "2569": {
      "op": "pushbytes 0x0003",
      "defined_out": [
        "0x0003",
        "tmp%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "0x0003"
      ]
    },
    "2573": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "0x0003",
        "uint8%0#0"
      ]
    },
    "2574": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2575": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%0#0"
      ]
    },
    "2576": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2577": {
      "retsub": true,
      "op": "retsub"
    },
    "2578": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_micro",
      "params": {
        "asset#0": "uint64"
      },
      "block": "get_asset_micro",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2581": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "2583": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_micro",
      "op": "callsub _get_asset_micro",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2586": {
      "retsub": true,
      "op": "retsub"
    },
    "2587": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_micro",
      "params": {
        "assets#0": "bytes"
      },
      "block": "get_assets_micro",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2590": {
      "op": "frame_dig -1",
      "defined_out": [
        "assets#0 (copy)"
      ],
      "stack_out": [
        "assets#0 (copy)"
      ]
    },
    "2592": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "assets#0 (copy)",
        "0"
      ]
    },
    "2593": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0"
      ]
    },
    "2594": {
      "op": "intc_1 // 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2595": {
      "block": "get_assets_micro_for_header@1",
      "stack_in": [
        "array_length%0#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "2597": {
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_length%0#0"
      ]
    },
    "2599": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "2600": {
      "op": "bz get_assets_micro_after_for@4",
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2603": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "assets#0 (copy)"
      ]
    },
    "2605": {
      "op": "extract 2 0",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2608": {
      "op": "frame_dig 1",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0"
      ]
    },
    "2610": {
      "op": "dup",
      "defined_out": [
        "_i#0",
        "_i#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)",
        "_i#0 (copy)"
      ]
    },
    "2611": {
      "op": "cover 2",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)"
      ]
    },
    "2613": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "_i#0",
        "_i#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)",
        "8"
      ]
    },
    "2614": {
      "op": "*",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "2615": {
      "op": "extract_uint64",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "tmp%0#0"
      ]
    },
    "2616": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_micro",
      "op": "callsub _get_asset_micro",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "tmp%1#0"
      ]
    },
    "2619": {
      "op": "log",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "2620": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "2621": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "2622": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2624": {
      "op": "b get_assets_micro_for_header@1"
    },
    "2627": {
      "block": "get_assets_micro_after_for@4",
      "stack_in": [
        "array_length%0#0",
        "_i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "2628": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_micro_labels",
      "params": {
        "asset_id#0": "uint64"
      },
      "block": "_get_asset_micro_labels",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2631": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_id#0 (copy)"
      ],
      "stack_out": [
        "asset_id#0 (copy)"
      ]
    },
    "2633": {
      "op": "asset_params_get AssetUnitName",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "2635": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "2636": {
      "callsub": "smart_contracts.asset_labeling.contract.b2str",
      "op": "callsub b2str",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2639": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "asset_id#0 (copy)"
      ]
    },
    "2641": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "check%1#0",
        "tmp%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "2643": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "tmp%0#0",
        "value%1#0"
      ]
    },
    "2644": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2645": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "2646": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "2647": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "2648": {
      "op": "<=",
      "defined_out": [
        "no_overflow%0#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "2649": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2650": {
      "op": "extract 7 1",
      "defined_out": [
        "tmp%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0"
      ]
    },
    "2653": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "asset_id#0 (copy)"
      ]
    },
    "2655": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0"
      ]
    },
    "2656": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "2657": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2658": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "maybe_exists%0#0"
      ]
    },
    "2660": {
      "op": "bz _get_asset_micro_labels_ternary_false@2",
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0"
      ]
    },
    "2663": {
      "op": "frame_dig 2",
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "2665": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2666": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "defined_out": [
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "ternary_result%0#1"
      ]
    },
    "2667": {
      "block": "_get_asset_micro_labels_ternary_merge@3",
      "stack_in": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "ternary_result%0#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "ternary_result%0#1",
        "tmp%0#0"
      ]
    },
    "2669": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2670": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "data_length%0#0"
      ]
    },
    "2671": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "data_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "data_length%0#0",
        "5"
      ]
    },
    "2673": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0"
      ]
    },
    "2674": {
      "op": "bytec 12 // 0x0005",
      "defined_out": [
        "0x0005",
        "current_tail_offset%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "0x0005"
      ]
    },
    "2676": {
      "op": "frame_dig 1",
      "defined_out": [
        "0x0005",
        "current_tail_offset%1#0",
        "tmp%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "0x0005",
        "uint8%0#0"
      ]
    },
    "2678": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2679": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%1#0"
      ]
    },
    "2680": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "encoded_tuple_buffer%2#0",
        "as_bytes%1#0"
      ]
    },
    "2681": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%1#0",
        "tmp%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%1#0"
      ]
    },
    "2684": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2685": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "ternary_result%0#1",
        "encoded_tuple_buffer%3#0",
        "tmp%0#0"
      ]
    },
    "2686": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "ternary_result%0#1",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2687": {
      "op": "swap",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%4#0",
        "ternary_result%0#1"
      ]
    },
    "2688": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "tmp%0#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2689": {
      "op": "frame_bury 0"
    },
    "2691": {
      "retsub": true,
      "op": "retsub"
    },
    "2692": {
      "block": "_get_asset_micro_labels_ternary_false@2",
      "stack_in": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0"
      ],
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "ternary_result%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "uint8%0#0",
        "tmp%1#0",
        "ternary_result%0#1"
      ]
    },
    "2693": {
      "op": "b _get_asset_micro_labels_ternary_merge@3"
    },
    "2696": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_micro_labels",
      "params": {
        "asset#0": "uint64"
      },
      "block": "get_asset_micro_labels",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2699": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "2701": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_micro_labels",
      "op": "callsub _get_asset_micro_labels",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2704": {
      "retsub": true,
      "op": "retsub"
    },
    "2705": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_micro_labels",
      "params": {
        "assets#0": "bytes"
      },
      "block": "get_assets_micro_labels",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2708": {
      "op": "frame_dig -1",
      "defined_out": [
        "assets#0 (copy)"
      ],
      "stack_out": [
        "assets#0 (copy)"
      ]
    },
    "2710": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "assets#0 (copy)",
        "0"
      ]
    },
    "2711": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0"
      ]
    },
    "2712": {
      "op": "intc_1 // 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2713": {
      "block": "get_assets_micro_labels_for_header@1",
      "stack_in": [
        "array_length%0#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "2715": {
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_length%0#0"
      ]
    },
    "2717": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "2718": {
      "op": "bz get_assets_micro_labels_after_for@4",
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2721": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "assets#0 (copy)"
      ]
    },
    "2723": {
      "op": "extract 2 0",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2726": {
      "op": "frame_dig 1",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0"
      ]
    },
    "2728": {
      "op": "dup",
      "defined_out": [
        "_i#0",
        "_i#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)",
        "_i#0 (copy)"
      ]
    },
    "2729": {
      "op": "cover 2",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)"
      ]
    },
    "2731": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "_i#0",
        "_i#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)",
        "8"
      ]
    },
    "2732": {
      "op": "*",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "2733": {
      "op": "extract_uint64",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "tmp%0#0"
      ]
    },
    "2734": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_micro_labels",
      "op": "callsub _get_asset_micro_labels",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "tmp%1#0"
      ]
    },
    "2737": {
      "op": "log",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "2738": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "2739": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "2740": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2742": {
      "op": "b get_assets_micro_labels_for_header@1"
    },
    "2745": {
      "block": "get_assets_micro_labels_after_for@4",
      "stack_in": [
        "array_length%0#0",
        "_i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "2746": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_tiny",
      "params": {
        "asset_id#0": "uint64"
      },
      "block": "_get_asset_tiny",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2749": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_id#0 (copy)"
      ],
      "stack_out": [
        "asset_id#0 (copy)"
      ]
    },
    "2751": {
      "op": "asset_params_get AssetName",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "2753": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "2754": {
      "callsub": "smart_contracts.asset_labeling.contract.b2str",
      "op": "callsub b2str",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2757": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "asset_id#0 (copy)"
      ]
    },
    "2759": {
      "op": "asset_params_get AssetUnitName",
      "defined_out": [
        "check%1#0",
        "tmp%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "2761": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "tmp%0#0",
        "value%1#0"
      ]
    },
    "2762": {
      "callsub": "smart_contracts.asset_labeling.contract.b2str",
      "op": "callsub b2str",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2765": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "asset_id#0 (copy)"
      ]
    },
    "2767": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "check%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "value%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "2769": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "value%2#0"
      ]
    },
    "2770": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ]
    },
    "2771": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "2772": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "2773": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "2774": {
      "op": "<=",
      "defined_out": [
        "no_overflow%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "2775": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ]
    },
    "2776": {
      "op": "extract 7 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ]
    },
    "2779": {
      "op": "dig 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2781": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "data_length%0#0"
      ]
    },
    "2782": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "data_length%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "data_length%0#0",
        "5"
      ]
    },
    "2784": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "current_tail_offset%1#0"
      ]
    },
    "2785": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "as_bytes%1#0"
      ]
    },
    "2786": {
      "op": "extract 6 2",
      "defined_out": [
        "offset_as_uint16%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "offset_as_uint16%1#0"
      ]
    },
    "2789": {
      "op": "bytec 12 // 0x0005",
      "defined_out": [
        "0x0005",
        "offset_as_uint16%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "offset_as_uint16%1#0",
        "0x0005"
      ]
    },
    "2791": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "0x0005",
        "offset_as_uint16%1#0"
      ]
    },
    "2792": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2793": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%2#0",
        "uint8%0#0"
      ]
    },
    "2794": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2795": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "encoded_tuple_buffer%3#0",
        "tmp%0#0"
      ]
    },
    "2797": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2798": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%1#0"
      ]
    },
    "2799": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2800": {
      "retsub": true,
      "op": "retsub"
    },
    "2801": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_tiny",
      "params": {
        "asset#0": "uint64"
      },
      "block": "get_asset_tiny",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2804": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "2806": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_tiny",
      "op": "callsub _get_asset_tiny",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2809": {
      "retsub": true,
      "op": "retsub"
    },
    "2810": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_tiny",
      "params": {
        "assets#0": "bytes"
      },
      "block": "get_assets_tiny",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2813": {
      "op": "frame_dig -1",
      "defined_out": [
        "assets#0 (copy)"
      ],
      "stack_out": [
        "assets#0 (copy)"
      ]
    },
    "2815": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "assets#0 (copy)",
        "0"
      ]
    },
    "2816": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0"
      ]
    },
    "2817": {
      "op": "intc_1 // 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2818": {
      "block": "get_assets_tiny_for_header@1",
      "stack_in": [
        "array_length%0#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "2820": {
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_length%0#0"
      ]
    },
    "2822": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "2823": {
      "op": "bz get_assets_tiny_after_for@4",
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2826": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "assets#0 (copy)"
      ]
    },
    "2828": {
      "op": "extract 2 0",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2831": {
      "op": "frame_dig 1",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0"
      ]
    },
    "2833": {
      "op": "dup",
      "defined_out": [
        "_i#0",
        "_i#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)",
        "_i#0 (copy)"
      ]
    },
    "2834": {
      "op": "cover 2",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)"
      ]
    },
    "2836": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "_i#0",
        "_i#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)",
        "8"
      ]
    },
    "2837": {
      "op": "*",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "2838": {
      "op": "extract_uint64",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "tmp%0#0"
      ]
    },
    "2839": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_tiny",
      "op": "callsub _get_asset_tiny",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "tmp%1#0"
      ]
    },
    "2842": {
      "op": "log",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "2843": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "2844": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "2845": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2847": {
      "op": "b get_assets_tiny_for_header@1"
    },
    "2850": {
      "block": "get_assets_tiny_after_for@4",
      "stack_in": [
        "array_length%0#0",
        "_i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "2851": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_tiny_labels",
      "params": {
        "asset_id#0": "uint64"
      },
      "block": "_get_asset_tiny_labels",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2854": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_id#0 (copy)"
      ],
      "stack_out": [
        "asset_id#0 (copy)"
      ]
    },
    "2856": {
      "op": "asset_params_get AssetName",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "2858": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "2859": {
      "callsub": "smart_contracts.asset_labeling.contract.b2str",
      "op": "callsub b2str",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2862": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "asset_id#0 (copy)"
      ]
    },
    "2864": {
      "op": "asset_params_get AssetUnitName",
      "defined_out": [
        "check%1#0",
        "tmp%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "2866": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "tmp%0#0",
        "value%1#0"
      ]
    },
    "2867": {
      "callsub": "smart_contracts.asset_labeling.contract.b2str",
      "op": "callsub b2str",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2870": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "asset_id#0 (copy)"
      ]
    },
    "2872": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "check%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "value%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "2874": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "value%2#0"
      ]
    },
    "2875": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ]
    },
    "2876": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "2877": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "2878": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "2879": {
      "op": "<=",
      "defined_out": [
        "no_overflow%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "2880": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ]
    },
    "2881": {
      "op": "extract 7 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ]
    },
    "2884": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "asset_id#0 (copy)"
      ]
    },
    "2886": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0"
      ]
    },
    "2887": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "2888": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2889": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "maybe_exists%0#0"
      ]
    },
    "2891": {
      "op": "bz _get_asset_tiny_labels_ternary_false@2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0"
      ]
    },
    "2894": {
      "op": "frame_dig 3",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "2896": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2897": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "defined_out": [
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1"
      ]
    },
    "2898": {
      "block": "_get_asset_tiny_labels_ternary_merge@3",
      "stack_in": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0"
      ]
    },
    "2900": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2901": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "data_length%0#0"
      ]
    },
    "2902": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "data_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "data_length%0#0",
        "7"
      ]
    },
    "2904": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0"
      ]
    },
    "2905": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)"
      ]
    },
    "2906": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "current_tail_offset%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "as_bytes%1#0"
      ]
    },
    "2907": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0"
      ]
    },
    "2910": {
      "op": "pushbytes 0x0007",
      "defined_out": [
        "0x0007",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "0x0007"
      ]
    },
    "2914": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "0x0007",
        "offset_as_uint16%1#0"
      ]
    },
    "2915": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2916": {
      "op": "frame_dig 1",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%1#0"
      ]
    },
    "2918": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%1#0 (copy)",
        "tmp%1#0 (copy)"
      ]
    },
    "2919": {
      "op": "cover 3",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%1#0 (copy)"
      ]
    },
    "2921": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%1#0",
        "data_length%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%1#0"
      ]
    },
    "2922": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%1#0",
        "current_tail_offset%1#0"
      ]
    },
    "2924": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0"
      ]
    },
    "2925": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2926": {
      "op": "frame_dig 2",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "uint8%0#0"
      ]
    },
    "2928": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2929": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%3#0",
        "current_tail_offset%2#0"
      ]
    },
    "2930": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%3#0",
        "as_bytes%2#0"
      ]
    },
    "2931": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "offset_as_uint16%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%3#0",
        "offset_as_uint16%2#0"
      ]
    },
    "2934": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2935": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%1#0",
        "encoded_tuple_buffer%4#0",
        "tmp%0#0"
      ]
    },
    "2937": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "tmp%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2938": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "encoded_tuple_buffer%5#0",
        "tmp%1#0"
      ]
    },
    "2939": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2940": {
      "op": "swap",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "encoded_tuple_buffer%6#0",
        "ternary_result%0#1"
      ]
    },
    "2941": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "2942": {
      "op": "frame_bury 0"
    },
    "2944": {
      "retsub": true,
      "op": "retsub"
    },
    "2945": {
      "block": "_get_asset_tiny_labels_ternary_false@2",
      "stack_in": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0"
      ],
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "ternary_result%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "tmp%2#0",
        "ternary_result%0#1"
      ]
    },
    "2946": {
      "op": "b _get_asset_tiny_labels_ternary_merge@3"
    },
    "2949": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_tiny_labels",
      "params": {
        "asset#0": "uint64"
      },
      "block": "get_asset_tiny_labels",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2952": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "2954": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_tiny_labels",
      "op": "callsub _get_asset_tiny_labels",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2957": {
      "retsub": true,
      "op": "retsub"
    },
    "2958": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_tiny_labels",
      "params": {
        "assets#0": "bytes"
      },
      "block": "get_assets_tiny_labels",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2961": {
      "op": "frame_dig -1",
      "defined_out": [
        "assets#0 (copy)"
      ],
      "stack_out": [
        "assets#0 (copy)"
      ]
    },
    "2963": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "assets#0 (copy)",
        "0"
      ]
    },
    "2964": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0"
      ]
    },
    "2965": {
      "op": "intc_1 // 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2966": {
      "block": "get_assets_tiny_labels_for_header@1",
      "stack_in": [
        "array_length%0#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "2968": {
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_length%0#0"
      ]
    },
    "2970": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "2971": {
      "op": "bz get_assets_tiny_labels_after_for@4",
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2974": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "assets#0 (copy)"
      ]
    },
    "2976": {
      "op": "extract 2 0",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2979": {
      "op": "frame_dig 1",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0"
      ]
    },
    "2981": {
      "op": "dup",
      "defined_out": [
        "_i#0",
        "_i#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)",
        "_i#0 (copy)"
      ]
    },
    "2982": {
      "op": "cover 2",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)"
      ]
    },
    "2984": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "_i#0",
        "_i#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)",
        "8"
      ]
    },
    "2985": {
      "op": "*",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "2986": {
      "op": "extract_uint64",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "tmp%0#0"
      ]
    },
    "2987": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_tiny_labels",
      "op": "callsub _get_asset_tiny_labels",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "tmp%1#0"
      ]
    },
    "2990": {
      "op": "log",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "2991": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "2992": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "2993": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "2995": {
      "op": "b get_assets_tiny_labels_for_header@1"
    },
    "2998": {
      "block": "get_assets_tiny_labels_after_for@4",
      "stack_in": [
        "array_length%0#0",
        "_i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "2999": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_text",
      "params": {
        "asset_id#0": "uint64"
      },
      "block": "_get_asset_text",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3002": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_id#0 (copy)"
      ],
      "stack_out": [
        "asset_id#0 (copy)"
      ]
    },
    "3004": {
      "op": "asset_params_get AssetName",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "3006": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "3007": {
      "callsub": "smart_contracts.asset_labeling.contract.b2str",
      "op": "callsub b2str",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3010": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "asset_id#0 (copy)"
      ]
    },
    "3012": {
      "op": "asset_params_get AssetUnitName",
      "defined_out": [
        "check%1#0",
        "tmp%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "3014": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "tmp%0#0",
        "value%1#0"
      ]
    },
    "3015": {
      "callsub": "smart_contracts.asset_labeling.contract.b2str",
      "op": "callsub b2str",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3018": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "asset_id#0 (copy)"
      ]
    },
    "3020": {
      "op": "asset_params_get AssetURL",
      "defined_out": [
        "check%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "value%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "3022": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "value%2#0"
      ]
    },
    "3023": {
      "callsub": "smart_contracts.asset_labeling.contract.b2str",
      "op": "callsub b2str",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "3026": {
      "op": "dig 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3028": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "data_length%0#0"
      ]
    },
    "3029": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "data_length%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "data_length%0#0",
        "6"
      ]
    },
    "3031": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "current_tail_offset%1#0"
      ]
    },
    "3032": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)"
      ]
    },
    "3033": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "current_tail_offset%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "current_tail_offset%1#0",
        "as_bytes%1#0"
      ]
    },
    "3034": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0"
      ]
    },
    "3037": {
      "op": "pushbytes 0x0006",
      "defined_out": [
        "0x0006",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "0x0006"
      ]
    },
    "3041": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "current_tail_offset%1#0",
        "0x0006",
        "offset_as_uint16%1#0"
      ]
    },
    "3042": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3043": {
      "op": "dig 3",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%1#0 (copy)"
      ]
    },
    "3045": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%1#0",
        "data_length%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%1#0"
      ]
    },
    "3046": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "encoded_tuple_buffer%2#0",
        "data_length%1#0",
        "current_tail_offset%1#0"
      ]
    },
    "3048": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0"
      ]
    },
    "3049": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "encoded_tuple_buffer%2#0",
        "as_bytes%2#0"
      ]
    },
    "3050": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%2#0"
      ]
    },
    "3053": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "3054": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%0#0"
      ]
    },
    "3056": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "3057": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "encoded_tuple_buffer%4#0",
        "tmp%1#0"
      ]
    },
    "3059": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "3060": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%5#0",
        "tmp%2#0"
      ]
    },
    "3061": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%6#0"
      ]
    },
    "3062": {
      "retsub": true,
      "op": "retsub"
    },
    "3063": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_text",
      "params": {
        "asset#0": "uint64"
      },
      "block": "get_asset_text",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3066": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "3068": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_text",
      "op": "callsub _get_asset_text",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3071": {
      "retsub": true,
      "op": "retsub"
    },
    "3072": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_text",
      "params": {
        "assets#0": "bytes"
      },
      "block": "get_assets_text",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3075": {
      "op": "frame_dig -1",
      "defined_out": [
        "assets#0 (copy)"
      ],
      "stack_out": [
        "assets#0 (copy)"
      ]
    },
    "3077": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "assets#0 (copy)",
        "0"
      ]
    },
    "3078": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0"
      ]
    },
    "3079": {
      "op": "intc_1 // 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "3080": {
      "block": "get_assets_text_for_header@1",
      "stack_in": [
        "array_length%0#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "3082": {
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_length%0#0"
      ]
    },
    "3084": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "3085": {
      "op": "bz get_assets_text_after_for@4",
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "3088": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "assets#0 (copy)"
      ]
    },
    "3090": {
      "op": "extract 2 0",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0"
      ]
    },
    "3093": {
      "op": "frame_dig 1",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0"
      ]
    },
    "3095": {
      "op": "dup",
      "defined_out": [
        "_i#0",
        "_i#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)",
        "_i#0 (copy)"
      ]
    },
    "3096": {
      "op": "cover 2",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)"
      ]
    },
    "3098": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "_i#0",
        "_i#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)",
        "8"
      ]
    },
    "3099": {
      "op": "*",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "3100": {
      "op": "extract_uint64",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "tmp%0#0"
      ]
    },
    "3101": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_text",
      "op": "callsub _get_asset_text",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "tmp%1#0"
      ]
    },
    "3104": {
      "op": "log",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "3105": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "3106": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "3107": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "3109": {
      "op": "b get_assets_text_for_header@1"
    },
    "3112": {
      "block": "get_assets_text_after_for@4",
      "stack_in": [
        "array_length%0#0",
        "_i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "3113": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_text_labels",
      "params": {
        "asset_id#0": "uint64"
      },
      "block": "_get_asset_text_labels",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3116": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_id#0 (copy)"
      ],
      "stack_out": [
        "asset_id#0 (copy)"
      ]
    },
    "3118": {
      "op": "asset_params_get AssetName",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "3120": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "3121": {
      "callsub": "smart_contracts.asset_labeling.contract.b2str",
      "op": "callsub b2str",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3124": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "asset_id#0 (copy)"
      ]
    },
    "3126": {
      "op": "asset_params_get AssetUnitName",
      "defined_out": [
        "check%1#0",
        "tmp%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "3128": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "tmp%0#0",
        "value%1#0"
      ]
    },
    "3129": {
      "callsub": "smart_contracts.asset_labeling.contract.b2str",
      "op": "callsub b2str",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3132": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "asset_id#0 (copy)"
      ]
    },
    "3134": {
      "op": "asset_params_get AssetURL",
      "defined_out": [
        "check%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "value%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "3136": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "value%2#0"
      ]
    },
    "3137": {
      "callsub": "smart_contracts.asset_labeling.contract.b2str",
      "op": "callsub b2str",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "3140": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "asset_id#0 (copy)"
      ]
    },
    "3142": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "3143": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0"
      ]
    },
    "3144": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3145": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_exists%0#0"
      ]
    },
    "3147": {
      "op": "bz _get_asset_text_labels_ternary_false@2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "3150": {
      "op": "frame_dig 3",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0"
      ]
    },
    "3152": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3153": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "defined_out": [
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1"
      ]
    },
    "3154": {
      "block": "_get_asset_text_labels_ternary_merge@3",
      "stack_in": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0"
      ]
    },
    "3156": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3157": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "data_length%0#0"
      ]
    },
    "3158": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "data_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "data_length%0#0",
        "8"
      ]
    },
    "3159": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0"
      ]
    },
    "3160": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)"
      ]
    },
    "3161": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "current_tail_offset%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "as_bytes%1#0"
      ]
    },
    "3162": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0"
      ]
    },
    "3165": {
      "op": "pushbytes 0x0008",
      "defined_out": [
        "0x0008",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "0x0008"
      ]
    },
    "3169": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "0x0008",
        "offset_as_uint16%1#0"
      ]
    },
    "3170": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3171": {
      "op": "frame_dig 1",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%1#0"
      ]
    },
    "3173": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%1#0 (copy)",
        "tmp%1#0 (copy)"
      ]
    },
    "3174": {
      "op": "cover 3",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%1#0 (copy)"
      ]
    },
    "3176": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%1#0",
        "data_length%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%1#0"
      ]
    },
    "3177": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%1#0",
        "current_tail_offset%1#0"
      ]
    },
    "3179": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0"
      ]
    },
    "3180": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%2#0",
        "current_tail_offset%2#0 (copy)",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0",
        "current_tail_offset%2#0 (copy)"
      ]
    },
    "3181": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0",
        "as_bytes%2#0"
      ]
    },
    "3182": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0",
        "offset_as_uint16%2#0"
      ]
    },
    "3185": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "offset_as_uint16%2#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3187": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%2#0"
      ]
    },
    "3188": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "3189": {
      "op": "frame_dig 2",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%2#0"
      ]
    },
    "3191": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%2#0 (copy)",
        "tmp%2#0 (copy)"
      ]
    },
    "3192": {
      "op": "cover 3",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%2#0 (copy)"
      ]
    },
    "3194": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%2#0",
        "data_length%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "data_length%2#0"
      ]
    },
    "3195": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "encoded_tuple_buffer%3#0",
        "data_length%2#0",
        "current_tail_offset%2#0"
      ]
    },
    "3197": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "encoded_tuple_buffer%3#0",
        "current_tail_offset%3#0"
      ]
    },
    "3198": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "encoded_tuple_buffer%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "encoded_tuple_buffer%3#0",
        "as_bytes%3#0"
      ]
    },
    "3199": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "offset_as_uint16%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "encoded_tuple_buffer%3#0",
        "offset_as_uint16%3#0"
      ]
    },
    "3202": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "3203": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%1#0",
        "tmp%2#0",
        "encoded_tuple_buffer%4#0",
        "tmp%0#0"
      ]
    },
    "3205": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%1#0",
        "tmp%2#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "3206": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%2#0",
        "encoded_tuple_buffer%5#0",
        "tmp%1#0"
      ]
    },
    "3208": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "tmp%2#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "3209": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "encoded_tuple_buffer%6#0",
        "tmp%2#0"
      ]
    },
    "3210": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "3211": {
      "op": "swap",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "encoded_tuple_buffer%7#0",
        "ternary_result%0#1"
      ]
    },
    "3212": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "3213": {
      "op": "frame_bury 0"
    },
    "3215": {
      "retsub": true,
      "op": "retsub"
    },
    "3216": {
      "block": "_get_asset_text_labels_ternary_false@2",
      "stack_in": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "ternary_result%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "ternary_result%0#1"
      ]
    },
    "3217": {
      "op": "b _get_asset_text_labels_ternary_merge@3"
    },
    "3220": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_text_labels",
      "params": {
        "asset#0": "uint64"
      },
      "block": "get_asset_text_labels",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3223": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "3225": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_text_labels",
      "op": "callsub _get_asset_text_labels",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3228": {
      "retsub": true,
      "op": "retsub"
    },
    "3229": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_text_labels",
      "params": {
        "assets#0": "bytes"
      },
      "block": "get_assets_text_labels",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3232": {
      "op": "frame_dig -1",
      "defined_out": [
        "assets#0 (copy)"
      ],
      "stack_out": [
        "assets#0 (copy)"
      ]
    },
    "3234": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "assets#0 (copy)",
        "0"
      ]
    },
    "3235": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0"
      ]
    },
    "3236": {
      "op": "intc_1 // 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "3237": {
      "block": "get_assets_text_labels_for_header@1",
      "stack_in": [
        "array_length%0#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "3239": {
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_length%0#0"
      ]
    },
    "3241": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "3242": {
      "op": "bz get_assets_text_labels_after_for@4",
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "3245": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "assets#0 (copy)"
      ]
    },
    "3247": {
      "op": "extract 2 0",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0"
      ]
    },
    "3250": {
      "op": "frame_dig 1",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0"
      ]
    },
    "3252": {
      "op": "dup",
      "defined_out": [
        "_i#0",
        "_i#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)",
        "_i#0 (copy)"
      ]
    },
    "3253": {
      "op": "cover 2",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)"
      ]
    },
    "3255": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "_i#0",
        "_i#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)",
        "8"
      ]
    },
    "3256": {
      "op": "*",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "3257": {
      "op": "extract_uint64",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "tmp%0#0"
      ]
    },
    "3258": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_text_labels",
      "op": "callsub _get_asset_text_labels",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "tmp%1#0"
      ]
    },
    "3261": {
      "op": "log",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "3262": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "3263": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "3264": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "3266": {
      "op": "b get_assets_text_labels_for_header@1"
    },
    "3269": {
      "block": "get_assets_text_labels_after_for@4",
      "stack_in": [
        "array_length%0#0",
        "_i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "3270": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_small",
      "params": {
        "asset_id#0": "uint64"
      },
      "block": "_get_asset_small",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3273": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_id#0 (copy)"
      ],
      "stack_out": [
        "asset_id#0 (copy)"
      ]
    },
    "3275": {
      "op": "asset_params_get AssetName",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "3277": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "3278": {
      "callsub": "smart_contracts.asset_labeling.contract.b2str",
      "op": "callsub b2str",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3281": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "asset_id#0 (copy)"
      ]
    },
    "3283": {
      "op": "asset_params_get AssetUnitName",
      "defined_out": [
        "check%1#0",
        "tmp%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "3285": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "tmp%0#0",
        "value%1#0"
      ]
    },
    "3286": {
      "callsub": "smart_contracts.asset_labeling.contract.b2str",
      "op": "callsub b2str",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3289": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "asset_id#0 (copy)"
      ]
    },
    "3291": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "check%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "value%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "3293": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "value%2#0"
      ]
    },
    "3294": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ]
    },
    "3295": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "3296": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "3297": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "3298": {
      "op": "<=",
      "defined_out": [
        "no_overflow%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "3299": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ]
    },
    "3300": {
      "op": "extract 7 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ]
    },
    "3303": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "asset_id#0 (copy)"
      ]
    },
    "3305": {
      "op": "asset_params_get AssetTotal",
      "defined_out": [
        "check%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "value%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "value%3#0",
        "check%3#0"
      ]
    },
    "3307": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "value%3#0"
      ]
    },
    "3308": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "3309": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "asset_id#0 (copy)"
      ]
    },
    "3311": {
      "op": "asset_params_get AssetFreeze",
      "defined_out": [
        "check%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "value%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "value%4#0",
        "check%4#0"
      ]
    },
    "3313": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "value%4#0"
      ]
    },
    "3314": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "value%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "value%4#0",
        "tmp%2#0"
      ]
    },
    "3316": {
      "op": "!=",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "to_encode%0#0"
      ]
    },
    "3317": {
      "op": "bytec 9 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%0#0",
        "tmp%1#0",
        "to_encode%0#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "to_encode%0#0",
        "0x00"
      ]
    },
    "3319": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "to_encode%0#0",
        "0x00",
        "0"
      ]
    },
    "3320": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "0x00",
        "0",
        "to_encode%0#0"
      ]
    },
    "3322": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0"
      ]
    },
    "3323": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "asset_id#0 (copy)"
      ]
    },
    "3325": {
      "op": "asset_params_get AssetClawback",
      "defined_out": [
        "check%5#0",
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "value%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "value%5#0",
        "check%5#0"
      ]
    },
    "3327": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "value%5#0"
      ]
    },
    "3328": {
      "op": "global ZeroAddress",
      "defined_out": [
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%3#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "value%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "value%5#0",
        "tmp%3#0"
      ]
    },
    "3330": {
      "op": "!=",
      "defined_out": [
        "encoded_bool%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "to_encode%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "to_encode%1#0"
      ]
    },
    "3331": {
      "op": "bytec 9 // 0x00",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "to_encode%1#0",
        "0x00"
      ]
    },
    "3333": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "to_encode%1#0",
        "0x00",
        "0"
      ]
    },
    "3334": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "0x00",
        "0",
        "to_encode%1#0"
      ]
    },
    "3336": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0"
      ]
    },
    "3337": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "asset_id#0 (copy)"
      ]
    },
    "3339": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%4#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0"
      ]
    },
    "3340": {
      "op": "dup",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%4#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "tmp%4#0"
      ]
    },
    "3341": {
      "op": "box_len",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%4#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3342": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "maybe_exists%0#0"
      ]
    },
    "3344": {
      "op": "bz _get_asset_small_ternary_false@2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0"
      ]
    },
    "3347": {
      "op": "frame_dig 6",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "tmp%4#0"
      ]
    },
    "3349": {
      "op": "box_get",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%4#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3350": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%4#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1"
      ]
    },
    "3351": {
      "block": "_get_asset_small_ternary_merge@3",
      "stack_in": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0"
      ]
    },
    "3353": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3354": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "data_length%0#0"
      ]
    },
    "3355": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "data_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "data_length%0#0",
        "16"
      ]
    },
    "3357": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0"
      ]
    },
    "3358": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)"
      ]
    },
    "3359": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "current_tail_offset%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "as_bytes%1#0"
      ]
    },
    "3360": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0"
      ]
    },
    "3363": {
      "op": "pushbytes 0x0010",
      "defined_out": [
        "0x0010",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "0x0010"
      ]
    },
    "3367": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "0x0010",
        "offset_as_uint16%1#0"
      ]
    },
    "3368": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3369": {
      "op": "frame_dig 1",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%1#0"
      ]
    },
    "3371": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%1#0 (copy)",
        "tmp%1#0 (copy)"
      ]
    },
    "3372": {
      "op": "cover 3",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%1#0 (copy)"
      ]
    },
    "3374": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%1#0",
        "data_length%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%1#0"
      ]
    },
    "3375": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%1#0",
        "current_tail_offset%1#0"
      ]
    },
    "3377": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0"
      ]
    },
    "3378": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3379": {
      "op": "frame_dig 2",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "uint8%0#0"
      ]
    },
    "3381": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "3382": {
      "op": "frame_dig 3",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%1#0"
      ]
    },
    "3384": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "3385": {
      "op": "frame_dig 4",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_bool%0#0",
        "encoded_tuple_buffer%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%4#0",
        "encoded_bool%0#0"
      ]
    },
    "3387": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_bool%0#0",
        "encoded_tuple_buffer%5#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "3388": {
      "op": "frame_dig 5",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%5#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%5#0",
        "encoded_bool%1#0"
      ]
    },
    "3390": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "current_tail_offset%2#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%5#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%5#0",
        "encoded_bool%1#0",
        "0"
      ]
    },
    "3391": {
      "op": "getbit",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%5#0",
        "is_true%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%5#0",
        "is_true%0#0"
      ]
    },
    "3392": {
      "op": "pushint 105 // 105"
    },
    "3394": {
      "op": "swap",
      "defined_out": [
        "105",
        "current_tail_offset%2#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%5#0",
        "is_true%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%5#0",
        "105",
        "is_true%0#0"
      ]
    },
    "3395": {
      "op": "setbit",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%6#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "3396": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%6#0",
        "current_tail_offset%2#0"
      ]
    },
    "3397": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%6#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%6#0",
        "as_bytes%2#0"
      ]
    },
    "3398": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%6#0",
        "offset_as_uint16%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%6#0",
        "offset_as_uint16%2#0"
      ]
    },
    "3401": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%7#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "3402": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%1#0",
        "encoded_tuple_buffer%7#0",
        "tmp%0#0"
      ]
    },
    "3404": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%8#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "tmp%1#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "3405": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "encoded_tuple_buffer%8#0",
        "tmp%1#0"
      ]
    },
    "3406": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%9#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "3407": {
      "op": "swap",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%9#0",
        "ternary_result%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "encoded_tuple_buffer%9#0",
        "ternary_result%0#1"
      ]
    },
    "3408": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%10#0",
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "3409": {
      "op": "frame_bury 0"
    },
    "3411": {
      "retsub": true,
      "op": "retsub"
    },
    "3412": {
      "block": "_get_asset_small_ternary_false@2",
      "stack_in": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0"
      ],
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "ternary_result%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "tmp%4#0",
        "ternary_result%0#1"
      ]
    },
    "3413": {
      "op": "b _get_asset_small_ternary_merge@3"
    },
    "3416": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_small",
      "params": {
        "asset#0": "uint64"
      },
      "block": "get_asset_small",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3419": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "3421": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_small",
      "op": "callsub _get_asset_small",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3424": {
      "retsub": true,
      "op": "retsub"
    },
    "3425": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_small",
      "params": {
        "assets#0": "bytes"
      },
      "block": "get_assets_small",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3428": {
      "op": "frame_dig -1",
      "defined_out": [
        "assets#0 (copy)"
      ],
      "stack_out": [
        "assets#0 (copy)"
      ]
    },
    "3430": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "assets#0 (copy)",
        "0"
      ]
    },
    "3431": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0"
      ]
    },
    "3432": {
      "op": "intc_1 // 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "3433": {
      "block": "get_assets_small_for_header@1",
      "stack_in": [
        "array_length%0#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "3435": {
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_length%0#0"
      ]
    },
    "3437": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "3438": {
      "op": "bz get_assets_small_after_for@4",
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "3441": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "assets#0 (copy)"
      ]
    },
    "3443": {
      "op": "extract 2 0",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0"
      ]
    },
    "3446": {
      "op": "frame_dig 1",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0"
      ]
    },
    "3448": {
      "op": "dup",
      "defined_out": [
        "_i#0",
        "_i#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)",
        "_i#0 (copy)"
      ]
    },
    "3449": {
      "op": "cover 2",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)"
      ]
    },
    "3451": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "_i#0",
        "_i#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)",
        "8"
      ]
    },
    "3452": {
      "op": "*",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "3453": {
      "op": "extract_uint64",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "tmp%0#0"
      ]
    },
    "3454": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_small",
      "op": "callsub _get_asset_small",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "tmp%1#0"
      ]
    },
    "3457": {
      "op": "log",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "3458": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "3459": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "3460": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "3462": {
      "op": "b get_assets_small_for_header@1"
    },
    "3465": {
      "block": "get_assets_small_after_for@4",
      "stack_in": [
        "array_length%0#0",
        "_i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "3466": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_full",
      "params": {
        "asset_id#0": "uint64"
      },
      "block": "_get_asset_full",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3469": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "3470": {
      "op": "dupn 13",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ]
    },
    "3472": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_id#0 (copy)"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "asset_id#0 (copy)"
      ]
    },
    "3474": {
      "op": "asset_params_get AssetReserve",
      "defined_out": [
        "check%0#0",
        "reserve_acct#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "check%0#0"
      ]
    },
    "3476": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "check%0#0",
        "reserve_acct#0"
      ]
    },
    "3477": {
      "op": "dup",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "check%0#0",
        "reserve_acct#0",
        "reserve_acct#0 (copy)"
      ]
    },
    "3478": {
      "op": "uncover 2",
      "defined_out": [
        "check%0#0",
        "reserve_acct#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_acct#0",
        "check%0#0"
      ]
    },
    "3480": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_acct#0"
      ]
    },
    "3481": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_acct#0",
        "asset_id#0 (copy)"
      ]
    },
    "3483": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "reserve_acct#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "3485": {
      "op": "bury 1",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "tmp%3#0"
      ]
    },
    "3487": {
      "op": "bz _get_asset_full_ternary_false@2",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0"
      ]
    },
    "3490": {
      "op": "frame_dig 14",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_acct#0"
      ]
    },
    "3492": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_acct#0",
        "asset_id#0 (copy)"
      ]
    },
    "3494": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "check%1#0",
        "reserve_acct#0",
        "value%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "3496": {
      "error": "account opted into asset",
      "op": "assert // account opted into asset",
      "defined_out": [
        "reserve_acct#0",
        "reserve_balance#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0"
      ]
    },
    "3497": {
      "block": "_get_asset_full_ternary_merge@3",
      "stack_in": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "asset_id#0 (copy)"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "asset_id#0 (copy)"
      ]
    },
    "3499": {
      "op": "asset_params_get AssetName",
      "defined_out": [
        "check%2#0",
        "value%2#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "3501": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%2#0"
      ]
    },
    "3502": {
      "callsub": "smart_contracts.asset_labeling.contract.b2str",
      "op": "callsub b2str",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "tmp%4#0"
      ]
    },
    "3505": {
      "op": "frame_bury 2",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0"
      ]
    },
    "3507": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "asset_id#0 (copy)"
      ]
    },
    "3509": {
      "op": "asset_params_get AssetUnitName",
      "defined_out": [
        "check%3#0",
        "tmp%4#0",
        "value%3#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%3#0",
        "check%3#0"
      ]
    },
    "3511": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%3#0"
      ]
    },
    "3512": {
      "callsub": "smart_contracts.asset_labeling.contract.b2str",
      "op": "callsub b2str",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "tmp%5#0"
      ]
    },
    "3515": {
      "op": "frame_bury 3",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0"
      ]
    },
    "3517": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "asset_id#0 (copy)"
      ]
    },
    "3519": {
      "op": "asset_params_get AssetURL",
      "defined_out": [
        "check%4#0",
        "tmp%4#0",
        "tmp%5#0",
        "value%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%4#0",
        "check%4#0"
      ]
    },
    "3521": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%4#0"
      ]
    },
    "3522": {
      "callsub": "smart_contracts.asset_labeling.contract.b2str",
      "op": "callsub b2str",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "tmp%6#0"
      ]
    },
    "3525": {
      "op": "frame_bury 4",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0"
      ]
    },
    "3527": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "asset_id#0 (copy)"
      ]
    },
    "3529": {
      "op": "asset_params_get AssetTotal",
      "defined_out": [
        "check%5#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "value%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%5#0",
        "check%5#0"
      ]
    },
    "3531": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%5#0"
      ]
    },
    "3532": {
      "op": "itob",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "val_as_bytes%0#0"
      ]
    },
    "3533": {
      "op": "frame_bury 7",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0"
      ]
    },
    "3535": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "asset_id#0 (copy)"
      ]
    },
    "3537": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "check%6#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "value%6#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%6#0",
        "check%6#0"
      ]
    },
    "3539": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%6#0"
      ]
    },
    "3540": {
      "op": "itob",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "val_as_bytes%1#0"
      ]
    },
    "3541": {
      "op": "dup",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ]
    },
    "3542": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "val_as_bytes%1#0",
        "bitlen%0#0"
      ]
    },
    "3543": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "val_as_bytes%1#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "3544": {
      "op": "<=",
      "defined_out": [
        "no_overflow%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "val_as_bytes%1#0",
        "no_overflow%0#0"
      ]
    },
    "3545": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "val_as_bytes%1#0"
      ]
    },
    "3546": {
      "op": "extract 7 1",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "uint8%0#0"
      ]
    },
    "3549": {
      "op": "frame_bury 6",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0"
      ]
    },
    "3551": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "asset_id#0 (copy)"
      ]
    },
    "3553": {
      "op": "asset_params_get AssetCreator",
      "defined_out": [
        "check%7#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%7#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%7#0",
        "check%7#0"
      ]
    },
    "3555": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "check%7#0",
        "value%7#0"
      ]
    },
    "3556": {
      "op": "frame_bury 11",
      "defined_out": [
        "check%7#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%7#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "check%7#0"
      ]
    },
    "3558": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0"
      ]
    },
    "3559": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "asset_id#0 (copy)"
      ]
    },
    "3561": {
      "op": "asset_params_get AssetManager",
      "defined_out": [
        "check%8#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%7#0",
        "value%8#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%8#0",
        "check%8#0"
      ]
    },
    "3563": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "check%8#0",
        "value%8#0"
      ]
    },
    "3564": {
      "op": "frame_bury 12",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "check%8#0"
      ]
    },
    "3566": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0"
      ]
    },
    "3567": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "asset_id#0 (copy)"
      ]
    },
    "3569": {
      "op": "asset_params_get AssetFreeze",
      "defined_out": [
        "check%9#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%9#0",
        "check%9#0"
      ]
    },
    "3571": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "check%9#0",
        "value%9#0"
      ]
    },
    "3572": {
      "op": "frame_bury 13",
      "defined_out": [
        "check%9#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "check%9#0"
      ]
    },
    "3574": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0"
      ]
    },
    "3575": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "asset_id#0 (copy)"
      ]
    },
    "3577": {
      "op": "asset_params_get AssetClawback",
      "defined_out": [
        "check%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%10#0",
        "check%10#0"
      ]
    },
    "3579": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "check%10#0",
        "value%10#0"
      ]
    },
    "3580": {
      "op": "frame_bury 9",
      "defined_out": [
        "check%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "check%10#0"
      ]
    },
    "3582": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0"
      ]
    },
    "3583": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "asset_id#0 (copy)"
      ]
    },
    "3585": {
      "op": "asset_params_get AssetReserve",
      "defined_out": [
        "check%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%11#0",
        "check%11#0"
      ]
    },
    "3587": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "check%11#0",
        "value%11#0"
      ]
    },
    "3588": {
      "op": "frame_bury 10",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "check%11#0"
      ]
    },
    "3590": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0"
      ]
    },
    "3591": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "asset_id#0 (copy)"
      ]
    },
    "3593": {
      "op": "asset_params_get AssetDefaultFrozen",
      "defined_out": [
        "check%12#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%12#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%12#0",
        "check%12#0"
      ]
    },
    "3595": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%12#0"
      ]
    },
    "3596": {
      "op": "bytec 9 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%12#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%12#0",
        "0x00"
      ]
    },
    "3598": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%12#0",
        "0x00",
        "0"
      ]
    },
    "3599": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "0x00",
        "0",
        "value%12#0"
      ]
    },
    "3601": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "encoded_bool%0#0"
      ]
    },
    "3602": {
      "op": "frame_bury 0",
      "defined_out": [
        "encoded_bool%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0"
      ]
    },
    "3604": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "asset_id#0 (copy)"
      ]
    },
    "3606": {
      "op": "asset_params_get AssetMetadataHash",
      "defined_out": [
        "check%13#0",
        "encoded_bool%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%13#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%13#0",
        "check%13#0"
      ]
    },
    "3608": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%13#0"
      ]
    },
    "3609": {
      "op": "dup",
      "defined_out": [
        "encoded_bool%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%13#0",
        "value%13#0 (copy)",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%13#0",
        "value%13#0 (copy)"
      ]
    },
    "3610": {
      "op": "len",
      "defined_out": [
        "encoded_bool%0#0",
        "length%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%13#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%13#0",
        "length%0#0"
      ]
    },
    "3611": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "encoded_bool%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%13#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%13#0",
        "as_bytes%0#0"
      ]
    },
    "3612": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_bool%0#0",
        "length_uint16%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%13#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "value%13#0",
        "length_uint16%0#0"
      ]
    },
    "3615": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "length_uint16%0#0",
        "value%13#0"
      ]
    },
    "3616": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0",
        "encoded_value%0#0"
      ]
    },
    "3617": {
      "op": "frame_bury 1",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "reserve_balance#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0"
      ]
    },
    "3619": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "val_as_bytes%2#0"
      ]
    },
    "3620": {
      "op": "frame_bury 8",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0"
      ]
    },
    "3622": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "asset_id#0 (copy)"
      ]
    },
    "3624": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "tmp%7#0"
      ]
    },
    "3625": {
      "op": "dup",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "tmp%7#0",
        "tmp%7#0"
      ]
    },
    "3626": {
      "op": "frame_bury 5",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "tmp%7#0"
      ]
    },
    "3628": {
      "op": "box_len",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3629": {
      "op": "bury 1",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "maybe_exists%0#0"
      ]
    },
    "3631": {
      "op": "bz _get_asset_full_ternary_false@5",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0"
      ]
    },
    "3634": {
      "op": "frame_dig 5",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "tmp%7#0"
      ]
    },
    "3636": {
      "op": "box_get",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3637": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1"
      ]
    },
    "3638": {
      "block": "_get_asset_full_ternary_merge@6",
      "stack_in": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0"
      ]
    },
    "3640": {
      "op": "dup",
      "defined_out": [
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "3641": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "data_length%0#0"
      ]
    },
    "3642": {
      "op": "pushint 188 // 188",
      "defined_out": [
        "188",
        "data_length%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "data_length%0#0",
        "188"
      ]
    },
    "3645": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "current_tail_offset%1#0"
      ]
    },
    "3646": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)"
      ]
    },
    "3647": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "current_tail_offset%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "current_tail_offset%1#0",
        "as_bytes%2#0"
      ]
    },
    "3648": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0"
      ]
    },
    "3651": {
      "op": "pushbytes 0x00bc",
      "defined_out": [
        "0x00bc",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "0x00bc"
      ]
    },
    "3655": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "current_tail_offset%1#0",
        "0x00bc",
        "offset_as_uint16%1#0"
      ]
    },
    "3656": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3657": {
      "op": "frame_dig 3",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%5#0"
      ]
    },
    "3659": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%5#0 (copy)",
        "tmp%5#0 (copy)"
      ]
    },
    "3660": {
      "op": "cover 3",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%5#0 (copy)"
      ]
    },
    "3662": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%1#0",
        "data_length%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%1#0"
      ]
    },
    "3663": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "encoded_tuple_buffer%2#0",
        "data_length%1#0",
        "current_tail_offset%1#0"
      ]
    },
    "3665": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0"
      ]
    },
    "3666": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%2#0",
        "current_tail_offset%2#0 (copy)",
        "encoded_tuple_buffer%2#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0",
        "current_tail_offset%2#0 (copy)"
      ]
    },
    "3667": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0",
        "as_bytes%3#0"
      ]
    },
    "3668": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%2#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0",
        "offset_as_uint16%2#0"
      ]
    },
    "3671": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "current_tail_offset%2#0",
        "offset_as_uint16%2#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3673": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%2#0"
      ]
    },
    "3674": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "3675": {
      "op": "frame_dig 4",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%6#0"
      ]
    },
    "3677": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%6#0 (copy)",
        "tmp%6#0 (copy)"
      ]
    },
    "3678": {
      "op": "cover 3",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%6#0 (copy)"
      ]
    },
    "3680": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%2#0",
        "data_length%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "data_length%2#0"
      ]
    },
    "3681": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "encoded_tuple_buffer%3#0",
        "data_length%2#0",
        "current_tail_offset%2#0"
      ]
    },
    "3683": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "encoded_tuple_buffer%3#0",
        "current_tail_offset%3#0"
      ]
    },
    "3684": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "3685": {
      "op": "frame_dig 7",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "3687": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%4#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "3688": {
      "op": "frame_dig 6",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%4#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%4#0",
        "uint8%0#0"
      ]
    },
    "3690": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%5#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "3691": {
      "op": "frame_dig 11",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%5#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%7#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%5#0",
        "value%7#0"
      ]
    },
    "3693": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%6#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%7#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "3694": {
      "op": "frame_dig 12",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%6#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%7#0",
        "value%8#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%6#0",
        "value%8#0"
      ]
    },
    "3696": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%7#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%7#0",
        "value%8#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "3697": {
      "op": "frame_dig 13",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%7#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%7#0",
        "value%9#0"
      ]
    },
    "3699": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%8#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "3700": {
      "op": "frame_dig 9",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%8#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%8#0",
        "value%10#0"
      ]
    },
    "3702": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%9#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "3703": {
      "op": "frame_dig 10",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%9#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%9#0",
        "value%11#0"
      ]
    },
    "3705": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "3706": {
      "op": "frame_dig 0",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_bool%0#0",
        "encoded_tuple_buffer%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%10#0",
        "encoded_bool%0#0"
      ]
    },
    "3708": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_bool%0#0",
        "encoded_tuple_buffer%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "3709": {
      "op": "dig 1",
      "defined_out": [
        "current_tail_offset%3#0",
        "current_tail_offset%3#0 (copy)",
        "encoded_bool%0#0",
        "encoded_tuple_buffer%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%11#0",
        "current_tail_offset%3#0 (copy)"
      ]
    },
    "3711": {
      "op": "itob",
      "defined_out": [
        "as_bytes%4#0",
        "current_tail_offset%3#0",
        "encoded_bool%0#0",
        "encoded_tuple_buffer%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%11#0",
        "as_bytes%4#0"
      ]
    },
    "3712": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_bool%0#0",
        "encoded_tuple_buffer%11#0",
        "offset_as_uint16%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%11#0",
        "offset_as_uint16%3#0"
      ]
    },
    "3715": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_bool%0#0",
        "encoded_tuple_buffer%12#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "3716": {
      "op": "frame_dig 1",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_bool%0#0",
        "encoded_tuple_buffer%12#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%12#0",
        "encoded_value%0#0"
      ]
    },
    "3718": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_bool%0#0",
        "encoded_tuple_buffer%12#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%12#0",
        "encoded_value%0#0 (copy)",
        "encoded_value%0#0 (copy)"
      ]
    },
    "3719": {
      "op": "cover 3",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "encoded_value%0#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%12#0",
        "encoded_value%0#0 (copy)"
      ]
    },
    "3721": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%3#0",
        "data_length%3#0",
        "encoded_bool%0#0",
        "encoded_tuple_buffer%12#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "encoded_value%0#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%12#0",
        "data_length%3#0"
      ]
    },
    "3722": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%12#0",
        "data_length%3#0",
        "current_tail_offset%3#0"
      ]
    },
    "3724": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%4#0",
        "encoded_bool%0#0",
        "encoded_tuple_buffer%12#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%12#0",
        "current_tail_offset%4#0"
      ]
    },
    "3725": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "encoded_value%0#0",
        "current_tail_offset%4#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "3726": {
      "op": "frame_dig 8",
      "defined_out": [
        "current_tail_offset%4#0",
        "encoded_bool%0#0",
        "encoded_tuple_buffer%12#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "encoded_value%0#0",
        "current_tail_offset%4#0",
        "encoded_tuple_buffer%12#0",
        "val_as_bytes%2#0"
      ]
    },
    "3728": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%4#0",
        "encoded_bool%0#0",
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "encoded_value%0#0",
        "current_tail_offset%4#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "3729": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%13#0",
        "current_tail_offset%4#0"
      ]
    },
    "3730": {
      "op": "itob",
      "defined_out": [
        "as_bytes%5#0",
        "encoded_bool%0#0",
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%13#0",
        "as_bytes%5#0"
      ]
    },
    "3731": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "offset_as_uint16%4#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%13#0",
        "offset_as_uint16%4#0"
      ]
    },
    "3734": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_tuple_buffer%14#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "3735": {
      "op": "uncover 4",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%5#0",
        "tmp%6#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%14#0",
        "tmp%4#0"
      ]
    },
    "3737": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_tuple_buffer%15#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%5#0",
        "tmp%6#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "3738": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%6#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%15#0",
        "tmp%5#0"
      ]
    },
    "3740": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_tuple_buffer%16#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "tmp%6#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%16#0"
      ]
    },
    "3741": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "encoded_value%0#0",
        "encoded_tuple_buffer%16#0",
        "tmp%6#0"
      ]
    },
    "3743": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_tuple_buffer%17#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "encoded_value%0#0",
        "encoded_tuple_buffer%17#0"
      ]
    },
    "3744": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "encoded_tuple_buffer%17#0",
        "encoded_value%0#0"
      ]
    },
    "3745": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_tuple_buffer%18#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "3746": {
      "op": "swap",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_tuple_buffer%18#0",
        "encoded_value%0#0",
        "ternary_result%1#1",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "encoded_tuple_buffer%18#0",
        "ternary_result%1#1"
      ]
    },
    "3747": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_tuple_buffer%19#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "encoded_tuple_buffer%19#0"
      ]
    },
    "3748": {
      "op": "frame_bury 0"
    },
    "3750": {
      "retsub": true,
      "op": "retsub"
    },
    "3751": {
      "block": "_get_asset_full_ternary_false@5",
      "stack_in": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0"
      ],
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "ternary_result%1#1"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "ternary_result%1#1"
      ]
    },
    "3752": {
      "op": "b _get_asset_full_ternary_merge@6"
    },
    "3755": {
      "block": "_get_asset_full_ternary_false@2",
      "stack_in": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "reserve_balance#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "value%10#0",
        "value%11#0",
        "value%7#0",
        "value%8#0",
        "value%9#0",
        "reserve_acct#0",
        "reserve_balance#0"
      ]
    },
    "3756": {
      "op": "b _get_asset_full_ternary_merge@3"
    },
    "3759": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_full",
      "params": {
        "asset#0": "uint64"
      },
      "block": "get_asset_full",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3762": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "3764": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_full",
      "op": "callsub _get_asset_full",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3767": {
      "retsub": true,
      "op": "retsub"
    },
    "3768": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_full",
      "params": {
        "assets#0": "bytes"
      },
      "block": "get_assets_full",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3771": {
      "op": "frame_dig -1",
      "defined_out": [
        "assets#0 (copy)"
      ],
      "stack_out": [
        "assets#0 (copy)"
      ]
    },
    "3773": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "assets#0 (copy)",
        "0"
      ]
    },
    "3774": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0"
      ]
    },
    "3775": {
      "op": "intc_1 // 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "3776": {
      "block": "get_assets_full_for_header@1",
      "stack_in": [
        "array_length%0#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "3778": {
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_length%0#0"
      ]
    },
    "3780": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "3781": {
      "op": "bz get_assets_full_after_for@4",
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "3784": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "assets#0 (copy)"
      ]
    },
    "3786": {
      "op": "extract 2 0",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0"
      ]
    },
    "3789": {
      "op": "frame_dig 1",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0"
      ]
    },
    "3791": {
      "op": "dup",
      "defined_out": [
        "_i#0",
        "_i#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)",
        "_i#0 (copy)"
      ]
    },
    "3792": {
      "op": "cover 2",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)"
      ]
    },
    "3794": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "_i#0",
        "_i#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0 (copy)",
        "8"
      ]
    },
    "3795": {
      "op": "*",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "3796": {
      "op": "extract_uint64",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "tmp%0#0"
      ]
    },
    "3797": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling._get_asset_full",
      "op": "callsub _get_asset_full",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "tmp%1#0"
      ]
    },
    "3800": {
      "op": "log",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "3801": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "3802": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "3803": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_i#0"
      ]
    },
    "3805": {
      "op": "b get_assets_full_for_header@1"
    },
    "3808": {
      "block": "get_assets_full_after_for@4",
      "stack_in": [
        "array_length%0#0",
        "_i#0"
      ],
      "retsub": true,
      "op": "retsub"
    }
  }
}