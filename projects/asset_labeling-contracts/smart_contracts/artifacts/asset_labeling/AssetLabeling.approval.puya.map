{
  "version": 3,
  "sources": [
    "../../asset_labeling/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CQ;AAAa;;AAAb;AAFR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAkOK;;AAAA;AAAA;AAAA;;AAAA;AAlOL;;;AAkOK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AA3NL;;;AAAA;AAAA;;AA2NK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAlCA;;AAAA;AAAA;AAAA;;AAAA;AAzLL;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAyLK;;;AAAA;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AA7JL;;;AAAA;;;AAAA;;;AAAA;AAAA;;AA6JK;;;AAAA;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AA7IL;;;AAAA;AAAA;;AA6IK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAzCA;;AAAA;AAAA;AAAA;;AAAA;AApGL;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAoGK;;;AAAA;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AAxEL;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAwEK;;;AAAA;;AA/BA;;AAAA;AAAA;AAAA;;AAAA;AAzCL;;;AAyCK;;;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AApCL;;;AAAA;;;AAoCK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AA5BL;;;AAAA;;;AA4BK;;;AAAA;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAjBL;;;AAAA;;;AAAA;;;AAAA;;;AAiBK;;;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAZL;;;AAAA;AAAA;;AAYK;;;AAAA;;AAZL;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUe;;AAAc;AAAA;AAAA;AAAA;AAAd;AA1BR;;;AA0BkC;;AAzBjC;AACA;;AA0BR;;;AAEQ;;;AACA;AAAA;;AAAA;;AAER;;;AAEQ;;;AACO;;AAAA;AAAA;;AApCR;;;AAoC+B;;AAnC9B;AACA;AAmCO;;AAAA;AAAmB;AAAnB;AArCR;;;AAqC8B;;AApC7B;AACA;AAqCI;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AADc;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAlB;;AAAA;;AAAA;;AAAA;AAAA;;AAMR;;;AAEQ;;;AACO;;AAAA;AAAA;;AA/CR;;;AA+C2B;AA9C1B;AACA;AA8CO;;AAAA;AAAmB;AAAnB;AAhDR;;;AAgD8B;;AA/C7B;AACA;AA+CO;;AAAA;AAAA;AAAA;;;AAA8B;;AAA9B;AAjDR;;;AAiDyC;;AAhDxC;AACA;AAgDA;;AAAA;;;AAER;;;AAEe;;AAAA;AAAA;;AAtDR;;;AAsD2B;AArD1B;AACA;AAqDO;;AAAA;AAAA;AAAP;AAER;;;AAEA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC4B;;;AAAZ;AAAA;AAAJ;;;;;;;;;AAIZ;;;AAEW;;AAAc;AAAA;AAAA;AAAA;AAAd;AAAX;;;AACY;AACJ;;AAAA;;;;AAER;;;AAG0C;;AAA9B;;AAAA;;;AAAoD;;AAApD;AAAA;;;AACkC;;AAA9B;;AAAA;;;AACD;AADC;AADJ;;;;AAzEL;;;AA4EK;;AA3EJ;AACA;;;;;;AA6ER;;;;;;AAEW;;AAAA;AAAA;;AAAA;;;AACQ;;AAAP;;AAAA;AACgC;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAA5C;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACe;;;AAAA;;AAAA;AAAf;;;AACgB;;AAAA;;AAAA;;;;;;;;;;AACD;AAAP;;AAAA;AAER;;;AAEQ;;AAAA;;;AACO;;AAAA;AAAA;;AA3FR;;;AA2F8B;AA1F7B;AACA;AA2FG;;AAAA;AAAA;;AAAX;;;AAGgB;;AAAA;;AAAA;;;AACG;AADH;AAhGT;;;AAkGS;;AAjGR;AACA;AAoGe;;AAAA;AAAA;AACK;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAhB;AAAA;;;AACA;;AAAA;;AAAA;;AAAA;AAAA;AAMe;;AAAA;AAAA;AAEf;AAAA;;AAAA;AAAwC;AAAxC;AAD6B;AAAjC;;AAGA;;AAAA;;AAAA;;AAAA;AAAA;;AAPiD;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAlB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAA3B;;AAAA;;AAAA;;AAAA;AAAA;;;;AASZ;;;;;;;;;AAEQ;;AAAA;;;AAEO;;AAAA;AAAA;;AAxHR;;;AAwH8B;AAvH7B;AACA;AAuHO;;AAAA;AAAA;;AAzHR;;;AAyHoC;AAxHnC;AACA;AA0HA;;AAAA;;AAAY;;;AAAZ;AAAA;;AAEiB;AAAb;AAAA;;;AACI;;AACD;;AADC;AADJ;;;;AA9HL;;;AAiIK;AAhIJ;AACA;AAmImB;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEf;;;AAAiC;;;;;;;;;;AAAjC;AAAA;;;AAAsC;;AAAA;;;AAA+B;;AAA/B;AAAtC;;;;AAvIL;;;AAwIK;;AAvIJ;AACA;AA0II;;AAAA;AAAA;;AAAA;AAAwC;AAAxC;AAD6B;AAAjC;;AAGA;;AAAA;;AAAA;;AAAA;AAAA;AAEG;;AAAA;AAAA;AAAA;AAAA;AAAmC;AAAnC;AAAX;;;AACY;;AAAA;;;AAEY;AAAA;;AAIwB;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAhD;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgB;;AACG;;AAAA;;;;;AAAnB;;;AACoB;;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAER;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;;;AAEZ;;;AAEW;;AAAA;AAAA;;AAAX;;;AACmB;;AAAA;AAAA;AAAP;AAzJD;AA2JH;AAWR;;;;;;;AAEe;;AAAA;AAAA;;AA/KR;;;AA+K8B;AA9K7B;AACA;AA+KA;;AAAA;;;AAEG;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAX;;;AAbW;;AAAA;AAAA;;AAAA;;;AACQ;;AAeyC;AAA5C;AAtLT;;;AAuLS;;AAtLR;AACA;AAyLe;;AAAA;AAAA;AAAA;AACK;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAhB;AAAA;;;AACA;;AAAA;;AAAA;AAMe;;AAAA;AAAA;AAEf;AAAA;AAAA;AAAqC;AAArC;AAD0B;AAA9B;;AAGA;;AAAA;;AAAA;;AAAA;AAAA;;AA/BoC;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAA5C;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACe;;;AAAA;;AAAA;AAAf;;;;;AAagB;;;;;;;;;;;;AAXD;AAWC;;;AAUmC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAlB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAArB;;AAAA;AAAA;;AAAA;AAAA;;;;AASZ;;;;;;;;;AAEe;;AAAA;AAAA;;AA3MR;;;AA2M8B;AA1M7B;AACA;AA2MA;;AAAA;;;AAEQ;AAAR;;AACG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA6B;AAA7B;AAAX;;;AACe;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAf;;;AACgB;;AAAA;;AACQ;AAAR;;AAnNT;;AAAA;;;AAkOe;AAjOd;AACA;AAmOmB;;AAAA;AAAA;AAEf;AAAA;AAAA;AAAqC;AAArC;AAD0B;AAA9B;;AAGA;;AAAA;;AAAA;;AAAA;AAAA;;AApBgB;AAAR;;;;;AAEQ;AAAA;;AAGwB;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAhD;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgB;AAAA;;AACG;;;AAAA;;AAAA;AAAnB;;;AACoB;;AAAA;;AAAA;AAAA;;;AAAA;;;;;;;;;;;AAEQ;AAAR;;;;;AAER;;AAAA;AAAA;;AAAA;;AAAA;;;;AAWZ;;;AAEW;;AAAA;AAAA;AAAA;AAAA;;AAAX;;;AACmB;;AAAA;AAAA;AAAP;AAAA;AAvOD;AAyOH;AAAA;AAER;;;;AAIc;AACd;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAC0B;AACX;AAAA;AAAA;;AAAA;AAAA;;AAAf;;;AAC2B;;AAAA;AAAA;AAAX;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;;;;;;;;;;;AAEA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;;;AAAA;;;AAAA;;;;;AACR;;AAAA;;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 2 4294967295 4294967296"
    },
    "16": {
      "op": "bytecblock \"ERR:NOEXIST\" \"\" 0x0000 \"admin\" 0x151f7c75 \"ERR:EXISTS\" 0x0002 \"ERR:UNAUTH\" \"ERR:LENGTH\" 0x0000000000000000 \"ERR:NOEMPTY\" 0x0001"
    },
    "105": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "107": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "110": {
      "op": "bytec_3 // \"admin\"",
      "defined_out": [
        "\"admin\""
      ],
      "stack_out": [
        "\"admin\""
      ]
    },
    "111": {
      "op": "txn Sender",
      "defined_out": [
        "\"admin\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "\"admin\"",
        "new_state_value%0#0"
      ]
    },
    "113": {
      "op": "app_global_put",
      "stack_out": []
    },
    "114": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "116": {
      "op": "bz main_bare_routing@17",
      "stack_out": []
    },
    "119": {
      "op": "pushbytess 0x8f0d7d8e 0x7c1b32f6 0x17e691ae 0x33d0ffdc 0x725616e7 0xfac1cf1b 0xb4c50b9f 0xa2dd2247 0xa37dea11 0x68f18efa 0xc2ed743f 0xa67f03c2 // method \"change_admin(account)void\", method \"add_label(string,string)void\", method \"remove_label(string)void\", method \"get_label(string)(string,uint64,uint64)\", method \"log_labels(string[])void\", method \"add_operator_to_label(account,string)void\", method \"remove_operator_from_label(account,string)void\", method \"get_operator_labels(account)string[]\", method \"add_label_to_asset(string,asset)void\", method \"remove_label_from_asset(string,asset)void\", method \"get_asset_labels(asset)string[]\", method \"get_assets_labels(uint64[])string[][]\"",
      "defined_out": [
        "Method(add_label(string,string)void)",
        "Method(add_label_to_asset(string,asset)void)",
        "Method(add_operator_to_label(account,string)void)",
        "Method(change_admin(account)void)",
        "Method(get_asset_labels(asset)string[])",
        "Method(get_assets_labels(uint64[])string[][])",
        "Method(get_label(string)(string,uint64,uint64))",
        "Method(get_operator_labels(account)string[])",
        "Method(log_labels(string[])void)",
        "Method(remove_label(string)void)",
        "Method(remove_label_from_asset(string,asset)void)",
        "Method(remove_operator_from_label(account,string)void)"
      ],
      "stack_out": [
        "Method(change_admin(account)void)",
        "Method(add_label(string,string)void)",
        "Method(remove_label(string)void)",
        "Method(get_label(string)(string,uint64,uint64))",
        "Method(log_labels(string[])void)",
        "Method(add_operator_to_label(account,string)void)",
        "Method(remove_operator_from_label(account,string)void)",
        "Method(get_operator_labels(account)string[])",
        "Method(add_label_to_asset(string,asset)void)",
        "Method(remove_label_from_asset(string,asset)void)",
        "Method(get_asset_labels(asset)string[])",
        "Method(get_assets_labels(uint64[])string[][])"
      ]
    },
    "181": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(add_label(string,string)void)",
        "Method(add_label_to_asset(string,asset)void)",
        "Method(add_operator_to_label(account,string)void)",
        "Method(change_admin(account)void)",
        "Method(get_asset_labels(asset)string[])",
        "Method(get_assets_labels(uint64[])string[][])",
        "Method(get_label(string)(string,uint64,uint64))",
        "Method(get_operator_labels(account)string[])",
        "Method(log_labels(string[])void)",
        "Method(remove_label(string)void)",
        "Method(remove_label_from_asset(string,asset)void)",
        "Method(remove_operator_from_label(account,string)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(change_admin(account)void)",
        "Method(add_label(string,string)void)",
        "Method(remove_label(string)void)",
        "Method(get_label(string)(string,uint64,uint64))",
        "Method(log_labels(string[])void)",
        "Method(add_operator_to_label(account,string)void)",
        "Method(remove_operator_from_label(account,string)void)",
        "Method(get_operator_labels(account)string[])",
        "Method(add_label_to_asset(string,asset)void)",
        "Method(remove_label_from_asset(string,asset)void)",
        "Method(get_asset_labels(asset)string[])",
        "Method(get_assets_labels(uint64[])string[][])",
        "tmp%2#0"
      ]
    },
    "184": {
      "op": "match main_change_admin_route@5 main_add_label_route@6 main_remove_label_route@7 main_get_label_route@8 main_log_labels_route@9 main_add_operator_to_label_route@10 main_remove_operator_from_label_route@11 main_get_operator_labels_route@12 main_add_label_to_asset_route@13 main_remove_label_from_asset_route@14 main_get_asset_labels_route@15 main_get_assets_labels_route@16",
      "stack_out": []
    },
    "210": {
      "block": "main_after_if_else@19",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "211": {
      "op": "return",
      "stack_out": []
    },
    "212": {
      "block": "main_get_assets_labels_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "214": {
      "op": "!",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "215": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "216": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "218": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "219": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "222": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_labels",
      "op": "callsub get_assets_labels",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "225": {
      "op": "bytec 4 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0",
        "0x151f7c75"
      ]
    },
    "227": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%89#0"
      ]
    },
    "228": {
      "op": "concat",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "229": {
      "op": "log",
      "stack_out": []
    },
    "230": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "231": {
      "op": "return",
      "stack_out": []
    },
    "232": {
      "block": "main_get_asset_labels_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "234": {
      "op": "!",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "235": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "236": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "238": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "239": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%6#0"
      ]
    },
    "242": {
      "op": "btoi",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "243": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "245": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_labels",
      "op": "callsub get_asset_labels",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "248": {
      "op": "bytec 4 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0",
        "0x151f7c75"
      ]
    },
    "250": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%82#0"
      ]
    },
    "251": {
      "op": "concat",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "252": {
      "op": "log",
      "stack_out": []
    },
    "253": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "254": {
      "op": "return",
      "stack_out": []
    },
    "255": {
      "block": "main_remove_label_from_asset_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "257": {
      "op": "!",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "258": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "259": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "261": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "262": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "265": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "268": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%5#0",
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0",
        "reinterpret_bytes[1]%5#0"
      ]
    },
    "271": {
      "op": "btoi",
      "defined_out": [
        "tmp%73#0",
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%73#0",
        "tmp%74#0"
      ]
    },
    "272": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%73#0",
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%73#0",
        "tmp%75#0"
      ]
    },
    "274": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_label_from_asset",
      "op": "callsub remove_label_from_asset",
      "stack_out": []
    },
    "277": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "278": {
      "op": "return",
      "stack_out": []
    },
    "279": {
      "block": "main_add_label_to_asset_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "281": {
      "op": "!",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "282": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "283": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "285": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "286": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "289": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "292": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%4#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0",
        "reinterpret_bytes[1]%4#0"
      ]
    },
    "295": {
      "op": "btoi",
      "defined_out": [
        "tmp%65#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%65#0",
        "tmp%66#0"
      ]
    },
    "296": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%65#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%65#0",
        "tmp%67#0"
      ]
    },
    "298": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.add_label_to_asset",
      "op": "callsub add_label_to_asset",
      "stack_out": []
    },
    "301": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "302": {
      "op": "return",
      "stack_out": []
    },
    "303": {
      "block": "main_get_operator_labels_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "305": {
      "op": "!",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "306": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "307": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "309": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "310": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%3#0"
      ]
    },
    "313": {
      "op": "btoi",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "314": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "316": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_labels",
      "op": "callsub get_operator_labels",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "319": {
      "op": "bytec 4 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0",
        "0x151f7c75"
      ]
    },
    "321": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%58#0"
      ]
    },
    "322": {
      "op": "concat",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "323": {
      "op": "log",
      "stack_out": []
    },
    "324": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "325": {
      "op": "return",
      "stack_out": []
    },
    "326": {
      "block": "main_remove_operator_from_label_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "328": {
      "op": "!",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "329": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "330": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "332": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "333": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "336": {
      "op": "btoi",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "337": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "339": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%49#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%49#0",
        "tmp%50#0"
      ]
    },
    "342": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%49#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%49#0",
        "tmp%51#0"
      ]
    },
    "345": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_operator_from_label",
      "op": "callsub remove_operator_from_label",
      "stack_out": []
    },
    "348": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "349": {
      "op": "return",
      "stack_out": []
    },
    "350": {
      "block": "main_add_operator_to_label_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "352": {
      "op": "!",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "353": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "354": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "356": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "357": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "360": {
      "op": "btoi",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "361": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "363": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%41#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "tmp%42#0"
      ]
    },
    "366": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%41#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "tmp%43#0"
      ]
    },
    "369": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.add_operator_to_label",
      "op": "callsub add_operator_to_label",
      "stack_out": []
    },
    "372": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "373": {
      "op": "return",
      "stack_out": []
    },
    "374": {
      "block": "main_log_labels_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "376": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "377": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "378": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "380": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "381": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "384": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.log_labels",
      "op": "callsub log_labels",
      "stack_out": []
    },
    "387": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "388": {
      "op": "return",
      "stack_out": []
    },
    "389": {
      "block": "main_get_label_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "391": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "392": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "393": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "395": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "396": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "399": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "402": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_label",
      "op": "callsub get_label",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "405": {
      "op": "bytec 4 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "0x151f7c75"
      ]
    },
    "407": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%29#0"
      ]
    },
    "408": {
      "op": "concat",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "409": {
      "op": "log",
      "stack_out": []
    },
    "410": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "411": {
      "op": "return",
      "stack_out": []
    },
    "412": {
      "block": "main_remove_label_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "414": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "415": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "416": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "418": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "419": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "422": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "425": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_label",
      "op": "callsub remove_label",
      "stack_out": []
    },
    "428": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "429": {
      "op": "return",
      "stack_out": []
    },
    "430": {
      "block": "main_add_label_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "432": {
      "op": "!",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "433": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "434": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "436": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "437": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "440": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "443": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "446": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%16#0"
      ]
    },
    "449": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.add_label",
      "op": "callsub add_label",
      "stack_out": []
    },
    "452": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "453": {
      "op": "return",
      "stack_out": []
    },
    "454": {
      "block": "main_change_admin_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "456": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "457": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "458": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "460": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "461": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "464": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "465": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "467": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.change_admin",
      "op": "callsub change_admin",
      "stack_out": []
    },
    "470": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "471": {
      "op": "return",
      "stack_out": []
    },
    "472": {
      "block": "main_bare_routing@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "474": {
      "op": "bnz main_after_if_else@19",
      "stack_out": []
    },
    "477": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "479": {
      "op": "!",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "480": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "481": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "482": {
      "op": "return",
      "stack_out": []
    },
    "483": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64"
      },
      "block": "dynamic_array_concat_byte_length_head",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "486": {
      "op": "frame_dig -3",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "488": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "489": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "490": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "491": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "493": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "new_length#0"
      ]
    },
    "494": {
      "op": "swap",
      "stack_out": [
        "new_length#0",
        "array_length#0"
      ]
    },
    "495": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_length#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "array_length#0",
        "2"
      ]
    },
    "496": {
      "op": "*",
      "defined_out": [
        "new_length#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%0#0"
      ]
    },
    "497": {
      "op": "intc_2 // 2",
      "stack_out": [
        "new_length#0",
        "tmp%0#0",
        "2"
      ]
    },
    "498": {
      "op": "+",
      "defined_out": [
        "header_end#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0"
      ]
    },
    "499": {
      "op": "dig 1",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "new_length#0 (copy)"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "new_length#0 (copy)"
      ]
    },
    "501": {
      "op": "itob",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "tmp%1#0"
      ]
    },
    "502": {
      "op": "extract 6 2",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "tmp%2#0"
      ]
    },
    "505": {
      "op": "cover 2",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0"
      ]
    },
    "507": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "array#0 (copy)"
      ]
    },
    "509": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "array#0 (copy)",
        "2"
      ]
    },
    "510": {
      "op": "dig 2",
      "defined_out": [
        "2",
        "array#0 (copy)",
        "header_end#0",
        "header_end#0 (copy)",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "array#0 (copy)",
        "2",
        "header_end#0 (copy)"
      ]
    },
    "512": {
      "op": "substring3",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0"
      ]
    },
    "513": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0",
        "new_items_count#0 (copy)"
      ]
    },
    "515": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "516": {
      "op": "*",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "517": {
      "op": "bzero",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "518": {
      "op": "concat",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0"
      ]
    },
    "519": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "array#0 (copy)"
      ]
    },
    "521": {
      "op": "len",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "522": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "tmp%7#0",
        "array#0 (copy)"
      ]
    },
    "524": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0",
        "tmp%7#0",
        "array#0 (copy)",
        "header_end#0"
      ]
    },
    "526": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0",
        "array#0 (copy)",
        "header_end#0",
        "tmp%7#0"
      ]
    },
    "528": {
      "op": "substring3",
      "defined_out": [
        "new_length#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "529": {
      "op": "concat",
      "defined_out": [
        "new_length#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%9#0"
      ]
    },
    "530": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "new_length#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%9#0",
        "new_items_bytes#0 (copy)"
      ]
    },
    "532": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail#0",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "array_head_and_tail#0"
      ]
    },
    "533": {
      "op": "swap",
      "defined_out": [
        "array_head_and_tail#0",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "new_length#0"
      ]
    },
    "534": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "new_length#0",
        "2"
      ]
    },
    "535": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail#0",
        "tail_offset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "536": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0",
        "tail_offset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#0"
      ]
    },
    "537": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#0",
        "head_offset#0"
      ]
    },
    "538": {
      "op": "swap",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "539": {
      "block": "dynamic_array_concat_byte_length_head_for_header@2",
      "stack_in": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ]
    },
    "541": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#0"
      ]
    },
    "543": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "continue_looping%0#0"
      ]
    },
    "544": {
      "op": "bz dynamic_array_concat_byte_length_head_after_for@5",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "547": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1"
      ]
    },
    "549": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset#1 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset#1 (copy)"
      ]
    },
    "550": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tmp%5#0"
      ]
    },
    "551": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ]
    },
    "554": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0"
      ]
    },
    "556": {
      "op": "frame_dig 3",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0",
        "head_offset#0"
      ]
    },
    "558": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "head_offset#0 (copy)",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "559": {
      "op": "cover 4",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0",
        "head_offset#0 (copy)"
      ]
    },
    "561": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0",
        "head_offset#0 (copy)",
        "tail_offset_bytes#0"
      ]
    },
    "563": {
      "op": "replace3",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0"
      ]
    },
    "564": {
      "op": "dup",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0",
        "array_head_and_tail#0"
      ]
    },
    "565": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0"
      ]
    },
    "567": {
      "op": "dig 1",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0",
        "tail_offset#1 (copy)"
      ]
    },
    "569": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tmp%6#1"
      ]
    },
    "570": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tmp%6#1",
        "2"
      ]
    },
    "571": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tmp%7#0"
      ]
    },
    "572": {
      "op": "+",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "573": {
      "op": "frame_bury 4",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ]
    },
    "575": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "2"
      ]
    },
    "576": {
      "op": "+",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ]
    },
    "577": {
      "op": "frame_bury 3",
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "579": {
      "op": "b dynamic_array_concat_byte_length_head_for_header@2"
    },
    "582": {
      "block": "dynamic_array_concat_byte_length_head_after_for@5",
      "stack_in": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tmp%2#0"
      ]
    },
    "584": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_head_and_tail#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tmp%2#0",
        "array_head_and_tail#0"
      ]
    },
    "586": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail#0",
        "tmp%12#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tmp%12#0"
      ]
    },
    "587": {
      "op": "frame_bury 0"
    },
    "589": {
      "retsub": true,
      "op": "retsub"
    },
    "590": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "params": {
        "array_items_count#0": "uint64",
        "array_head_and_tail#0": "bytes",
        "new_items_count#0": "uint64",
        "new_head_and_tail#0": "bytes"
      },
      "block": "dynamic_array_concat_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "593": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "item_offset_adjustment#2"
      ]
    },
    "594": {
      "op": "dup"
    },
    "595": {
      "op": "frame_dig -2"
    },
    "597": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "new_head#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "598": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0"
      ]
    },
    "599": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)"
      ]
    },
    "601": {
      "op": "intc_2 // 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "602": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0"
      ]
    },
    "603": {
      "op": "intc_1 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "604": {
      "block": "dynamic_array_concat_dynamic_element_for_header@1",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "606": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%0#0"
      ]
    },
    "608": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "609": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@4",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "612": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "614": {
      "op": "frame_dig 4",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "616": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "head_offset#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "617": {
      "op": "cover 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "619": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "620": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "622": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%1#0"
      ]
    },
    "623": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%2#0"
      ]
    },
    "624": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "627": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%3#0",
        "new_head#0"
      ]
    },
    "629": {
      "op": "swap",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0",
        "tmp%3#0"
      ]
    },
    "630": {
      "op": "concat",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "631": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "633": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "634": {
      "op": "+",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "635": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "637": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "640": {
      "block": "dynamic_array_concat_dynamic_element_after_for@4",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "642": {
      "op": "len",
      "defined_out": [
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "item_offset_adjustment#2"
      ]
    },
    "643": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "645": {
      "op": "intc_1 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "646": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "648": {
      "block": "dynamic_array_concat_dynamic_element_for_header@5",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "650": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "652": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "head_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "continue_looping%1#0"
      ]
    },
    "653": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@8",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "656": {
      "op": "frame_dig -1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "658": {
      "op": "frame_dig 4",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "660": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "head_offset#0 (copy)",
        "item_offset_adjustment#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "661": {
      "op": "cover 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "663": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "664": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#2"
      ]
    },
    "666": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "tmp%5#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "667": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "tmp%6#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%6#0"
      ]
    },
    "668": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "tmp%7#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%7#0"
      ]
    },
    "671": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%7#0",
        "new_head#0"
      ]
    },
    "673": {
      "op": "swap",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0",
        "tmp%7#0"
      ]
    },
    "674": {
      "op": "concat",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "675": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "677": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "678": {
      "op": "+",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "679": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "681": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "684": {
      "block": "dynamic_array_concat_dynamic_element_after_for@8",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_items_count#0 (copy)"
      ]
    },
    "686": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "688": {
      "op": "+",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "689": {
      "op": "itob",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%9#0"
      ]
    },
    "690": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "693": {
      "op": "frame_dig 1",
      "defined_out": [
        "new_head#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%10#0",
        "new_head#0"
      ]
    },
    "695": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "696": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "698": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "array_head_and_tail#0 (copy)",
        "tmp%0#0"
      ]
    },
    "700": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "array_head_and_tail#0 (copy)",
        "tmp%0#0",
        "item_offset_adjustment#2"
      ]
    },
    "702": {
      "op": "substring3",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%11#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "tmp%14#0"
      ]
    },
    "703": {
      "op": "concat",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "704": {
      "op": "frame_dig -1",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "706": {
      "op": "len",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "707": {
      "op": "frame_dig -1",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%17#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "709": {
      "op": "frame_dig 2",
      "defined_out": [
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%17#0",
        "new_head_and_tail#0 (copy)",
        "item_offset_adjustment#0"
      ]
    },
    "711": {
      "op": "uncover 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "new_head_and_tail#0 (copy)",
        "item_offset_adjustment#0",
        "tmp%17#0"
      ]
    },
    "713": {
      "op": "substring3",
      "defined_out": [
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%18#0"
      ]
    },
    "714": {
      "op": "concat",
      "defined_out": [
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%19#0"
      ]
    },
    "715": {
      "op": "frame_bury 0"
    },
    "717": {
      "retsub": true,
      "op": "retsub"
    },
    "718": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_only",
      "params": {},
      "block": "admin_only",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "720": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "721": {
      "op": "bytec_3 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "722": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "723": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "724": {
      "op": "==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "725": {
      "op": "bnz admin_only_after_if_else@3",
      "stack_out": []
    },
    "728": {
      "op": "bytec 7 // \"ERR:UNAUTH\"",
      "defined_out": [
        "\"ERR:UNAUTH\""
      ],
      "stack_out": [
        "\"ERR:UNAUTH\""
      ]
    },
    "730": {
      "op": "log",
      "stack_out": []
    },
    "731": {
      "op": "err"
    },
    "732": {
      "block": "admin_only_after_if_else@3",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "733": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.change_admin",
      "params": {
        "new_admin#0": "bytes"
      },
      "block": "change_admin",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "736": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_only",
      "op": "callsub admin_only"
    },
    "739": {
      "op": "bytec_3 // \"admin\"",
      "defined_out": [
        "\"admin\""
      ],
      "stack_out": [
        "\"admin\""
      ]
    },
    "740": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"admin\"",
        "new_admin#0 (copy)"
      ],
      "stack_out": [
        "\"admin\"",
        "new_admin#0 (copy)"
      ]
    },
    "742": {
      "op": "app_global_put",
      "stack_out": []
    },
    "743": {
      "retsub": true,
      "op": "retsub"
    },
    "744": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.add_label",
      "params": {
        "id#0": "bytes",
        "name#0": "bytes"
      },
      "block": "add_label",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "747": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_only",
      "op": "callsub admin_only"
    },
    "750": {
      "op": "frame_dig -2",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "752": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "753": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "755": {
      "op": "bz add_label_after_if_else@3",
      "stack_out": []
    },
    "758": {
      "op": "bytec 5 // \"ERR:EXISTS\"",
      "defined_out": [
        "\"ERR:EXISTS\""
      ],
      "stack_out": [
        "\"ERR:EXISTS\""
      ]
    },
    "760": {
      "op": "log",
      "stack_out": []
    },
    "761": {
      "op": "err"
    },
    "762": {
      "block": "add_label_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "764": {
      "op": "len",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "765": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "2"
      ]
    },
    "766": {
      "op": "==",
      "defined_out": [
        "cond#1"
      ],
      "stack_out": [
        "cond#1"
      ]
    },
    "767": {
      "op": "bnz add_label_after_if_else@7",
      "stack_out": []
    },
    "770": {
      "op": "bytec 8 // \"ERR:LENGTH\"",
      "defined_out": [
        "\"ERR:LENGTH\""
      ],
      "stack_out": [
        "\"ERR:LENGTH\""
      ]
    },
    "772": {
      "op": "log",
      "stack_out": []
    },
    "773": {
      "op": "err"
    },
    "774": {
      "block": "add_label_after_if_else@7",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "name#0 (copy)"
      ],
      "stack_out": [
        "name#0 (copy)"
      ]
    },
    "776": {
      "op": "len",
      "defined_out": [
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0"
      ]
    },
    "777": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0"
      ],
      "stack_out": [
        "as_bytes%0#0"
      ]
    },
    "778": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0"
      ],
      "stack_out": [
        "length_uint16%0#0"
      ]
    },
    "781": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_uint16%0#0",
        "name#0 (copy)"
      ]
    },
    "783": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "784": {
      "op": "pushbytes 0x001200000000000000000000000000000000",
      "defined_out": [
        "0x001200000000000000000000000000000000",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x001200000000000000000000000000000000"
      ]
    },
    "804": {
      "op": "swap",
      "stack_out": [
        "0x001200000000000000000000000000000000",
        "encoded_value%0#0"
      ]
    },
    "805": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0"
      ]
    },
    "806": {
      "op": "frame_dig -2",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "id#0 (copy)"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "id#0 (copy)"
      ]
    },
    "808": {
      "op": "box_del",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "{box_del}"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "{box_del}"
      ]
    },
    "809": {
      "op": "pop",
      "stack_out": [
        "encoded_tuple_buffer%4#0"
      ]
    },
    "810": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "id#0 (copy)"
      ]
    },
    "812": {
      "op": "swap",
      "stack_out": [
        "id#0 (copy)",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "813": {
      "op": "box_put",
      "stack_out": []
    },
    "814": {
      "retsub": true,
      "op": "retsub"
    },
    "815": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_label",
      "params": {
        "id#0": "bytes"
      },
      "block": "remove_label",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "818": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_only",
      "op": "callsub admin_only"
    },
    "821": {
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "823": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "824": {
      "op": "bury 1",
      "stack_out": [
        "cond#0"
      ]
    },
    "826": {
      "op": "bnz remove_label_after_if_else@3",
      "stack_out": []
    },
    "829": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "\"ERR:NOEXIST\""
      ]
    },
    "830": {
      "op": "log",
      "stack_out": []
    },
    "831": {
      "op": "err"
    },
    "832": {
      "block": "remove_label_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "834": {
      "op": "len",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "835": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "2"
      ]
    },
    "836": {
      "op": "==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "837": {
      "op": "bnz remove_label_after_if_else@7",
      "stack_out": []
    },
    "840": {
      "op": "bytec 8 // \"ERR:LENGTH\"",
      "defined_out": [
        "\"ERR:LENGTH\""
      ],
      "stack_out": [
        "\"ERR:LENGTH\""
      ]
    },
    "842": {
      "op": "log",
      "stack_out": []
    },
    "843": {
      "op": "err"
    },
    "844": {
      "block": "remove_label_after_if_else@7",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "846": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "847": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "848": {
      "error": "Index access is out of bounds",
      "op": "extract 2 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "851": {
      "op": "bytec 9 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "0x0000000000000000"
      ]
    },
    "853": {
      "op": "b==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "854": {
      "op": "bnz remove_label_after_if_else@11",
      "stack_out": []
    },
    "857": {
      "op": "bytec 10 // \"ERR:NOEMPTY\"",
      "defined_out": [
        "\"ERR:NOEMPTY\""
      ],
      "stack_out": [
        "\"ERR:NOEMPTY\""
      ]
    },
    "859": {
      "op": "log",
      "stack_out": []
    },
    "860": {
      "op": "err"
    },
    "861": {
      "block": "remove_label_after_if_else@11",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "863": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "864": {
      "op": "pop",
      "stack_out": []
    },
    "865": {
      "retsub": true,
      "op": "retsub"
    },
    "866": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_label",
      "params": {
        "id#0": "bytes"
      },
      "block": "get_label",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "869": {
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "871": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "872": {
      "op": "bury 1",
      "stack_out": [
        "cond#0"
      ]
    },
    "874": {
      "op": "bnz get_label_after_if_else@3",
      "stack_out": []
    },
    "877": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "\"ERR:NOEXIST\""
      ]
    },
    "878": {
      "op": "log",
      "stack_out": []
    },
    "879": {
      "op": "err"
    },
    "880": {
      "block": "get_label_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "id#0 (copy)"
      ],
      "stack_out": [
        "id#0 (copy)"
      ]
    },
    "882": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "883": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "884": {
      "retsub": true,
      "op": "retsub"
    },
    "885": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.log_labels",
      "params": {
        "ids#0": "bytes"
      },
      "block": "log_labels",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "888": {
      "op": "frame_dig -1",
      "defined_out": [
        "ids#0 (copy)"
      ],
      "stack_out": [
        "ids#0 (copy)"
      ]
    },
    "890": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "ids#0 (copy)"
      ],
      "stack_out": [
        "ids#0 (copy)",
        "0"
      ]
    },
    "891": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0"
      ]
    },
    "892": {
      "op": "intc_1 // 0",
      "defined_out": [
        "_idx#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0"
      ]
    },
    "893": {
      "block": "log_labels_for_header@1",
      "stack_in": [
        "array_length%0#0",
        "_idx#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_idx#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0"
      ]
    },
    "895": {
      "op": "frame_dig 0",
      "defined_out": [
        "_idx#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_length%0#0"
      ]
    },
    "897": {
      "op": "<",
      "defined_out": [
        "_idx#0",
        "array_length%0#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "continue_looping%0#0"
      ]
    },
    "898": {
      "op": "bz log_labels_after_for@4",
      "stack_out": [
        "array_length%0#0",
        "_idx#0"
      ]
    },
    "901": {
      "op": "frame_dig -1",
      "defined_out": [
        "_idx#0",
        "array_length%0#0",
        "ids#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "ids#0 (copy)"
      ]
    },
    "903": {
      "op": "extract 2 0",
      "defined_out": [
        "_idx#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "array_head_and_tail%0#0"
      ]
    },
    "906": {
      "op": "frame_dig 1",
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "_idx#0"
      ]
    },
    "908": {
      "op": "dup",
      "defined_out": [
        "_idx#0",
        "_idx#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "_idx#0 (copy)",
        "_idx#0 (copy)"
      ]
    },
    "909": {
      "op": "cover 2",
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "_idx#0 (copy)"
      ]
    },
    "911": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "_idx#0",
        "_idx#0 (copy)",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "_idx#0 (copy)",
        "2"
      ]
    },
    "912": {
      "op": "*",
      "defined_out": [
        "_idx#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "913": {
      "op": "dig 1",
      "defined_out": [
        "_idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "item_offset_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "915": {
      "op": "swap",
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "916": {
      "op": "extract_uint16",
      "defined_out": [
        "_idx#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "917": {
      "op": "dup2",
      "defined_out": [
        "_idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset%0#0 (copy)"
      ]
    },
    "918": {
      "op": "extract_uint16",
      "defined_out": [
        "_idx#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0"
      ]
    },
    "919": {
      "op": "intc_2 // 2",
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0",
        "2"
      ]
    },
    "920": {
      "op": "+",
      "defined_out": [
        "_idx#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_head_tail_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_head_tail_length%0#0"
      ]
    },
    "921": {
      "op": "extract3",
      "defined_out": [
        "_idx#0",
        "array_length%0#0",
        "label_id#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "label_id#0"
      ]
    },
    "922": {
      "op": "extract 2 0",
      "defined_out": [
        "_idx#0",
        "array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "tmp%0#0"
      ]
    },
    "925": {
      "op": "box_get",
      "defined_out": [
        "_idx#0",
        "array_length%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "926": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "maybe_value%0#0"
      ]
    },
    "927": {
      "op": "log",
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0"
      ]
    },
    "928": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "_idx#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0",
        "1"
      ]
    },
    "929": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "_idx#0",
        "_idx#0"
      ]
    },
    "930": {
      "op": "frame_bury 1",
      "defined_out": [
        "_idx#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "_idx#0"
      ]
    },
    "932": {
      "op": "b log_labels_for_header@1"
    },
    "935": {
      "block": "log_labels_after_for@4",
      "stack_in": [
        "array_length%0#0",
        "_idx#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "936": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_or_operator_only",
      "params": {
        "label#0": "bytes"
      },
      "block": "admin_or_operator_only",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "939": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "941": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "942": {
      "op": "bytec_3 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "943": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "944": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "945": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "946": {
      "op": "bz admin_or_operator_only_after_if_else@2",
      "stack_out": []
    },
    "949": {
      "retsub": true,
      "op": "retsub"
    },
    "950": {
      "block": "admin_or_operator_only_after_if_else@2",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "952": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.operator_only",
      "op": "callsub operator_only",
      "stack_out": []
    },
    "955": {
      "retsub": true,
      "op": "retsub"
    },
    "956": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.operator_only",
      "params": {
        "label#0": "bytes"
      },
      "block": "operator_only",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "959": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "961": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "label#0 (copy)"
      ]
    },
    "963": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_label_index",
      "op": "callsub get_operator_label_index",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "966": {
      "op": "intc 4 // 4294967296",
      "defined_out": [
        "4294967296",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "4294967296"
      ]
    },
    "968": {
      "op": "!=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "969": {
      "op": "bz operator_only_bool_false@3",
      "stack_out": []
    },
    "972": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "974": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%3#0",
        "label#0 (copy)"
      ]
    },
    "976": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_label_index",
      "op": "callsub get_operator_label_index",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "979": {
      "op": "intc_3 // 4294967295",
      "defined_out": [
        "4294967295",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "4294967295"
      ]
    },
    "980": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "981": {
      "op": "bz operator_only_bool_false@3",
      "stack_out": []
    },
    "984": {
      "op": "intc_0 // 1",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "985": {
      "block": "operator_only_bool_merge@4",
      "stack_in": [
        "cond#0"
      ],
      "op": "bnz operator_only_after_if_else@7",
      "defined_out": [],
      "stack_out": []
    },
    "988": {
      "op": "bytec 7 // \"ERR:UNAUTH\"",
      "defined_out": [
        "\"ERR:UNAUTH\""
      ],
      "stack_out": [
        "\"ERR:UNAUTH\""
      ]
    },
    "990": {
      "op": "log",
      "stack_out": []
    },
    "991": {
      "op": "err"
    },
    "992": {
      "block": "operator_only_after_if_else@7",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "993": {
      "block": "operator_only_bool_false@3",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "994": {
      "op": "b operator_only_bool_merge@4"
    },
    "997": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_label_index",
      "params": {
        "operator#0": "bytes",
        "label#0": "bytes"
      },
      "block": "get_operator_label_index",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1000": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1001": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0"
      ]
    },
    "1002": {
      "op": "dup",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1003": {
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "operator#0 (copy)"
      ]
    },
    "1005": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1006": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%0#0"
      ]
    },
    "1008": {
      "op": "bnz get_operator_label_index_after_if_else@2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1011": {
      "op": "intc 4 // 4294967296",
      "defined_out": [
        "4294967296"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "4294967296"
      ]
    },
    "1013": {
      "op": "frame_bury 0"
    },
    "1015": {
      "retsub": true,
      "op": "retsub"
    },
    "1016": {
      "block": "get_operator_label_index_after_if_else@2",
      "stack_in": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "operator#0 (copy)"
      ]
    },
    "1018": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1019": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ]
    },
    "1020": {
      "op": "dup",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "1021": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ]
    },
    "1023": {
      "op": "frame_bury 0",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1025": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ]
    },
    "1026": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "1027": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_length%0#0"
      ]
    },
    "1028": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1030": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1031": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1033": {
      "block": "get_operator_label_index_for_header@3",
      "stack_in": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1035": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0",
        "array_length%0#0"
      ]
    },
    "1037": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "continue_looping%0#0"
      ]
    },
    "1038": {
      "op": "bz get_operator_label_index_after_for@8",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1041": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ]
    },
    "1043": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1046": {
      "op": "frame_dig 2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0"
      ]
    },
    "1048": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0",
        "2"
      ]
    },
    "1049": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "1050": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1052": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "1053": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1054": {
      "op": "dup2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset%0#0 (copy)"
      ]
    },
    "1055": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_length%0#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0"
      ]
    },
    "1056": {
      "op": "intc_2 // 2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0",
        "2"
      ]
    },
    "1057": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_head_tail_length%0#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_head_tail_length%0#0"
      ]
    },
    "1058": {
      "op": "extract3",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "stored_label#0"
      ]
    },
    "1059": {
      "op": "extract 2 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%2#0"
      ]
    },
    "1062": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label#0 (copy)",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%2#0",
        "label#0 (copy)"
      ]
    },
    "1064": {
      "op": "==",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%3#0"
      ]
    },
    "1065": {
      "op": "bz get_operator_label_index_after_if_else@6",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1068": {
      "op": "frame_dig 2",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1070": {
      "op": "frame_bury 0"
    },
    "1072": {
      "retsub": true,
      "op": "retsub"
    },
    "1073": {
      "block": "get_operator_label_index_after_if_else@6",
      "stack_in": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1075": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0",
        "1"
      ]
    },
    "1076": {
      "op": "+",
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1077": {
      "op": "frame_bury 2",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1079": {
      "op": "b get_operator_label_index_for_header@3"
    },
    "1082": {
      "block": "get_operator_label_index_after_for@8",
      "stack_in": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "intc_3 // 4294967295",
      "defined_out": [
        "4294967295"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "array_length%0#0",
        "idx#0",
        "4294967295"
      ]
    },
    "1083": {
      "op": "frame_bury 0"
    },
    "1085": {
      "retsub": true,
      "op": "retsub"
    },
    "1086": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.add_operator_to_label",
      "params": {
        "operator#0": "bytes",
        "label#0": "bytes"
      },
      "block": "add_operator_to_label",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1089": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "1091": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_or_operator_only",
      "op": "callsub admin_or_operator_only",
      "stack_out": []
    },
    "1094": {
      "op": "frame_dig -1",
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "1096": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "1097": {
      "op": "bury 1",
      "stack_out": [
        "cond#0"
      ]
    },
    "1099": {
      "op": "bnz add_operator_to_label_after_if_else@10",
      "stack_out": []
    },
    "1102": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "\"ERR:NOEXIST\""
      ]
    },
    "1103": {
      "op": "log",
      "stack_out": []
    },
    "1104": {
      "op": "err"
    },
    "1105": {
      "block": "add_operator_to_label_after_if_else@10",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "1107": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1108": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "1110": {
      "op": "bz add_operator_to_label_else_body@2",
      "stack_out": []
    },
    "1113": {
      "op": "frame_dig -2",
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "1115": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "operator#0 (copy)",
        "label#0 (copy)"
      ]
    },
    "1117": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_label_index",
      "op": "callsub get_operator_label_index",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1120": {
      "op": "intc_3 // 4294967295",
      "defined_out": [
        "4294967295",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "4294967295"
      ]
    },
    "1121": {
      "op": "==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "1122": {
      "op": "bnz add_operator_to_label_after_if_else@6",
      "stack_out": []
    },
    "1125": {
      "op": "bytec 5 // \"ERR:EXISTS\"",
      "defined_out": [
        "\"ERR:EXISTS\""
      ],
      "stack_out": [
        "\"ERR:EXISTS\""
      ]
    },
    "1127": {
      "op": "log",
      "stack_out": []
    },
    "1128": {
      "op": "err"
    },
    "1129": {
      "block": "add_operator_to_label_after_if_else@6",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "1131": {
      "op": "box_get",
      "defined_out": [
        "existing#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "existing#0",
        "maybe_exists%2#0"
      ]
    },
    "1132": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "existing#0"
      ]
    },
    "1133": {
      "op": "frame_dig -1",
      "defined_out": [
        "existing#0",
        "label#0 (copy)"
      ],
      "stack_out": [
        "existing#0",
        "label#0 (copy)"
      ]
    },
    "1135": {
      "op": "len",
      "defined_out": [
        "existing#0",
        "length%0#0"
      ],
      "stack_out": [
        "existing#0",
        "length%0#0"
      ]
    },
    "1136": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "existing#0"
      ],
      "stack_out": [
        "existing#0",
        "as_bytes%0#0"
      ]
    },
    "1137": {
      "op": "extract 6 2",
      "defined_out": [
        "existing#0",
        "length_uint16%0#0"
      ],
      "stack_out": [
        "existing#0",
        "length_uint16%0#0"
      ]
    },
    "1140": {
      "op": "frame_dig -1",
      "stack_out": [
        "existing#0",
        "length_uint16%0#0",
        "label#0 (copy)"
      ]
    },
    "1142": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "existing#0"
      ],
      "stack_out": [
        "existing#0",
        "encoded_value%0#0"
      ]
    },
    "1143": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "encoded_value%0#0",
        "existing#0"
      ],
      "stack_out": [
        "existing#0",
        "encoded_value%0#0",
        "1"
      ]
    },
    "1144": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "stack_out": [
        "existing#0"
      ]
    },
    "1147": {
      "op": "frame_dig -2",
      "stack_out": [
        "existing#0",
        "operator#0 (copy)"
      ]
    },
    "1149": {
      "op": "box_del",
      "defined_out": [
        "existing#0",
        "{box_del}"
      ],
      "stack_out": [
        "existing#0",
        "{box_del}"
      ]
    },
    "1150": {
      "op": "pop",
      "stack_out": [
        "existing#0"
      ]
    },
    "1151": {
      "op": "frame_dig -2",
      "stack_out": [
        "existing#0",
        "operator#0 (copy)"
      ]
    },
    "1153": {
      "op": "swap",
      "stack_out": [
        "operator#0 (copy)",
        "existing#0"
      ]
    },
    "1154": {
      "op": "box_put",
      "stack_out": []
    },
    "1155": {
      "block": "add_operator_to_label_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "1157": {
      "op": "box_get",
      "defined_out": [
        "label_descriptor#0",
        "maybe_exists%3#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_exists%3#0"
      ]
    },
    "1158": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "label_descriptor#0"
      ]
    },
    "1159": {
      "op": "dup",
      "defined_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ]
    },
    "1160": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)",
        "10"
      ]
    },
    "1162": {
      "op": "extract_uint64",
      "defined_out": [
        "label_descriptor#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "tmp%9#0"
      ]
    },
    "1163": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "label_descriptor#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "tmp%9#0",
        "1"
      ]
    },
    "1164": {
      "op": "+",
      "defined_out": [
        "label_descriptor#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "to_encode%0#0"
      ]
    },
    "1165": {
      "op": "itob",
      "defined_out": [
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ]
    },
    "1166": {
      "op": "replace2 10",
      "stack_out": [
        "label_descriptor#0"
      ]
    },
    "1168": {
      "op": "frame_dig -1",
      "stack_out": [
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "1170": {
      "op": "box_del",
      "defined_out": [
        "label_descriptor#0",
        "{box_del}"
      ],
      "stack_out": [
        "label_descriptor#0",
        "{box_del}"
      ]
    },
    "1171": {
      "op": "pop",
      "stack_out": [
        "label_descriptor#0"
      ]
    },
    "1172": {
      "op": "frame_dig -1",
      "stack_out": [
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "1174": {
      "op": "swap",
      "stack_out": [
        "label#0 (copy)",
        "label_descriptor#0"
      ]
    },
    "1175": {
      "op": "box_put",
      "stack_out": []
    },
    "1176": {
      "retsub": true,
      "op": "retsub"
    },
    "1177": {
      "block": "add_operator_to_label_else_body@2",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label#0 (copy)"
      ]
    },
    "1179": {
      "op": "len",
      "defined_out": [
        "length%1#0"
      ],
      "stack_out": [
        "length%1#0"
      ]
    },
    "1180": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0"
      ],
      "stack_out": [
        "as_bytes%1#0"
      ]
    },
    "1181": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%1#0"
      ],
      "stack_out": [
        "length_uint16%1#0"
      ]
    },
    "1184": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_uint16%1#0",
        "label#0 (copy)"
      ]
    },
    "1186": {
      "op": "concat",
      "defined_out": [
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0"
      ]
    },
    "1187": {
      "op": "bytec 6 // 0x0002",
      "defined_out": [
        "0x0002",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "0x0002"
      ]
    },
    "1189": {
      "op": "swap",
      "stack_out": [
        "0x0002",
        "encoded_value%1#0"
      ]
    },
    "1190": {
      "op": "concat",
      "defined_out": [
        "result%1#0"
      ],
      "stack_out": [
        "result%1#0"
      ]
    },
    "1191": {
      "op": "bytec 11 // 0x0001",
      "defined_out": [
        "0x0001",
        "result%1#0"
      ],
      "stack_out": [
        "result%1#0",
        "0x0001"
      ]
    },
    "1193": {
      "op": "swap",
      "stack_out": [
        "0x0001",
        "result%1#0"
      ]
    },
    "1194": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0"
      ]
    },
    "1195": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_data%0#0",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "array_data%0#0",
        "operator#0 (copy)"
      ]
    },
    "1197": {
      "op": "box_del",
      "defined_out": [
        "array_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "array_data%0#0",
        "{box_del}"
      ]
    },
    "1198": {
      "op": "pop",
      "stack_out": [
        "array_data%0#0"
      ]
    },
    "1199": {
      "op": "frame_dig -2",
      "stack_out": [
        "array_data%0#0",
        "operator#0 (copy)"
      ]
    },
    "1201": {
      "op": "swap",
      "stack_out": [
        "operator#0 (copy)",
        "array_data%0#0"
      ]
    },
    "1202": {
      "op": "box_put",
      "stack_out": []
    },
    "1203": {
      "op": "b add_operator_to_label_after_if_else@3"
    },
    "1206": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_operator_from_label",
      "params": {
        "operator#0": "bytes",
        "label#0": "bytes"
      },
      "block": "remove_operator_from_label",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1209": {
      "op": "intc_1 // 0",
      "stack_out": [
        "label_descriptor#0"
      ]
    },
    "1210": {
      "op": "dupn 4",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0"
      ]
    },
    "1212": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0"
      ]
    },
    "1213": {
      "op": "dupn 2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1215": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label#0 (copy)"
      ]
    },
    "1217": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.admin_or_operator_only",
      "op": "callsub admin_or_operator_only",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1220": {
      "op": "frame_dig -1",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label#0 (copy)"
      ]
    },
    "1222": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "1223": {
      "op": "bury 1",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "1225": {
      "op": "bnz remove_operator_from_label_after_if_else@28",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1228": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "1229": {
      "op": "log",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1230": {
      "op": "err"
    },
    "1231": {
      "block": "remove_operator_from_label_after_if_else@28",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1233": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%1#0",
        "cond#0"
      ]
    },
    "1234": {
      "op": "bury 1",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "1236": {
      "op": "bnz remove_operator_from_label_after_if_else@32",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1239": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "1240": {
      "op": "log",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1241": {
      "op": "err"
    },
    "1242": {
      "block": "remove_operator_from_label_after_if_else@32",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1244": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)",
        "label#0 (copy)"
      ]
    },
    "1246": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_label_index",
      "op": "callsub get_operator_label_index",
      "defined_out": [
        "label_idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0"
      ]
    },
    "1249": {
      "op": "dup",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0",
        "label_idx#0"
      ]
    },
    "1250": {
      "op": "frame_bury 7",
      "defined_out": [
        "label_idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0"
      ]
    },
    "1252": {
      "op": "intc_3 // 4294967295",
      "defined_out": [
        "4294967295",
        "label_idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0",
        "4294967295"
      ]
    },
    "1253": {
      "op": "!=",
      "defined_out": [
        "label_idx#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%2#0"
      ]
    },
    "1254": {
      "op": "bz remove_operator_from_label_bool_false@3",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1257": {
      "op": "frame_dig 7",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0"
      ]
    },
    "1259": {
      "op": "intc 4 // 4294967296",
      "defined_out": [
        "4294967296",
        "label_idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_idx#0",
        "4294967296"
      ]
    },
    "1261": {
      "op": "!=",
      "defined_out": [
        "label_idx#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%3#0"
      ]
    },
    "1262": {
      "op": "bz remove_operator_from_label_bool_false@3",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1265": {
      "op": "intc_0 // 1",
      "defined_out": [
        "cond#0",
        "label_idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "1266": {
      "block": "remove_operator_from_label_bool_merge@4",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ],
      "op": "bnz remove_operator_from_label_after_if_else@24",
      "defined_out": [],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1269": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "1270": {
      "op": "log",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1271": {
      "op": "err"
    },
    "1272": {
      "block": "remove_operator_from_label_after_if_else@24",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label#0 (copy)"
      ]
    },
    "1274": {
      "op": "box_get",
      "defined_out": [
        "label_descriptor#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "maybe_exists%2#0"
      ]
    },
    "1275": {
      "op": "swap",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_exists%2#0",
        "label_descriptor#0"
      ]
    },
    "1276": {
      "op": "dup",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_exists%2#0",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ]
    },
    "1277": {
      "op": "cover 2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "maybe_exists%2#0",
        "label_descriptor#0"
      ]
    },
    "1279": {
      "op": "frame_bury 0",
      "defined_out": [
        "label_descriptor#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "maybe_exists%2#0"
      ]
    },
    "1281": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0"
      ]
    },
    "1282": {
      "error": "Index access is out of bounds",
      "op": "extract 10 8 // on error: Index access is out of bounds",
      "defined_out": [
        "label_descriptor#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1285": {
      "op": "pushbytes 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "label_descriptor#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "reinterpret_biguint%0#0",
        "0x0000000000000001"
      ]
    },
    "1295": {
      "op": "b>",
      "defined_out": [
        "label_descriptor#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%5#0"
      ]
    },
    "1296": {
      "op": "bnz remove_operator_from_label_bool_true@6",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1299": {
      "op": "frame_dig 0",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0"
      ]
    },
    "1301": {
      "error": "Index access is out of bounds",
      "op": "extract 2 8 // on error: Index access is out of bounds",
      "defined_out": [
        "label_descriptor#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "1304": {
      "op": "bytec 9 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "label_descriptor#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "reinterpret_biguint%2#0",
        "0x0000000000000000"
      ]
    },
    "1306": {
      "op": "b==",
      "defined_out": [
        "label_descriptor#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%6#0"
      ]
    },
    "1307": {
      "op": "bz remove_operator_from_label_bool_false@7",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1310": {
      "block": "remove_operator_from_label_bool_true@6",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "1311": {
      "block": "remove_operator_from_label_bool_merge@8",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ],
      "op": "bnz remove_operator_from_label_after_if_else@20",
      "defined_out": [],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1314": {
      "op": "bytec 10 // \"ERR:NOEMPTY\"",
      "defined_out": [
        "\"ERR:NOEMPTY\""
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "\"ERR:NOEMPTY\""
      ]
    },
    "1316": {
      "op": "log",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1317": {
      "op": "err"
    },
    "1318": {
      "block": "remove_operator_from_label_after_if_else@20",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "label_descriptor#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0"
      ]
    },
    "1320": {
      "op": "dup",
      "defined_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ]
    },
    "1321": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "label_descriptor#0 (copy)",
        "10"
      ]
    },
    "1323": {
      "op": "extract_uint64",
      "defined_out": [
        "label_descriptor#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "tmp%8#0"
      ]
    },
    "1324": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "label_descriptor#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "tmp%8#0",
        "1"
      ]
    },
    "1325": {
      "op": "-",
      "defined_out": [
        "label_descriptor#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "to_encode%0#0"
      ]
    },
    "1326": {
      "op": "itob",
      "defined_out": [
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ]
    },
    "1327": {
      "op": "replace2 10",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0"
      ]
    },
    "1329": {
      "op": "frame_dig -1",
      "defined_out": [
        "label#0 (copy)",
        "label_descriptor#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "1331": {
      "op": "box_del",
      "defined_out": [
        "label_descriptor#0",
        "{box_del}"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "{box_del}"
      ]
    },
    "1332": {
      "op": "pop",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0"
      ]
    },
    "1333": {
      "op": "frame_dig -1",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "1335": {
      "op": "swap",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "label#0 (copy)",
        "label_descriptor#0"
      ]
    },
    "1336": {
      "op": "box_put",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1337": {
      "op": "frame_dig -2",
      "defined_out": [
        "label_descriptor#0",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1339": {
      "op": "box_get",
      "defined_out": [
        "label_descriptor#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1340": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0"
      ]
    },
    "1341": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "label_descriptor#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "1342": {
      "op": "extract_uint16",
      "defined_out": [
        "label_descriptor#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%11#0"
      ]
    },
    "1343": {
      "op": "intc_0 // 1",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%11#0",
        "1"
      ]
    },
    "1344": {
      "op": "==",
      "defined_out": [
        "label_descriptor#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%12#0"
      ]
    },
    "1345": {
      "op": "bz remove_operator_from_label_else_body@10",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1348": {
      "op": "frame_dig -2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1350": {
      "op": "box_del",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "{box_del}"
      ]
    },
    "1351": {
      "op": "pop",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1352": {
      "retsub": true,
      "op": "retsub"
    },
    "1353": {
      "block": "remove_operator_from_label_else_body@10",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0"
      ]
    },
    "1354": {
      "op": "frame_bury 2",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1356": {
      "op": "frame_dig -2",
      "defined_out": [
        "next_list#0",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1358": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1359": {
      "op": "swap",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ]
    },
    "1360": {
      "op": "dup",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "maybe_value%4#0 (copy)"
      ]
    },
    "1361": {
      "op": "cover 2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ]
    },
    "1363": {
      "op": "frame_bury 1",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1365": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0"
      ]
    },
    "1366": {
      "op": "intc_1 // 0",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "0"
      ]
    },
    "1367": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%4#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "array_length%0#0"
      ]
    },
    "1368": {
      "op": "frame_bury 5",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%4#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1370": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%4#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "1371": {
      "op": "frame_bury 6",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%4#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1373": {
      "block": "remove_operator_from_label_for_header@11",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "1375": {
      "op": "frame_dig 5",
      "defined_out": [
        "array_length%0#0",
        "idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_length%0#0"
      ]
    },
    "1377": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "idx#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "continue_looping%0#0"
      ]
    },
    "1378": {
      "op": "bz remove_operator_from_label_after_for@16",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1381": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0"
      ]
    },
    "1383": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1386": {
      "op": "frame_dig 6",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "array_head_and_tail%0#0",
        "idx#0"
      ]
    },
    "1388": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "idx#0 (copy)",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "array_head_and_tail%0#0",
        "idx#0 (copy)",
        "idx#0 (copy)"
      ]
    },
    "1389": {
      "op": "cover 2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0 (copy)"
      ]
    },
    "1391": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "idx#0 (copy)",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0 (copy)",
        "2"
      ]
    },
    "1392": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "1393": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1395": {
      "op": "swap",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "1396": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1397": {
      "op": "dup2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset%0#0 (copy)"
      ]
    },
    "1398": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_length%0#0",
        "item_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0"
      ]
    },
    "1399": {
      "op": "intc_2 // 2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0",
        "2"
      ]
    },
    "1400": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_head_tail_length%0#0",
        "item_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_head_tail_length%0#0"
      ]
    },
    "1401": {
      "op": "extract3",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%4#0",
        "stored_label#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "stored_label#0"
      ]
    },
    "1402": {
      "op": "frame_bury 4",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%4#0",
        "stored_label#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "1404": {
      "op": "frame_dig 7",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "stored_label#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1406": {
      "op": "!=",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "stored_label#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%15#0"
      ]
    },
    "1407": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "next_list#9",
        "stored_label#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%15#0",
        "next_list#9"
      ]
    },
    "1409": {
      "op": "frame_bury 3",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "next_list#9",
        "stored_label#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "tmp%15#0"
      ]
    },
    "1411": {
      "op": "bz remove_operator_from_label_after_if_else@14",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1414": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0"
      ]
    },
    "1416": {
      "op": "frame_dig 4",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0",
        "stored_label#0"
      ]
    },
    "1418": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0",
        "stored_label#0",
        "1"
      ]
    },
    "1419": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#9"
      ]
    },
    "1422": {
      "op": "frame_bury 3",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1424": {
      "block": "remove_operator_from_label_after_if_else@14",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "next_list#0"
      ]
    },
    "1426": {
      "op": "frame_bury 2",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1428": {
      "op": "frame_dig 6",
      "defined_out": [
        "idx#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "1430": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "idx#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0",
        "1"
      ]
    },
    "1431": {
      "op": "+",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "idx#0"
      ]
    },
    "1432": {
      "op": "frame_bury 6",
      "defined_out": [
        "idx#0",
        "next_list#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1434": {
      "op": "b remove_operator_from_label_for_header@11"
    },
    "1437": {
      "block": "remove_operator_from_label_after_for@16",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1439": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "{box_del}"
      ]
    },
    "1440": {
      "op": "pop",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1441": {
      "op": "frame_dig -2",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)"
      ]
    },
    "1443": {
      "op": "frame_dig 2",
      "defined_out": [
        "next_list#0",
        "operator#0 (copy)"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "operator#0 (copy)",
        "next_list#0"
      ]
    },
    "1445": {
      "op": "box_put",
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ]
    },
    "1446": {
      "retsub": true,
      "op": "retsub"
    },
    "1447": {
      "block": "remove_operator_from_label_bool_false@7",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "1448": {
      "op": "b remove_operator_from_label_bool_merge@8"
    },
    "1451": {
      "block": "remove_operator_from_label_bool_false@3",
      "stack_in": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "label_descriptor#0",
        "maybe_value%4#0",
        "next_list#0",
        "next_list#9",
        "stored_label#0",
        "array_length%0#0",
        "idx#0",
        "label_idx#0",
        "cond#0"
      ]
    },
    "1452": {
      "op": "b remove_operator_from_label_bool_merge@4"
    },
    "1455": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_operator_labels",
      "params": {
        "operator#0": "bytes"
      },
      "block": "get_operator_labels",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1458": {
      "op": "frame_dig -1",
      "defined_out": [
        "operator#0 (copy)"
      ],
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "1460": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1461": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1463": {
      "op": "bz get_operator_labels_after_if_else@2",
      "stack_out": []
    },
    "1466": {
      "op": "frame_dig -1",
      "stack_out": [
        "operator#0 (copy)"
      ]
    },
    "1468": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1469": {
      "error": "check self.operators entry exists",
      "op": "assert // check self.operators entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1470": {
      "retsub": true,
      "op": "retsub"
    },
    "1471": {
      "block": "get_operator_labels_after_if_else@2",
      "stack_in": [],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "1472": {
      "retsub": true,
      "op": "retsub"
    },
    "1473": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.add_label_to_asset",
      "params": {
        "label#0": "bytes",
        "asset#0": "uint64"
      },
      "block": "add_label_to_asset",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1476": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%1#1"
      ]
    },
    "1477": {
      "op": "dup",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0"
      ]
    },
    "1478": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0"
      ]
    },
    "1479": {
      "op": "dup",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1480": {
      "op": "frame_dig -2",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label#0 (copy)"
      ]
    },
    "1482": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "1483": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "cond#0"
      ]
    },
    "1485": {
      "op": "bnz add_label_to_asset_after_if_else@19",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1488": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "1489": {
      "op": "log",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1490": {
      "op": "err"
    },
    "1491": {
      "block": "add_label_to_asset_after_if_else@19",
      "stack_in": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label#0 (copy)"
      ]
    },
    "1493": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.operator_only",
      "op": "callsub operator_only",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1496": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "asset#0 (copy)"
      ]
    },
    "1498": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "1499": {
      "op": "dup",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "1500": {
      "op": "frame_bury 1",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "1502": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1503": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%1#0"
      ]
    },
    "1505": {
      "op": "bz add_label_to_asset_else_body@2",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1508": {
      "op": "frame_dig 1",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "1510": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#1",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%0#0",
        "maybe_exists%0#1"
      ]
    },
    "1511": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%0#1"
      ]
    },
    "1513": {
      "op": "bnz add_label_to_asset_after_if_else@6",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1516": {
      "op": "intc 4 // 4294967296",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%3#0"
      ]
    },
    "1518": {
      "block": "add_label_to_asset_after_inlined_smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_label_index@12",
      "stack_in": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%3#0"
      ],
      "op": "intc_3 // 4294967295",
      "defined_out": [
        "4294967295",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%3#0",
        "4294967295"
      ]
    },
    "1519": {
      "op": "==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "cond#0"
      ]
    },
    "1520": {
      "op": "bnz add_label_to_asset_after_if_else@15",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1523": {
      "op": "bytec 5 // \"ERR:EXISTS\"",
      "defined_out": [
        "\"ERR:EXISTS\""
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "\"ERR:EXISTS\""
      ]
    },
    "1525": {
      "op": "log",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1526": {
      "op": "err"
    },
    "1527": {
      "block": "add_label_to_asset_after_if_else@15",
      "stack_in": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "1529": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "1530": {
      "op": "box_get",
      "defined_out": [
        "existing#0",
        "maybe_exists%2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "maybe_exists%2#0"
      ]
    },
    "1531": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0"
      ]
    },
    "1532": {
      "op": "frame_dig -2",
      "defined_out": [
        "existing#0",
        "label#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "label#0 (copy)"
      ]
    },
    "1534": {
      "op": "len",
      "defined_out": [
        "existing#0",
        "length%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "length%0#0"
      ]
    },
    "1535": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "existing#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "as_bytes%0#0"
      ]
    },
    "1536": {
      "op": "extract 6 2",
      "defined_out": [
        "existing#0",
        "length_uint16%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "length_uint16%0#0"
      ]
    },
    "1539": {
      "op": "frame_dig -2",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "length_uint16%0#0",
        "label#0 (copy)"
      ]
    },
    "1541": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "existing#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "encoded_value%0#0"
      ]
    },
    "1542": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "encoded_value%0#0",
        "existing#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "encoded_value%0#0",
        "1"
      ]
    },
    "1543": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0"
      ]
    },
    "1546": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "tmp%1#0 (copy)"
      ]
    },
    "1548": {
      "op": "box_del",
      "defined_out": [
        "existing#0",
        "tmp%1#0",
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0",
        "{box_del}"
      ]
    },
    "1549": {
      "op": "pop",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "existing#0"
      ]
    },
    "1550": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1551": {
      "block": "add_label_to_asset_after_if_else@3",
      "stack_in": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label#0 (copy)"
      ]
    },
    "1553": {
      "op": "box_get",
      "defined_out": [
        "label_descriptor#0",
        "maybe_exists%3#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "maybe_exists%3#0"
      ]
    },
    "1554": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0"
      ]
    },
    "1555": {
      "op": "dup",
      "defined_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ]
    },
    "1556": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "label_descriptor#0 (copy)",
        "2"
      ]
    },
    "1557": {
      "op": "extract_uint64",
      "defined_out": [
        "label_descriptor#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "tmp%13#0"
      ]
    },
    "1558": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "label_descriptor#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "tmp%13#0",
        "1"
      ]
    },
    "1559": {
      "op": "+",
      "defined_out": [
        "label_descriptor#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "to_encode%0#0"
      ]
    },
    "1560": {
      "op": "itob",
      "defined_out": [
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ]
    },
    "1561": {
      "op": "replace2 2",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0"
      ]
    },
    "1563": {
      "op": "frame_dig -2",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "1565": {
      "op": "box_del",
      "defined_out": [
        "label_descriptor#0",
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "{box_del}"
      ]
    },
    "1566": {
      "op": "pop",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0"
      ]
    },
    "1567": {
      "op": "frame_dig -2",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "1569": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label#0 (copy)",
        "label_descriptor#0"
      ]
    },
    "1570": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1571": {
      "retsub": true,
      "op": "retsub"
    },
    "1572": {
      "block": "add_label_to_asset_after_if_else@6",
      "stack_in": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "1574": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "maybe_exists%1#0"
      ]
    },
    "1575": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%1#0",
        "maybe_value%1#1"
      ]
    },
    "1576": {
      "op": "dup",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_exists%1#0",
        "maybe_value%1#1",
        "maybe_value%1#1 (copy)"
      ]
    },
    "1577": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "maybe_exists%1#0",
        "maybe_value%1#1"
      ]
    },
    "1579": {
      "op": "frame_bury 0",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "maybe_exists%1#0"
      ]
    },
    "1581": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1"
      ]
    },
    "1582": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "maybe_value%1#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "0"
      ]
    },
    "1583": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%1#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_length%0#0"
      ]
    },
    "1584": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length%0#0",
        "maybe_value%1#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1586": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1587": {
      "op": "frame_bury 3",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1589": {
      "block": "add_label_to_asset_for_header@7",
      "stack_in": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1591": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%0#0",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0",
        "array_length%0#0"
      ]
    },
    "1593": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "continue_looping%0#0"
      ]
    },
    "1594": {
      "op": "bz add_label_to_asset_after_for@11",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1597": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1"
      ]
    },
    "1599": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1602": {
      "op": "frame_dig 3",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0"
      ]
    },
    "1604": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0",
        "2"
      ]
    },
    "1605": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "1606": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1608": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "1609": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1610": {
      "op": "dup2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "array_length%0#0",
        "idx#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset%0#0 (copy)"
      ]
    },
    "1611": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_length%0#0",
        "item_offset%0#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0"
      ]
    },
    "1612": {
      "op": "intc_2 // 2",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0",
        "2"
      ]
    },
    "1613": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "idx#0",
        "item_head_tail_length%0#0",
        "item_offset%0#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_head_tail_length%0#0"
      ]
    },
    "1614": {
      "op": "extract3",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "stored_label#0"
      ]
    },
    "1615": {
      "op": "extract 2 0",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "tmp%4#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%4#1"
      ]
    },
    "1618": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "label#0 (copy)",
        "maybe_value%1#1",
        "tmp%4#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%4#1",
        "label#0 (copy)"
      ]
    },
    "1620": {
      "op": "==",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "tmp%5#1"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%5#1"
      ]
    },
    "1621": {
      "op": "bz add_label_to_asset_after_if_else@10",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1624": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_length%0#0",
        "idx#0",
        "maybe_value%1#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%3#0"
      ]
    },
    "1626": {
      "op": "b add_label_to_asset_after_inlined_smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_label_index@12"
    },
    "1629": {
      "block": "add_label_to_asset_after_if_else@10",
      "stack_in": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1631": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0",
        "1"
      ]
    },
    "1632": {
      "op": "+",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1633": {
      "op": "frame_bury 3",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1635": {
      "op": "b add_label_to_asset_for_header@7"
    },
    "1638": {
      "block": "add_label_to_asset_after_for@11",
      "stack_in": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "intc_3 // 4294967295",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%3#0"
      ]
    },
    "1639": {
      "op": "b add_label_to_asset_after_inlined_smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_label_index@12"
    },
    "1642": {
      "block": "add_label_to_asset_else_body@2",
      "stack_in": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "label#0 (copy)"
      ]
    },
    "1644": {
      "op": "len",
      "defined_out": [
        "length%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "length%1#0"
      ]
    },
    "1645": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "as_bytes%1#0"
      ]
    },
    "1646": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "length_uint16%1#0"
      ]
    },
    "1649": {
      "op": "frame_dig -2",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "length_uint16%1#0",
        "label#0 (copy)"
      ]
    },
    "1651": {
      "op": "concat",
      "defined_out": [
        "encoded_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "encoded_value%1#0"
      ]
    },
    "1652": {
      "op": "bytec 6 // 0x0002",
      "defined_out": [
        "0x0002",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "encoded_value%1#0",
        "0x0002"
      ]
    },
    "1654": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "0x0002",
        "encoded_value%1#0"
      ]
    },
    "1655": {
      "op": "concat",
      "defined_out": [
        "result%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "result%1#0"
      ]
    },
    "1656": {
      "op": "bytec 11 // 0x0001",
      "defined_out": [
        "0x0001",
        "result%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "result%1#0",
        "0x0001"
      ]
    },
    "1658": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "0x0001",
        "result%1#0"
      ]
    },
    "1659": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_data%0#0"
      ]
    },
    "1660": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_data%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_data%0#0",
        "tmp%1#0"
      ]
    },
    "1662": {
      "op": "dup",
      "defined_out": [
        "array_data%0#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_data%0#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "1663": {
      "op": "box_del",
      "defined_out": [
        "array_data%0#0",
        "tmp%1#0",
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_data%0#0",
        "tmp%1#0",
        "{box_del}"
      ]
    },
    "1664": {
      "op": "pop",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "array_data%0#0",
        "tmp%1#0"
      ]
    },
    "1665": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0",
        "tmp%1#0",
        "array_data%0#0"
      ]
    },
    "1666": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%1#1",
        "tmp%1#0",
        "array_length%0#0",
        "idx#0"
      ]
    },
    "1667": {
      "op": "b add_label_to_asset_after_if_else@3"
    },
    "1670": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.remove_label_from_asset",
      "params": {
        "label#0": "bytes",
        "asset#0": "uint64"
      },
      "block": "remove_label_from_asset",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1673": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "1674": {
      "op": "dupn 3",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0"
      ]
    },
    "1676": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0"
      ]
    },
    "1677": {
      "op": "dupn 2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1679": {
      "op": "frame_dig -2",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label#0 (copy)"
      ]
    },
    "1681": {
      "op": "box_len",
      "defined_out": [
        "cond#1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%0#0",
        "cond#1"
      ]
    },
    "1682": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "cond#1"
      ]
    },
    "1684": {
      "op": "bnz remove_label_from_asset_after_if_else@20",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1687": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\""
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "1688": {
      "op": "log",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1689": {
      "op": "err"
    },
    "1690": {
      "block": "remove_label_from_asset_after_if_else@20",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label#0 (copy)"
      ]
    },
    "1692": {
      "callsub": "smart_contracts.asset_labeling.contract.AssetLabeling.operator_only",
      "op": "callsub operator_only",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1695": {
      "op": "intc_1 // 0",
      "defined_out": [
        "found#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "found#0"
      ]
    },
    "1696": {
      "op": "frame_bury 5",
      "defined_out": [
        "found#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1698": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "found#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "asset#0 (copy)"
      ]
    },
    "1700": {
      "op": "itob",
      "defined_out": [
        "found#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "1701": {
      "op": "dup",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "1702": {
      "op": "frame_bury 3",
      "defined_out": [
        "found#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "1704": {
      "op": "box_get",
      "defined_out": [
        "found#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1705": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%1#0"
      ]
    },
    "1706": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "1707": {
      "op": "extract_uint16",
      "defined_out": [
        "found#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%3#0"
      ]
    },
    "1708": {
      "op": "intc_0 // 1",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%3#0",
        "1"
      ]
    },
    "1709": {
      "op": "==",
      "defined_out": [
        "found#0",
        "tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%4#0"
      ]
    },
    "1710": {
      "op": "bz remove_label_from_asset_else_body@5",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1713": {
      "op": "frame_dig 3",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "1715": {
      "op": "box_get",
      "defined_out": [
        "found#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1716": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%2#0"
      ]
    },
    "1717": {
      "op": "dup",
      "defined_out": [
        "found#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)"
      ]
    },
    "1718": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "found#0",
        "maybe_value%2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%2#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1721": {
      "op": "swap",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "maybe_value%2#0"
      ]
    },
    "1722": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "1723": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "found#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ]
    },
    "1724": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1725": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "found#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1726": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "0"
      ]
    },
    "1727": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "found#0",
        "item_offset%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1728": {
      "op": "dup2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "found#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset%0#0 (copy)"
      ]
    },
    "1729": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "found#0",
        "item_length%0#0",
        "item_offset%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0"
      ]
    },
    "1730": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "found#0",
        "item_length%0#0",
        "item_offset%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0",
        "2"
      ]
    },
    "1731": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%0#0",
        "found#0",
        "item_head_tail_length%0#0",
        "item_offset%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_head_tail_length%0#0"
      ]
    },
    "1732": {
      "op": "extract3",
      "defined_out": [
        "found#0",
        "tmp%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%7#0"
      ]
    },
    "1733": {
      "op": "extract 2 0",
      "defined_out": [
        "found#0",
        "tmp%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%8#0"
      ]
    },
    "1736": {
      "op": "frame_dig -2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%8#0",
        "label#0 (copy)"
      ]
    },
    "1738": {
      "op": "==",
      "defined_out": [
        "found#0",
        "tmp%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%9#0"
      ]
    },
    "1739": {
      "op": "bz remove_label_from_asset_else_body@3",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1742": {
      "op": "frame_dig 3",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "1744": {
      "op": "box_del",
      "defined_out": [
        "found#0",
        "tmp%1#0",
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "{box_del}"
      ]
    },
    "1745": {
      "op": "pop",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1746": {
      "op": "intc_0 // 1",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "found#0"
      ]
    },
    "1747": {
      "op": "frame_bury 5",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1749": {
      "block": "remove_label_from_asset_after_if_else@13",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "found#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "found#0"
      ]
    },
    "1751": {
      "op": "bnz remove_label_from_asset_after_if_else@16",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1754": {
      "op": "bytec_0 // \"ERR:NOEXIST\"",
      "defined_out": [
        "\"ERR:NOEXIST\"",
        "found#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "\"ERR:NOEXIST\""
      ]
    },
    "1755": {
      "op": "log",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1756": {
      "op": "err"
    },
    "1757": {
      "block": "remove_label_from_asset_after_if_else@16",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "label#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label#0 (copy)"
      ]
    },
    "1759": {
      "op": "box_get",
      "defined_out": [
        "label_descriptor#0",
        "maybe_exists%4#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "maybe_exists%4#0"
      ]
    },
    "1760": {
      "error": "check self.labels entry exists",
      "op": "assert // check self.labels entry exists",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0"
      ]
    },
    "1761": {
      "op": "dup",
      "defined_out": [
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ]
    },
    "1762": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "label_descriptor#0",
        "label_descriptor#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "label_descriptor#0 (copy)",
        "2"
      ]
    },
    "1763": {
      "op": "extract_uint64",
      "defined_out": [
        "label_descriptor#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "tmp%20#0"
      ]
    },
    "1764": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "label_descriptor#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "tmp%20#0",
        "1"
      ]
    },
    "1765": {
      "op": "-",
      "defined_out": [
        "label_descriptor#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "to_encode%0#0"
      ]
    },
    "1766": {
      "op": "itob",
      "defined_out": [
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "val_as_bytes%0#0"
      ]
    },
    "1767": {
      "op": "replace2 2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0"
      ]
    },
    "1769": {
      "op": "frame_dig -2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "1771": {
      "op": "box_del",
      "defined_out": [
        "label_descriptor#0",
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "{box_del}"
      ]
    },
    "1772": {
      "op": "pop",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0"
      ]
    },
    "1773": {
      "op": "frame_dig -2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label_descriptor#0",
        "label#0 (copy)"
      ]
    },
    "1775": {
      "op": "swap",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "label#0 (copy)",
        "label_descriptor#0"
      ]
    },
    "1776": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1777": {
      "retsub": true,
      "op": "retsub"
    },
    "1778": {
      "block": "remove_label_from_asset_else_body@3",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "found#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "found#0"
      ]
    },
    "1779": {
      "op": "frame_bury 5",
      "defined_out": [
        "found#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1781": {
      "op": "b remove_label_from_asset_after_if_else@13"
    },
    "1784": {
      "block": "remove_label_from_asset_else_body@5",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "next_list#0"
      ]
    },
    "1785": {
      "op": "frame_bury 1",
      "defined_out": [
        "next_list#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1787": {
      "op": "frame_dig 3",
      "defined_out": [
        "next_list#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "1789": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "next_list#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1790": {
      "op": "swap",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ]
    },
    "1791": {
      "op": "dup",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "maybe_value%3#0 (copy)"
      ]
    },
    "1792": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%3#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ]
    },
    "1794": {
      "op": "frame_bury 0",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "next_list#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1796": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%3#0"
      ]
    },
    "1797": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "1798": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%1#0",
        "maybe_value%3#0",
        "next_list#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_length%1#0"
      ]
    },
    "1799": {
      "op": "frame_bury 4",
      "defined_out": [
        "array_length%1#0",
        "maybe_value%3#0",
        "next_list#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1801": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0",
        "next_list#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1802": {
      "op": "frame_bury 6",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0",
        "next_list#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1804": {
      "block": "remove_label_from_asset_for_header@6",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1806": {
      "op": "frame_dig 4",
      "defined_out": [
        "array_length%1#0",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "idx#0",
        "array_length%1#0"
      ]
    },
    "1808": {
      "op": "<",
      "defined_out": [
        "array_length%1#0",
        "continue_looping%0#0",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "continue_looping%0#0"
      ]
    },
    "1809": {
      "op": "bz remove_label_from_asset_after_for@12",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1812": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "maybe_value%3#0"
      ]
    },
    "1814": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0"
      ]
    },
    "1817": {
      "op": "frame_dig 6",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "idx#0"
      ]
    },
    "1819": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "idx#0",
        "2"
      ]
    },
    "1820": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "idx#0",
        "item_offset_offset%1#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "item_offset_offset%1#0"
      ]
    },
    "1821": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_head_and_tail%1#0 (copy)",
        "array_length%1#0",
        "idx#0",
        "item_offset_offset%1#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "item_offset_offset%1#0",
        "array_head_and_tail%1#0 (copy)"
      ]
    },
    "1823": {
      "op": "swap",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "array_head_and_tail%1#0 (copy)",
        "item_offset_offset%1#0"
      ]
    },
    "1824": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "idx#0",
        "item_offset%1#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "1825": {
      "op": "dup2",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_head_and_tail%1#0 (copy)",
        "array_length%1#0",
        "idx#0",
        "item_offset%1#0",
        "item_offset%1#0 (copy)",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "array_head_and_tail%1#0 (copy)",
        "item_offset%1#0 (copy)"
      ]
    },
    "1826": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "idx#0",
        "item_length%1#0",
        "item_offset%1#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "item_length%1#0"
      ]
    },
    "1827": {
      "op": "intc_2 // 2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "item_length%1#0",
        "2"
      ]
    },
    "1828": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "idx#0",
        "item_head_tail_length%1#0",
        "item_offset%1#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "item_head_tail_length%1#0"
      ]
    },
    "1829": {
      "op": "extract3",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "stored_label#0"
      ]
    },
    "1830": {
      "op": "dup",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "stored_label#0",
        "stored_label#0"
      ]
    },
    "1831": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "stored_label#0"
      ]
    },
    "1833": {
      "op": "extract 2 0",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0",
        "stored_label#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%14#0"
      ]
    },
    "1836": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "label#0 (copy)",
        "maybe_value%3#0",
        "stored_label#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%14#0",
        "label#0 (copy)"
      ]
    },
    "1838": {
      "op": "!=",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0",
        "stored_label#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%15#0"
      ]
    },
    "1839": {
      "op": "bz remove_label_from_asset_else_body@9",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1842": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "next_list#0"
      ]
    },
    "1844": {
      "op": "frame_dig 2",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "next_list#0",
        "stored_label#0"
      ]
    },
    "1846": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "next_list#0",
        "stored_label#0",
        "1"
      ]
    },
    "1847": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "next_list#0"
      ]
    },
    "1850": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length%1#0",
        "idx#0",
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1852": {
      "block": "remove_label_from_asset_after_if_else@10",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1854": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "idx#0",
        "1"
      ]
    },
    "1855": {
      "op": "+",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1856": {
      "op": "frame_bury 6",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1858": {
      "op": "b remove_label_from_asset_for_header@6"
    },
    "1861": {
      "block": "remove_label_from_asset_else_body@9",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "found#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "found#0"
      ]
    },
    "1862": {
      "op": "frame_bury 5",
      "defined_out": [
        "found#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1864": {
      "op": "b remove_label_from_asset_after_if_else@10"
    },
    "1867": {
      "block": "remove_label_from_asset_after_for@12",
      "stack_in": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "1869": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "1870": {
      "op": "box_del",
      "defined_out": [
        "tmp%1#0",
        "{box_del}"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0",
        "{box_del}"
      ]
    },
    "1871": {
      "op": "pop",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "1872": {
      "op": "frame_dig 1",
      "defined_out": [
        "next_list#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0",
        "tmp%1#0",
        "next_list#0"
      ]
    },
    "1874": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%3#0",
        "next_list#0",
        "stored_label#0",
        "tmp%1#0",
        "array_length%1#0",
        "found#0",
        "idx#0"
      ]
    },
    "1875": {
      "op": "b remove_label_from_asset_after_if_else@13"
    },
    "1878": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_asset_labels",
      "params": {
        "asset#0": "uint64"
      },
      "block": "get_asset_labels",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1881": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "1883": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1884": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "1885": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1886": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1888": {
      "op": "bz get_asset_labels_after_if_else@2",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1891": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "1893": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1894": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0"
      ]
    },
    "1895": {
      "op": "swap"
    },
    "1896": {
      "retsub": true,
      "op": "retsub"
    },
    "1897": {
      "block": "get_asset_labels_after_if_else@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x0000"
      ]
    },
    "1898": {
      "op": "swap"
    },
    "1899": {
      "retsub": true,
      "op": "retsub"
    },
    "1900": {
      "subroutine": "smart_contracts.asset_labeling.contract.AssetLabeling.get_assets_labels",
      "params": {
        "assets#0": "bytes"
      },
      "block": "get_assets_labels",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1903": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1904": {
      "op": "bytec_2 // 0x0000"
    },
    "1905": {
      "op": "frame_dig -1"
    },
    "1907": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "assets#0 (copy)",
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "assets#0 (copy)",
        "0"
      ]
    },
    "1908": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0"
      ]
    },
    "1909": {
      "op": "intc_1 // 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ]
    },
    "1910": {
      "block": "get_assets_labels_for_header@1",
      "stack_in": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "1912": {
      "op": "frame_dig 2",
      "defined_out": [
        "_i#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "array_length%0#0"
      ]
    },
    "1914": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "1915": {
      "op": "bz get_assets_labels_after_for@7",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ]
    },
    "1918": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "assets#0 (copy)"
      ]
    },
    "1920": {
      "op": "extract 2 0",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1923": {
      "op": "frame_dig 3",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0"
      ]
    },
    "1925": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "_i#0",
        "8"
      ]
    },
    "1927": {
      "op": "*",
      "defined_out": [
        "_i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1928": {
      "op": "extract_uint64",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "asset#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "asset#0"
      ]
    },
    "1929": {
      "op": "itob",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "tmp%0#0"
      ]
    },
    "1930": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "1931": {
      "op": "frame_bury 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "tmp%0#0"
      ]
    },
    "1933": {
      "op": "box_len",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1934": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "maybe_exists%0#0"
      ]
    },
    "1936": {
      "op": "bz get_assets_labels_else_body@4",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ]
    },
    "1939": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "tmp%0#0"
      ]
    },
    "1941": {
      "op": "box_get",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1942": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "maybe_value%1#0"
      ]
    },
    "1943": {
      "op": "bytec 6 // 0x0002",
      "defined_out": [
        "0x0002",
        "_i#0",
        "array_length%0#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "maybe_value%1#0",
        "0x0002"
      ]
    },
    "1945": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "0x0002",
        "maybe_value%1#0"
      ]
    },
    "1946": {
      "op": "concat",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "result%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "result%1#0"
      ]
    },
    "1947": {
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "out#0",
        "result%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "result%1#0",
        "out#0"
      ]
    },
    "1949": {
      "op": "dup",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "out#0",
        "out#0 (copy)",
        "result%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "result%1#0",
        "out#0",
        "out#0 (copy)"
      ]
    },
    "1950": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "result%1#0",
        "out#0",
        "out#0 (copy)",
        "0"
      ]
    },
    "1951": {
      "op": "extract_uint16",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "l_count%0#0",
        "out#0",
        "result%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "result%1#0",
        "out#0",
        "l_count%0#0"
      ]
    },
    "1952": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "result%1#0",
        "l_count%0#0",
        "out#0"
      ]
    },
    "1953": {
      "op": "extract 2 0",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "out#0",
        "result%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "1956": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "_i#0",
        "array_length%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "out#0",
        "result%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1"
      ]
    },
    "1957": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1",
        "result%1#0"
      ]
    },
    "1959": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "out#0"
      ]
    },
    "1962": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0",
        "array_length%0#0",
        "out#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ]
    },
    "1964": {
      "block": "get_assets_labels_after_if_else@5",
      "stack_in": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "1966": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "_i#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "1967": {
      "op": "+",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "1968": {
      "op": "frame_bury 3",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ]
    },
    "1970": {
      "op": "b get_assets_labels_for_header@1"
    },
    "1973": {
      "block": "get_assets_labels_else_body@4",
      "stack_in": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "out#0"
      ]
    },
    "1975": {
      "op": "dup",
      "defined_out": [
        "out#0",
        "out#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "out#0",
        "out#0 (copy)"
      ]
    },
    "1976": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "out#0",
        "out#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "out#0",
        "out#0 (copy)",
        "0"
      ]
    },
    "1977": {
      "op": "extract_uint16",
      "defined_out": [
        "l_count%1#0",
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "out#0",
        "l_count%1#0"
      ]
    },
    "1978": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "l_count%1#0",
        "out#0"
      ]
    },
    "1979": {
      "op": "extract 2 0",
      "defined_out": [
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "l_count%1#0",
        "l_head_and_tail%1#0"
      ]
    },
    "1982": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "1"
      ]
    },
    "1983": {
      "op": "pushbytes 0x00020000",
      "defined_out": [
        "0x00020000",
        "1",
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "1",
        "0x00020000"
      ]
    },
    "1989": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "out#0"
      ]
    },
    "1992": {
      "op": "frame_bury 1",
      "defined_out": [
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ]
    },
    "1994": {
      "op": "b get_assets_labels_after_if_else@5"
    },
    "1997": {
      "block": "get_assets_labels_after_for@7",
      "stack_in": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "out#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "out#0",
        "array_length%0#0",
        "_i#0",
        "out#0"
      ]
    },
    "1999": {
      "op": "frame_bury 0"
    },
    "2001": {
      "retsub": true,
      "op": "retsub"
    }
  }
}